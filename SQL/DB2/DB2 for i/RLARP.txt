
CREATE TABLE RLARP.FF ( 
	F CHAR(1) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FF         ; 
  
LABEL ON TABLE RLARP.FF 
	IS 'Single column,row table for simple selects' ; 
  

  
CREATE TABLE RLARP.FFCHNL ( 
	BILL CHAR(4) CCSID 37 DEFAULT NULL , 
	SHIP CHAR(4) CCSID 37 DEFAULT NULL , 
	CHAN VARCHAR(30) CCSID 37 DEFAULT NULL , 
	VERS VARCHAR(30) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFCHNL     ; 
  
LABEL ON TABLE RLARP.FFCHNL 
	IS 'CHANNELS' ; 

  
CREATE TABLE RLARP.FFCOLR ( 
	COLOR VARCHAR(3) CCSID 37 DEFAULT NULL , 
	DESCR VARCHAR(255) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFCOLR     ; 
  
LABEL ON TABLE RLARP.FFCOLR 
	IS 'Color Listing' ; 

  
CREATE TABLE RLARP.FFCOSTEFFD ( 
	"PART" CHAR(20) CCSID 37 NOT NULL DEFAULT '' , 
	PLNT CHAR(3) CCSID 37 NOT NULL DEFAULT '' , 
	FDT DATE NOT NULL DEFAULT CURRENT_DATE , 
	FTM TIME NOT NULL DEFAULT CURRENT_TIME , 
	FRI CHAR(12) CCSID 37 NOT NULL DEFAULT '' , 
	TDT DATE NOT NULL DEFAULT CURRENT_DATE , 
	TTM TIME NOT NULL DEFAULT CURRENT_TIME , 
	TRI CHAR(12) CCSID 37 NOT NULL DEFAULT '' , 
	FCOST DECIMAL(11, 5) NOT NULL DEFAULT 0 , 
	TCOST DECIMAL(11, 5) NOT NULL DEFAULT 0 , 
	TQTY NUMERIC(15, 5) NOT NULL DEFAULT 0 )   
	  
	RCDFMT FFCOSTEFFD ; 
  
LABEL ON TABLE RLARP.FFCOSTEFFD 
	IS 'COST ROLL EFFECTIVE DATE RANGE & QTY ON HAND' ; 
  
LABEL ON COLUMN RLARP.FFCOSTEFFD 
( "PART" TEXT IS 'JHPART' , 
	PLNT TEXT IS 'JHPLNT' , 
	FDT TEXT IS 'JHDATE' , 
	FTM TEXT IS 'JHTIME' , 
	FRI TEXT IS 'JHRCID' , 
	TDT TEXT IS 'JHDATE' , 
	TTM TEXT IS 'JHTIME' , 
	TRI TEXT IS 'JHRCID' , 
	FCOST TEXT IS 'JHTOTO' , 
	TCOST TEXT IS 'JHTOTN' , 
	TQTY TEXT IS 'JHOHQT' ) ; 
  
  
CREATE TABLE RLARP.FFCRED ( 
	CUSTG VARCHAR(50) CCSID 37 DEFAULT NULL , 
	VERS VARCHAR(30) CCSID 37 DEFAULT NULL , 
	CRED DOUBLE PRECISION DEFAULT NULL , 
	REBT DOUBLE PRECISION DEFAULT NULL )   
	  
	RCDFMT FFCRED     ; 
  
LABEL ON TABLE RLARP.FFCRED 
	IS 'R&A RATES' ; 
  

  
CREATE TABLE RLARP.FFCRET ( 
	FCUR VARCHAR(2) CCSID 37 DEFAULT NULL , 
	TCUR VARCHAR(2) CCSID 37 DEFAULT NULL , 
	RTYP VARCHAR(2) CCSID 37 DEFAULT NULL , 
	PERD VARCHAR(4) CCSID 37 DEFAULT NULL , 
	RATE DOUBLE PRECISION DEFAULT NULL )   
	  
	RCDFMT FFCRET     ; 
  
LABEL ON TABLE RLARP.FFCRET 
	IS 'Currency Exchange Rates' ; 
  

  
CREATE TABLE RLARP.FFCUST ( 
	CUSTN VARCHAR(8) CCSID 37 DEFAULT NULL , 
	CGRP VARCHAR(30) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFCUST     ; 
  
LABEL ON TABLE RLARP.FFCUST 
	IS 'CUSTOMER LISTING WITH CONOSLIDATING NAMES' ; 
  
  
CREATE TABLE RLARP.FFFODO ( 
	VERS VARCHAR(20) CCSID 37 DEFAULT NULL , 
	CATG VARCHAR(255) CCSID 37 DEFAULT NULL , 
	CTYP VARCHAR(20) CCSID 37 DEFAULT NULL , 
	REQD INTEGER DEFAULT NULL , 
	SHPD INTEGER DEFAULT NULL )   
	  
	RCDFMT FFFODO     ; 
  
LABEL ON TABLE RLARP.FFFODO 
	IS 'SHIPMENT DAYS LOGIC FOR FFFORD' ; 
  

  
CREATE TABLE RLARP.FFFORD ( 
	"VERSION" VARCHAR(10) CCSID 37 DEFAULT NULL , 
	PLNT CHAR(3) CCSID 37 DEFAULT NULL , 
	BCUS VARCHAR(8) CCSID 37 DEFAULT NULL , 
	SCUS VARCHAR(8) CCSID 37 DEFAULT NULL , 
	"PART" VARCHAR(20) CCSID 37 DEFAULT NULL , 
	QTY DOUBLE PRECISION DEFAULT NULL , 
	CURR CHAR(2) CCSID 37 DEFAULT NULL , 
	"VALUE" DECIMAL(16, 2) DEFAULT NULL , 
	ORD_DATE DATE DEFAULT NULL , 
	ORD_PERD VARCHAR(4) CCSID 37 DEFAULT NULL , 
	REQ_DATE DATE DEFAULT NULL , 
	REQ_PERD VARCHAR(4) CCSID 37 DEFAULT NULL , 
	SHP_DATE DATE DEFAULT NULL , 
	SHP_PERD VARCHAR(4) CCSID 37 DEFAULT NULL , 
	MREQ_DATE DATE DEFAULT NULL , 
	MREQ_PERD CHAR(4) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFFORD     ; 
  
LABEL ON TABLE RLARP.FFFORD 
	IS 'FORECASTED ORDERS' ; 
  
 
  
CREATE TABLE RLARP.FFFR8 ( 
	F VARCHAR(30) CCSID 37 DEFAULT NULL , 
	T VARCHAR(30) CCSID 37 DEFAULT NULL , 
	TL DOUBLE PRECISION DEFAULT NULL , 
	CPM DOUBLE PRECISION DEFAULT NULL , 
	FC DOUBLE PRECISION DEFAULT NULL , 
	STOP DOUBLE PRECISION DEFAULT NULL , 
	XTMILES DOUBLE PRECISION DEFAULT NULL , 
	CARRIER VARCHAR(30) CCSID 37 DEFAULT NULL , 
	"VERSION" VARCHAR(30) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFFR8      ; 
  
LABEL ON TABLE RLARP.FFFR8 
	IS 'Freight Rates' ; 
  

  
CREATE TABLE RLARP.FFFRTR ( 
	FP CHAR(2) CCSID 37 DEFAULT NULL , 
	TP CHAR(2) CCSID 37 DEFAULT NULL , 
	VERS VARCHAR(30) CCSID 37 DEFAULT NULL , 
	PRATE DOUBLE PRECISION DEFAULT NULL )   
	  
	RCDFMT FFFRTR     ; 
  
LABEL ON TABLE RLARP.FFFRTR 
	IS 'FREIGHT RATES' ; 
  
  
CREATE TABLE RLARP.FFFX ( 
	PERD VARCHAR(4) CCSID 37 DEFAULT NULL , 
	BS DOUBLE PRECISION DEFAULT NULL , 
	"IS" DOUBLE PRECISION DEFAULT NULL )   
	  
	RCDFMT FFFX       ; 
  
LABEL ON TABLE RLARP.FFFX 
	IS 'EXCHANGE RATES' ; 
  
  
CREATE TABLE RLARP.FFICSTX ( 
	"PART" VARCHAR(20) CCSID 37 DEFAULT NULL , 
	PLNT CHAR(3) CCSID 37 DEFAULT NULL , 
	FST CHAR(19) CCSID 37 DEFAULT NULL , 
	FRI CHAR(12) CCSID 37 DEFAULT NULL , 
	TST CHAR(19) CCSID 37 DEFAULT NULL , 
	TRI CHAR(12) CCSID 37 DEFAULT NULL , 
	MAT DECIMAL(11, 5) DEFAULT NULL , 
	FRT DECIMAL(11, 5) DEFAULT NULL , 
	DUT DECIMAL(11, 5) DEFAULT NULL , 
	SAH DECIMAL(11, 5) DEFAULT NULL , 
	CUR DECIMAL(11, 5) DEFAULT NULL , 
	ML1 DECIMAL(11, 5) DEFAULT NULL , 
	ML2 DECIMAL(11, 5) DEFAULT NULL , 
	LAB DECIMAL(11, 5) DEFAULT NULL , 
	VBR DECIMAL(11, 5) DEFAULT NULL , 
	FBR DECIMAL(11, 5) DEFAULT NULL , 
	OBR DECIMAL(11, 5) DEFAULT NULL , 
	TOT DECIMAL(11, 5) DEFAULT NULL , 
	QOH DECIMAL(15, 5) DEFAULT NULL )   
	  
	RCDFMT FFICSTX    ; 
  
LABEL ON TABLE RLARP.FFICSTX 
	IS 'ALL PART-PLANT COSTS CURRENT & HISTORY' ; 
  

  
CREATE TABLE RLARP.FFICSTX_E ( 
	"PART" VARCHAR(20) CCSID 37 DEFAULT NULL , 
	PLNT CHAR(3) CCSID 37 DEFAULT NULL , 
	FST CHAR(19) CCSID 37 DEFAULT NULL , 
	FRI CHAR(12) CCSID 37 DEFAULT NULL , 
	TST CHAR(19) CCSID 37 DEFAULT NULL , 
	TRI CHAR(12) CCSID 37 DEFAULT NULL , 
	MAT DECIMAL(11, 5) DEFAULT NULL , 
	FRT DECIMAL(11, 5) DEFAULT NULL , 
	DUT DECIMAL(11, 5) DEFAULT NULL , 
	SAH DECIMAL(11, 5) DEFAULT NULL , 
	CUR DECIMAL(11, 5) DEFAULT NULL , 
	ML1 DECIMAL(11, 5) DEFAULT NULL , 
	ML2 DECIMAL(11, 5) DEFAULT NULL , 
	LAB DECIMAL(11, 5) DEFAULT NULL , 
	VBR DECIMAL(11, 5) DEFAULT NULL , 
	FBR DECIMAL(11, 5) DEFAULT NULL , 
	OBR DECIMAL(11, 5) DEFAULT NULL , 
	TOT DECIMAL(11, 5) DEFAULT NULL , 
	QOH DECIMAL(15, 5) DEFAULT NULL )   
	  
	RCDFMT FFICSTX_E  ; 
  
LABEL ON TABLE RLARP.FFICSTX_E 
	IS 'PART-PLNT COST HISTORY EXPORT FILE' ; 
  
  
CREATE TABLE RLARP.FFMGRP ( 
	"PART" VARCHAR(20) CCSID 37 DEFAULT NULL , 
	"GROUP" VARCHAR(20) CCSID 37 DEFAULT NULL , 
	FCST VARCHAR(20) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFMGRP     ; 
  
LABEL ON TABLE RLARP.FFMGRP 
	IS 'ALTERNATE MATERIAL GROUPINGS' ; 
  

  
CREATE TABLE RLARP.FFMRP ( 
	BUILD VARCHAR(20) CCSID 37 DEFAULT NULL , 
	MAST VARCHAR(20) CCSID 37 DEFAULT NULL , 
	MPLT VARCHAR(3) CCSID 37 DEFAULT NULL , 
	TLVL VARCHAR(20) CCSID 37 DEFAULT NULL , 
	TPART VARCHAR(50) CCSID 37 DEFAULT NULL , 
	DESCR VARCHAR(100) CCSID 37 DEFAULT NULL , 
	PLINE VARCHAR(255) CCSID 37 DEFAULT NULL , 
	CLINE VARCHAR(255) CCSID 37 DEFAULT NULL , 
	"PART" VARCHAR(20) CCSID 37 DEFAULT NULL , 
	CPLNT VARCHAR(3) CCSID 37 DEFAULT NULL , 
	STAT VARCHAR(1) CCSID 37 DEFAULT NULL , 
	REPL VARCHAR(1) CCSID 37 DEFAULT NULL , 
	SPLNT VARCHAR(3) CCSID 37 DEFAULT NULL , 
	SEQ INTEGER DEFAULT NULL , 
	DEP VARCHAR(5) CCSID 37 DEFAULT NULL , 
	RESC VARCHAR(20) CCSID 37 DEFAULT NULL , 
	OPC VARCHAR(20) CCSID 37 DEFAULT NULL , 
	AOREPP VARCHAR(1) CCSID 37 DEFAULT NULL , 
	REFF DOUBLE PRECISION DEFAULT NULL , 
	XREFF DOUBLE PRECISION DEFAULT NULL , 
	RQBY VARCHAR(1) CCSID 37 DEFAULT NULL , 
	BACK VARCHAR(1) CCSID 37 DEFAULT NULL , 
	SCRP DOUBLE PRECISION DEFAULT NULL , 
	RQTY DOUBLE PRECISION DEFAULT NULL , 
	ERQTY DOUBLE PRECISION DEFAULT NULL , 
	ERQTYS DOUBLE PRECISION DEFAULT NULL , 
	UNTI VARCHAR(3) CCSID 37 DEFAULT NULL , 
	BUOM VARCHAR(3) CCSID 37 DEFAULT NULL , 
	CONV DOUBLE PRECISION DEFAULT NULL , 
	CPC VARCHAR(2) CCSID 37 DEFAULT NULL , 
	SPC VARCHAR(2) CCSID 37 DEFAULT NULL , 
	SDT VARCHAR(10) CCSID 37 DEFAULT NULL , 
	BASE DOUBLE PRECISION DEFAULT NULL , 
	FRT DOUBLE PRECISION DEFAULT NULL , 
	DUTY DOUBLE PRECISION DEFAULT NULL , 
	MISC1 DOUBLE PRECISION DEFAULT NULL , 
	MISC2 DOUBLE PRECISION DEFAULT NULL , 
	CURR DOUBLE PRECISION DEFAULT NULL , 
	SAH DOUBLE PRECISION DEFAULT NULL , 
	FRT_TO DOUBLE PRECISION DEFAULT NULL , 
	FRT_FROM DOUBLE PRECISION DEFAULT NULL , 
	SUBC DOUBLE PRECISION DEFAULT NULL , 
	RUNTIME DOUBLE PRECISION DEFAULT NULL , 
	RUNCREW DOUBLE PRECISION DEFAULT NULL , 
	SETTIME DOUBLE PRECISION DEFAULT NULL , 
	RUNSIZE DOUBLE PRECISION DEFAULT NULL , 
	SETCREW DOUBLE PRECISION DEFAULT NULL , 
	LABRATE DOUBLE PRECISION DEFAULT NULL , 
	FIXRATE DOUBLE PRECISION DEFAULT NULL , 
	VARRATE DOUBLE PRECISION DEFAULT NULL , 
	LABRUN DOUBLE PRECISION DEFAULT NULL , 
	FIXRUN DOUBLE PRECISION DEFAULT NULL , 
	VARRUN DOUBLE PRECISION DEFAULT NULL , 
	LABSET DOUBLE PRECISION DEFAULT NULL , 
	FIXSET DOUBLE PRECISION DEFAULT NULL , 
	VARSET DOUBLE PRECISION DEFAULT NULL , 
	BASEX DOUBLE PRECISION DEFAULT NULL , 
	FRTX DOUBLE PRECISION DEFAULT NULL , 
	CURRX DOUBLE PRECISION DEFAULT NULL , 
	OTHMX DOUBLE PRECISION DEFAULT NULL , 
	SUBCX DOUBLE PRECISION DEFAULT NULL , 
	LABRX DOUBLE PRECISION DEFAULT NULL , 
	FIXRX DOUBLE PRECISION DEFAULT NULL , 
	VARRX DOUBLE PRECISION DEFAULT NULL , 
	LABSX DOUBLE PRECISION DEFAULT NULL , 
	FIXSX DOUBLE PRECISION DEFAULT NULL , 
	VARSX DOUBLE PRECISION DEFAULT NULL , 
	BASEXS DOUBLE PRECISION DEFAULT NULL , 
	FRTXS DOUBLE PRECISION DEFAULT NULL , 
	CURRXS DOUBLE PRECISION DEFAULT NULL , 
	OTHMXS DOUBLE PRECISION DEFAULT NULL , 
	SUBCXS DOUBLE PRECISION DEFAULT NULL , 
	LABRXS DOUBLE PRECISION DEFAULT NULL , 
	FIXRXS DOUBLE PRECISION DEFAULT NULL , 
	VARRXS DOUBLE PRECISION DEFAULT NULL , 
	LABSXS DOUBLE PRECISION DEFAULT NULL , 
	FIXSXS DOUBLE PRECISION DEFAULT NULL , 
	VARSXS DOUBLE PRECISION DEFAULT NULL )   
	  
	RCDFMT FFMRP      ; 
  
LABEL ON TABLE RLARP.FFMRP 
	IS 'EXPLODED PRODUCT STRUCTURE' ; 
  

  
CREATE TABLE RLARP.FFPDGLR1 ( 
	SRCE CHAR(4) CCSID 37 DEFAULT NULL , 
	WRKO VARCHAR(10) CCSID 37 DEFAULT NULL , 
	BTID INTEGER DEFAULT NULL , 
	ENT# INTEGER DEFAULT NULL , 
	SEQ# INTEGER DEFAULT NULL , 
	"PART" VARCHAR(20) CCSID 37 DEFAULT NULL , 
	RPLN CHAR(1) CCSID 37 DEFAULT NULL , 
	PQTY DECIMAL(15, 5) DEFAULT NULL , 
	ARSC VARCHAR(5) CCSID 37 DEFAULT NULL , 
	ADEP VARCHAR(5) CCSID 37 DEFAULT NULL , 
	ACTN VARCHAR(10) CCSID 37 DEFAULT NULL , 
	ACCT CHAR(12) CCSID 37 DEFAULT NULL , 
	AMNT DECIMAL(18, 2) DEFAULT NULL , 
	SRSC VARCHAR(5) CCSID 37 DEFAULT NULL , 
	RHRS DECIMAL(15, 5) DEFAULT NULL , 
	RCRW DECIMAL(15, 5) DEFAULT NULL , 
	SHRS DECIMAL(15, 5) DEFAULT NULL , 
	SCRW DECIMAL(15, 5) DEFAULT NULL , 
	RRAT DECIMAL(15, 5) DEFAULT NULL , 
	RSIZ DECIMAL(15, 5) DEFAULT NULL )   
	  
	RCDFMT FFPDGLR1   ; 
  
LABEL ON TABLE RLARP.FFPDGLR1 
	IS 'REBUILT PRODUCTION LEDGER FOR PRODUCTION BATCHES' ; 
  

  
CREATE TABLE RLARP.FFPDGLR1_E ( 
	SRCE CHAR(4) CCSID 37 DEFAULT NULL , 
	WRKO VARCHAR(10) CCSID 37 DEFAULT NULL , 
	BTID INTEGER DEFAULT NULL , 
	ENT# INTEGER DEFAULT NULL , 
	SEQ# INTEGER DEFAULT NULL , 
	"PART" VARCHAR(20) CCSID 37 DEFAULT NULL , 
	RPLN CHAR(1) CCSID 37 DEFAULT NULL , 
	PQTY DECIMAL(15, 5) DEFAULT NULL , 
	ARSC VARCHAR(5) CCSID 37 DEFAULT NULL , 
	ADEP VARCHAR(5) CCSID 37 DEFAULT NULL , 
	ACTN VARCHAR(10) CCSID 37 DEFAULT NULL , 
	ACCT CHAR(12) CCSID 37 DEFAULT NULL , 
	AMNT DECIMAL(18, 2) DEFAULT NULL , 
	SRSC VARCHAR(5) CCSID 37 DEFAULT NULL , 
	RHRS DECIMAL(15, 5) DEFAULT NULL , 
	RCRW DECIMAL(15, 5) DEFAULT NULL , 
	SHRS DECIMAL(15, 5) DEFAULT NULL , 
	SCRW DECIMAL(15, 5) DEFAULT NULL , 
	RRAT DECIMAL(15, 5) DEFAULT NULL , 
	RSIZ DECIMAL(15, 5) DEFAULT NULL )   
	  
	RCDFMT FFPDGLR1_E ; 
  
LABEL ON TABLE RLARP.FFPDGLR1_E 
	IS 'OUTPUT FILE FOR MID-SQL02 AS SUBSET OF FFPDGLR1' ; 
  

  
CREATE TABLE RLARP.FFPERD ( 
	FSPR CHAR(4) CCSID 37 DEFAULT NULL , 
	CAPR CHAR(4) CCSID 37 DEFAULT NULL , 
	FSYR CHAR(4) CCSID 37 DEFAULT NULL , 
	QRTR CHAR(2) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFPERD     ; 
  
LABEL ON TABLE RLARP.FFPERD 
	IS 'Fiscal Periods' ; 
  

  
CREATE TABLE RLARP.FFPORCAG ( 
	D07TXN NUMERIC(11, 0) NOT NULL DEFAULT 0 , 
	D07TYPE CHAR(1) CCSID 37 NOT NULL DEFAULT '' , 
	D07RKEY NUMERIC(11, 0) NOT NULL DEFAULT 0 , 
	D07FSPR NUMERIC(6, 0) NOT NULL DEFAULT 0 , 
	D07GLAC NUMERIC(10, 0) NOT NULL DEFAULT 0 , 
	D07AMT NUMERIC(14, 2) NOT NULL DEFAULT 0 , 
	D07REVS NUMERIC(14, 2) NOT NULL DEFAULT 0 , 
	D07CUSR CHAR(10) CCSID 37 NOT NULL DEFAULT '' , 
	D07CDAT DATE NOT NULL DEFAULT CURRENT_DATE , 
	D07CTME TIME NOT NULL DEFAULT CURRENT_TIME , 
	D07UUSR CHAR(10) CCSID 37 NOT NULL DEFAULT '' , 
	D07UDAT DATE NOT NULL DEFAULT CURRENT_DATE , 
	D07UTME TIME NOT NULL DEFAULT CURRENT_TIME )   
	  
	RCDFMT FFPORCAG   ; 
  
LABEL ON TABLE RLARP.FFPORCAG 
	IS 'MONTH END SNAPSHOTS OF PORCAG' ; 
  
LABEL ON COLUMN RLARP.FFPORCAG 
( D07TXN IS 'Transaction         Number' , 
	D07TYPE IS 'Record              Type' , 
	D07RKEY IS 'Master              Receipt Key' , 
	D07FSPR IS 'Fiscal              Period' , 
	D07GLAC IS 'G/L A/C             Number' , 
	D07AMT IS 'Amount              Posted' , 
	D07REVS IS 'Amount              Reversed' , 
	D07CUSR IS 'Created             By                  User' , 
	D07CDAT IS 'Date                Created' , 
	D07CTME IS 'Time                Created' , 
	D07UUSR IS 'Updated             By                  User' , 
	D07UDAT IS 'Date                Updated' , 
	D07UTME IS 'Time                Updated' ) ; 
  
LABEL ON COLUMN RLARP.FFPORCAG 
( D07TXN TEXT IS 'Transaction Number' , 
	D07TYPE TEXT IS 'Record Type' , 
	D07RKEY TEXT IS 'Master Receipt Key' , 
	D07FSPR TEXT IS 'Fiscal Period' , 
	D07GLAC TEXT IS 'G/L A/C  Number' , 
	D07AMT TEXT IS 'Amount Posted' , 
	D07REVS TEXT IS 'Amount Reversed' , 
	D07CUSR TEXT IS 'Created By User' , 
	D07CDAT TEXT IS 'Date Created' , 
	D07CTME TEXT IS 'Time Created' , 
	D07UUSR TEXT IS 'Updated By User' , 
	D07UDAT TEXT IS 'Date Updated' , 
	D07UTME TEXT IS 'Time Updated' ) ; 
  

  
CREATE TABLE RLARP.FFPORCAP ( 
	KRCOM# NUMERIC(2, 0) DEFAULT NULL , 
	KRVEN# CHAR(10) CCSID 37 DEFAULT NULL , 
	KRPO# NUMERIC(9, 0) DEFAULT NULL , 
	KRREL# NUMERIC(4, 0) DEFAULT NULL , 
	KRPOI# NUMERIC(3, 0) DEFAULT NULL , 
	KRRLG# NUMERIC(9, 0) DEFAULT NULL , 
	KRSHP# CHAR(30) CCSID 37 DEFAULT NULL , 
	KRRINT CHAR(10) CCSID 37 DEFAULT NULL , 
	KRRDAT DATE DEFAULT NULL , 
	KRUPRC DECIMAL(13, 5) DEFAULT NULL , 
	KRPUNT CHAR(3) CCSID 37 DEFAULT NULL , 
	KRQREC DECIMAL(15, 5) DEFAULT NULL , 
	KROUNT CHAR(3) CCSID 37 DEFAULT NULL , 
	KRSCST DECIMAL(11, 5) DEFAULT NULL , 
	KRSUNT CHAR(3) CCSID 37 DEFAULT NULL , 
	KRPT# CHAR(20) CCSID 37 DEFAULT NULL , 
	KRDESC CHAR(30) CCSID 37 DEFAULT NULL , 
	KRGLEX NUMERIC(10, 0) DEFAULT NULL , 
	KRAPRC DECIMAL(13, 5) DEFAULT NULL , 
	KRBTC# NUMERIC(2, 0) DEFAULT NULL , 
	KRVCH# NUMERIC(6, 0) DEFAULT NULL , 
	KRUFLG CHAR(1) CCSID 37 DEFAULT NULL , 
	KRGLVR NUMERIC(10, 0) DEFAULT NULL , 
	KRPST DECIMAL(11, 2) DEFAULT NULL , 
	KRGST DECIMAL(11, 2) DEFAULT NULL , 
	KRGST2 DECIMAL(11, 2) DEFAULT NULL , 
	KREXT DECIMAL(11, 2) DEFAULT NULL , 
	KRMLGL CHAR(1) CCSID 37 DEFAULT NULL , 
	KRITYP CHAR(1) CCSID 37 DEFAULT NULL , 
	KRJOB# CHAR(10) CCSID 37 DEFAULT NULL , 
	KRSEQ# NUMERIC(3, 0) DEFAULT NULL , 
	KRTAXG CHAR(3) CCSID 37 DEFAULT NULL , 
	KRTAXR CHAR(1) CCSID 37 DEFAULT NULL , 
	KROCST DECIMAL(11, 2) DEFAULT NULL , 
	KRTRNN NUMERIC(9, 0) DEFAULT NULL , 
	KRBQTY DECIMAL(15, 5) DEFAULT NULL , 
	KRBUNT CHAR(3) CCSID 37 DEFAULT NULL , 
	KRHSTS CHAR(1) CCSID 37 DEFAULT NULL , 
	KRAEXR DECIMAL(11, 6) DEFAULT NULL , 
	KRSUC DECIMAL(11, 5) DEFAULT NULL , 
	KRUFDC DECIMAL(11, 5) DEFAULT NULL , 
	KRPPV DECIMAL(11, 2) DEFAULT NULL , 
	KRSEXR DECIMAL(11, 6) DEFAULT NULL , 
	KRFXGL DECIMAL(15, 5) DEFAULT NULL , 
	KRDXGL DECIMAL(15, 5) DEFAULT NULL , 
	KRATSN NUMERIC(15, 0) DEFAULT NULL , 
	KRPLNT CHAR(3) CCSID 37 DEFAULT NULL , 
	KRTRCD NUMERIC(15, 0) DEFAULT NULL , 
	KRIVYR NUMERIC(4, 0) DEFAULT NULL , 
	KRIVPR NUMERIC(2, 0) DEFAULT NULL , 
	KRINVA NUMERIC(10, 0) DEFAULT NULL , 
	KRFLG1 CHAR(1) CCSID 37 DEFAULT NULL , 
	KRFLG2 CHAR(1) CCSID 37 DEFAULT NULL , 
	KRFLG3 CHAR(1) CCSID 37 DEFAULT NULL , 
	KRFLG4 CHAR(1) CCSID 37 DEFAULT NULL , 
	KRFLG5 CHAR(1) CCSID 37 DEFAULT NULL , 
	KRFUT1 CHAR(10) CCSID 37 DEFAULT NULL , 
	KRFUT2 CHAR(10) CCSID 37 DEFAULT NULL , 
	KRFUT3 CHAR(20) CCSID 37 DEFAULT NULL , 
	KRFUT4 CHAR(20) CCSID 37 DEFAULT NULL , 
	KRFUT5 DECIMAL(15, 5) DEFAULT NULL , 
	KRFUT6 DECIMAL(15, 5) DEFAULT NULL , 
	KRFUT7 DECIMAL(15, 5) DEFAULT NULL , 
	KRRSDL NUMERIC(3, 0) DEFAULT NULL , 
	KRLNOT CHAR(30) CCSID 37 DEFAULT NULL , 
	KR1XGL DECIMAL(15, 5) DEFAULT NULL , 
	KR2XGL DECIMAL(15, 5) DEFAULT NULL , 
	KRUM1C DECIMAL(11, 5) DEFAULT NULL , 
	KRUM2C DECIMAL(11, 5) DEFAULT NULL , 
	KRSERN NUMERIC(11, 0) DEFAULT NULL , 
	KRAPST CHAR(1) CCSID 37 DEFAULT NULL , 
	KRACCI CHAR(1) CCSID 37 DEFAULT NULL , 
	KRRCVX DECIMAL(11, 6) DEFAULT NULL , 
	KRPPVA DECIMAL(11, 2) DEFAULT NULL , 
	KRFXGA DECIMAL(11, 2) DEFAULT NULL , 
	KRFXDA DECIMAL(11, 2) DEFAULT NULL , 
	KRAACC NUMERIC(10, 0) DEFAULT NULL , 
	KRPDTE DATE DEFAULT NULL , 
	KRABT# NUMERIC(11, 0) DEFAULT NULL , 
	KRAUFDC DECIMAL(15, 5) DEFAULT NULL , 
	KRAPARD DECIMAL(15, 5) DEFAULT NULL , 
	KRRKEY NUMERIC(11, 0) DEFAULT NULL , 
	KRATYP CHAR(1) CCSID 37 DEFAULT NULL , 
	KROPST DECIMAL(11, 2) DEFAULT NULL , 
	FISC CHAR(4) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFPORCAP   ; 
  
LABEL ON TABLE RLARP.FFPORCAP 
	IS 'MONTH END SNAPSHOTS OF PORCAP' ; 
  

  
CREATE TABLE RLARP.FFPROC ( 
	PROCESS VARCHAR(250) CCSID 37 DEFAULT NULL , 
	STATUS VARCHAR(250) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFPROC     ; 
  
LABEL ON TABLE RLARP.FFPROC 
	IS 'Running Processes' ; 
  
  
CREATE TABLE RLARP.FFPROCH ( 
	PROCESS VARCHAR(250) CCSID 37 DEFAULT NULL , 
	USR VARCHAR(20) CCSID 37 DEFAULT NULL , 
	"START" VARCHAR(19) CCSID 37 DEFAULT NULL , 
	"END" VARCHAR(19) CCSID 37 DEFAULT NULL , 
	RSLT VARCHAR(250) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFPROCH    ; 
  
LABEL ON TABLE RLARP.FFPROCH 
	IS 'Process history' ; 
  
  
CREATE TABLE RLARP.FFPTPL ( 
	"PART" VARCHAR(20) CCSID 37 DEFAULT NULL , 
	PLNT VARCHAR(3) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFPTPL     ; 
  
LABEL ON TABLE RLARP.FFPTPL 
	IS 'Part, Plant Listing' ; 
  
  
CREATE TABLE RLARP.FFRGRP ( 
	DEPT VARCHAR(5) CCSID 37 DEFAULT NULL , 
	RESC VARCHAR(5) CCSID 37 DEFAULT NULL , 
	"GROUP" VARCHAR(20) CCSID 37 DEFAULT NULL , 
	OP VARCHAR(20) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFRGRP     ; 
  
LABEL ON TABLE RLARP.FFRGRP 
	IS 'ALTERNATE RESOURCE GROUPS' ; 
  

  
CREATE TABLE RLARP.FFRPRD ( 
	NXBTID NUMERIC(9, 0) NOT NULL DEFAULT 0 , 
	NXENT# NUMERIC(5, 0) NOT NULL DEFAULT 0 , 
	NXDEPT CHAR(5) CCSID 37 NOT NULL DEFAULT '' , 
	NXRESC CHAR(5) CCSID 37 NOT NULL DEFAULT '' , 
	NXRDAT DATE NOT NULL DEFAULT '0001-01-01' , 
	NXINDC CHAR(10) CCSID 37 NOT NULL DEFAULT '' , 
	NXTIME NUMERIC(4, 2) NOT NULL DEFAULT 0 , 
	NXSDAT CHAR(19) CCSID 37 NOT NULL DEFAULT '0001-01-01 00:00:00' , 
	NXEDAT CHAR(19) CCSID 37 NOT NULL DEFAULT '0001-01-01 00:00:00' , 
	NXPART CHAR(20) CCSID 37 NOT NULL DEFAULT '' , 
	NXJOB# CHAR(10) CCSID 37 NOT NULL DEFAULT '' , 
	NXSEQ# NUMERIC(3, 0) NOT NULL DEFAULT 0 )   
	  
	RCDFMT FFRPRD     ; 
  
LABEL ON TABLE RLARP.FFRPRD 
	IS 'EXPORT FILE TO MID-SQL02 FOR RPRD SELECTIONS' ; 
  

  
CREATE TABLE RLARP.FFRPRH ( 
	NWBTID DECIMAL(9, 0) DEFAULT NULL , 
	NWLABL VARCHAR(10) CCSID 37 DEFAULT NULL , 
	NWBPRT VARCHAR(1) CCSID 37 DEFAULT NULL , 
	NWPOST VARCHAR(1) CCSID 37 DEFAULT NULL , 
	NWFSYY DECIMAL(2, 0) DEFAULT NULL , 
	NWFSPP DECIMAL(2, 0) DEFAULT NULL , 
	NWRDAT DATE DEFAULT NULL , 
	NWTMZN VARCHAR(4) CCSID 37 DEFAULT NULL , 
	NWSHFT DECIMAL(1, 0) DEFAULT NULL , 
	NWSHGP VARCHAR(1) CCSID 37 DEFAULT NULL , 
	NWNXT# DECIMAL(5, 0) DEFAULT NULL , 
	NWCRBY VARCHAR(10) CCSID 37 DEFAULT NULL , 
	NWCDAT DATE DEFAULT NULL , 
	NWCTIM TIME DEFAULT NULL , 
	NWUPBY VARCHAR(10) CCSID 37 DEFAULT NULL , 
	NWUDAT DATE DEFAULT NULL , 
	NWSRCE VARCHAR(3) CCSID 37 DEFAULT NULL , 
	NWSTKL VARCHAR(6) CCSID 37 DEFAULT NULL , 
	NWSCPR VARCHAR(1) CCSID 37 DEFAULT NULL , 
	NWAPFC VARCHAR(1) CCSID 37 DEFAULT NULL , 
	NWAPCP VARCHAR(1) CCSID 37 DEFAULT NULL , 
	NWFUT3 VARCHAR(10) CCSID 37 DEFAULT NULL , 
	NWFUT5 VARCHAR(20) CCSID 37 DEFAULT NULL , 
	NWFUT9 DECIMAL(15, 5) DEFAULT NULL , 
	NWPLNT VARCHAR(3) CCSID 37 DEFAULT NULL , 
	NWSHFS DECIMAL(2, 0) DEFAULT NULL , 
	PERD CHAR(4) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFRPRH     ; 
  
LABEL ON TABLE RLARP.FFRPRH 
	IS 'EXPORT FILE TO MID-SQL02 FOR RPRH SELECTIONS' ; 
  

  
CREATE TABLE RLARP.FFRPRM ( 
	UIBTID DECIMAL(9, 0) DEFAULT NULL , 
	UIENT# DECIMAL(6, 0) DEFAULT NULL , 
	UIDEPT CHAR(5) CCSID 37 DEFAULT NULL , 
	UIRESC CHAR(5) CCSID 37 DEFAULT NULL , 
	UISRCC CHAR(3) CCSID 37 DEFAULT NULL , 
	UIPART VARCHAR(20) CCSID 37 DEFAULT NULL , 
	UIJOB# VARCHAR(10) CCSID 37 DEFAULT NULL , 
	UISEQ# DECIMAL(3, 0) DEFAULT NULL , 
	UIRQTY DECIMAL(8, 0) DEFAULT NULL , 
	UIUNIT VARCHAR(3) CCSID 37 DEFAULT NULL , 
	UIMTLP VARCHAR(20) CCSID 37 DEFAULT NULL , 
	UIUNMT VARCHAR(3) CCSID 37 DEFAULT NULL , 
	UIQPPC DECIMAL(15, 5) DEFAULT NULL , 
	UIMULT DECIMAL(6, 2) DEFAULT NULL , 
	UITQTY DECIMAL(15, 5) DEFAULT NULL , 
	UISTKL VARCHAR(6) CCSID 37 DEFAULT NULL , 
	UIRQBY CHAR(1) CCSID 37 DEFAULT NULL , 
	UIBKFL CHAR(1) CCSID 37 DEFAULT NULL , 
	UIPOST CHAR(1) CCSID 37 DEFAULT NULL , 
	UIPENT DECIMAL(5, 0) DEFAULT NULL , 
	UIMSEQ DECIMAL(3, 0) DEFAULT NULL )   
	  
	RCDFMT FFRPRM     ; 
  
LABEL ON TABLE RLARP.FFRPRM 
	IS 'EXPORT FILE TO MID-SQL02 FOR RPRM SELECTIONS' ; 
  

  
CREATE TABLE RLARP.FFRPRP ( 
	OEBTID DECIMAL(9, 0) DEFAULT NULL , 
	OEENT# DECIMAL(5, 0) DEFAULT NULL , 
	OEDEPT VARCHAR(5) CCSID 37 DEFAULT NULL , 
	OERESC VARCHAR(5) CCSID 37 DEFAULT NULL , 
	OEPART VARCHAR(20) CCSID 37 DEFAULT NULL , 
	OEJOB# VARCHAR(10) CCSID 37 DEFAULT NULL , 
	OESEQ# DECIMAL(3, 0) DEFAULT NULL , 
	OESER# DECIMAL(11, 0) DEFAULT NULL , 
	OESQTY DECIMAL(15, 5) DEFAULT NULL , 
	OEUNIT VARCHAR(3) CCSID 37 DEFAULT NULL , 
	OEREAS VARCHAR(2) CCSID 37 DEFAULT NULL , 
	OEMODE VARCHAR(1) CCSID 37 DEFAULT NULL , 
	OECDPT VARCHAR(5) CCSID 37 DEFAULT NULL , 
	OECRSC VARCHAR(5) CCSID 37 DEFAULT NULL , 
	OEEDPT VARCHAR(5) CCSID 37 DEFAULT NULL , 
	OEEMPL VARCHAR(5) CCSID 37 DEFAULT NULL , 
	OESRCE VARCHAR(3) CCSID 37 DEFAULT NULL , 
	OEPOST VARCHAR(1) CCSID 37 DEFAULT NULL , 
	OEPENT DECIMAL(5, 0) DEFAULT NULL )   
	  
	RCDFMT FFRPRP     ; 
  
LABEL ON TABLE RLARP.FFRPRP 
	IS 'EXPORT FILE TO MID-SQL02 FOR RPRP SELECTIONS' ; 
  
  
CREATE TABLE RLARP.FFRPRQ ( 
	TIBTID DECIMAL(9, 0) DEFAULT NULL , 
	TIENT# DECIMAL(5, 0) DEFAULT NULL , 
	TIDEPT VARCHAR(5) CCSID 37 DEFAULT NULL , 
	TIRESC VARCHAR(5) CCSID 37 DEFAULT NULL , 
	TIPART VARCHAR(20) CCSID 37 DEFAULT NULL , 
	TIJOB# VARCHAR(10) CCSID 37 DEFAULT NULL , 
	TISEQ# DECIMAL(3, 0) DEFAULT NULL , 
	TIQTYP DECIMAL(15, 5) DEFAULT NULL , 
	TIUNIT VARCHAR(3) CCSID 37 DEFAULT NULL , 
	TISER# DECIMAL(11, 0) DEFAULT NULL , 
	TISTKL VARCHAR(6) CCSID 37 DEFAULT NULL , 
	TIBINL VARCHAR(10) CCSID 37 DEFAULT NULL , 
	TIPENT DECIMAL(5, 0) DEFAULT NULL , 
	TIPOST CHAR(1) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFRPRQ     ; 
  
LABEL ON TABLE RLARP.FFRPRQ 
	IS 'EXPORT FILE TO MID-SQL02 FOR RPRQ SELECTIONS' ; 
  
 
  
CREATE TABLE RLARP.FFRPRR_E ( 
	OABTID NUMERIC(9, 0) NOT NULL DEFAULT 0 , 
	OAENT# NUMERIC(5, 0) NOT NULL DEFAULT 0 , 
	OADEPT CHAR(5) CCSID 37 NOT NULL DEFAULT '' , 
	OARESC CHAR(5) CCSID 37 NOT NULL DEFAULT '' , 
	OARDAT DATE NOT NULL DEFAULT CURRENT_DATE , 
	OASHFT NUMERIC(1, 0) NOT NULL DEFAULT 0 , 
	OASHGP CHAR(1) CCSID 37 NOT NULL DEFAULT '' , 
	OAPART CHAR(20) CCSID 37 NOT NULL DEFAULT '' , 
	OAJOB# CHAR(10) CCSID 37 NOT NULL DEFAULT '' , 
	OASEQ# NUMERIC(3, 0) NOT NULL DEFAULT 0 , 
	OAQTYG NUMERIC(15, 5) NOT NULL DEFAULT 0 , 
	OAQTYS NUMERIC(15, 5) NOT NULL DEFAULT 0 , 
	OAUNIT CHAR(3) CCSID 37 NOT NULL DEFAULT '' , 
	OATIME NUMERIC(4, 2) NOT NULL DEFAULT 0 , 
	OASDAT DATE NOT NULL DEFAULT CURRENT_DATE , 
	OASTIM TIME NOT NULL DEFAULT CURRENT_TIME , 
	OATMZN CHAR(4) CCSID 37 NOT NULL DEFAULT '' , 
	OAEDAT DATE NOT NULL DEFAULT CURRENT_DATE , 
	OAETIM TIME NOT NULL DEFAULT CURRENT_TIME , 
	OASRCE CHAR(3) CCSID 37 NOT NULL DEFAULT '' , 
	OASTAT CHAR(1) CCSID 37 NOT NULL DEFAULT '' , 
	OAPOST CHAR(1) CCSID 37 NOT NULL DEFAULT '' , 
	OAFUT01 CHAR(1) CCSID 37 NOT NULL DEFAULT '' , 
	PERD CHAR(4) CCSID 37 NOT NULL DEFAULT '' , 
	NWLABL CHAR(10) CCSID 37 NOT NULL DEFAULT '' , 
	NWPLNT CHAR(3) CCSID 37 NOT NULL DEFAULT '' )   
	  
	RCDFMT FFRPRR_E   ; 
  
LABEL ON TABLE RLARP.FFRPRR_E 
	IS 'EXPORT FILE TO MID-SQL02 FOR RPRR SELECTIONS' ; 
  
LABEL ON COLUMN RLARP.FFRPRR_E 
( OABTID IS 'Batch ID' , 
	OAENT# IS 'Batch               Entry #' , 
	OADEPT IS 'Department' , 
	OARESC IS 'Resource' , 
	OARDAT IS 'Report              Date' , 
	OASHFT IS 'Shift' , 
	OASHGP IS 'Shift               Group' , 
	OAPART IS 'Part #' , 
	OAJOB# IS 'Work Order' , 
	OASEQ# IS 'Seq #' , 
	OAQTYG IS 'Quantity            Good' , 
	OAQTYS IS 'Quantity            Scrapped' , 
	OAUNIT IS 'Units' , 
	OATIME IS 'Time                HH.HH' , 
	OASDAT IS 'Start               Date' , 
	OASTIM IS 'Start               Time' , 
	OATMZN IS 'Time                Zone                Code' , 
	OAEDAT IS 'End                 Date' , 
	OAETIM IS 'End                 Time' , 
	OASRCE IS 'Source' , 
	OASTAT IS 'Status' , 
	OAPOST IS 'Posted' , 
	OAFUT01 IS 'WIP                 Adjustment          Entry' , 
	NWLABL IS 'Batch               Label' , 
	NWPLNT IS 'Plant               Code' ) ; 
  
LABEL ON COLUMN RLARP.FFRPRR_E 
( OABTID TEXT IS 'Batch ID' , 
	OAENT# TEXT IS 'Batch Entry #' , 
	OADEPT TEXT IS 'Department' , 
	OARESC TEXT IS 'Resource' , 
	OARDAT TEXT IS 'Report Date' , 
	OASHFT TEXT IS 'Shift' , 
	OASHGP TEXT IS 'Shift Group' , 
	OAPART TEXT IS 'Part #' , 
	OAJOB# TEXT IS 'Work Order' , 
	OASEQ# TEXT IS 'Seq #' , 
	OAQTYG TEXT IS 'Quantity Good' , 
	OAQTYS TEXT IS 'Quantity Scrapped' , 
	OAUNIT TEXT IS 'Units' , 
	OATIME TEXT IS 'Time HH.HH' , 
	OASDAT TEXT IS 'Start Date' , 
	OASTIM TEXT IS 'Start Time' , 
	OATMZN TEXT IS 'Time Zone Code' , 
	OAEDAT TEXT IS 'End Date' , 
	OAETIM TEXT IS 'End Time' , 
	OASRCE TEXT IS 'Source' , 
	OASTAT TEXT IS 'Status' , 
	OAPOST TEXT IS 'Posted' , 
	OAFUT01 TEXT IS 'WIP Adjustment Entry' , 
	PERD TEXT IS 'DIGITS(NWFSYY)||DIGITS(NWFSPP)' , 
	NWLABL TEXT IS 'Batch Label' , 
	NWPLNT TEXT IS 'Plant Code' ) ; 
  
  
CREATE TABLE RLARP.FFSBGLR1 ( 
	MODULE CHAR(4) CCSID 37 DEFAULT NULL , 
	BATCH CHAR(9) CCSID 37 DEFAULT NULL , 
	PERD CHAR(4) CCSID 37 DEFAULT NULL , 
	TDATE CHAR(10) CCSID 37 DEFAULT NULL , 
	PDATE CHAR(10) CCSID 37 DEFAULT NULL , 
	ACCT CHAR(12) CCSID 37 DEFAULT NULL , 
	AMT DOUBLE PRECISION DEFAULT NULL , 
	PROJ VARCHAR(50) CCSID 37 DEFAULT NULL , 
	USRN VARCHAR(50) CCSID 37 DEFAULT NULL , 
	REV VARCHAR(2) CCSID 37 DEFAULT NULL , 
	CUSMOD VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY1 VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY1D VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY2 VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY2D VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY3 VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY3D VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY4 VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY4D VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSVEND VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSCUST VARCHAR(50) CCSID 37 DEFAULT NULL , 
	RECID VARCHAR(12) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFSBGLR1   ; 
  
LABEL ON TABLE RLARP.FFSBGLR1 
	IS 'GL WITH MORE SOURCE REFERENCES AND GRANULARITY' ; 
  

CREATE TABLE RLARP.FFSBGLR1_E ( 
	MODULE CHAR(4) CCSID 37 DEFAULT NULL , 
	BATCH CHAR(9) CCSID 37 DEFAULT NULL , 
	PERD CHAR(4) CCSID 37 DEFAULT NULL , 
	TDATE CHAR(10) CCSID 37 DEFAULT NULL , 
	PDATE CHAR(10) CCSID 37 DEFAULT NULL , 
	ACCT CHAR(12) CCSID 37 DEFAULT NULL , 
	AMT DOUBLE PRECISION DEFAULT NULL , 
	PROJ VARCHAR(50) CCSID 37 DEFAULT NULL , 
	USRN VARCHAR(50) CCSID 37 DEFAULT NULL , 
	REV VARCHAR(2) CCSID 37 DEFAULT NULL , 
	CUSMOD VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY1 VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY1D VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY2 VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY2D VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY3 VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY3D VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY4 VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY4D VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSVEND VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSCUST VARCHAR(50) CCSID 37 DEFAULT NULL , 
	RECID VARCHAR(12) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFSBGLR1_E ; 
  
LABEL ON TABLE RLARP.FFSBGLR1_E 
	IS 'EXPORT FILE TO MID-SQL02 FOR FFPDGLR1 SELECTIONS' ; 
  

  
CREATE TABLE RLARP.FFSBGLWF ( 
	MODULE CHAR(4) CCSID 37 DEFAULT NULL , 
	BATCH CHAR(9) CCSID 37 DEFAULT NULL , 
	PERD CHAR(4) CCSID 37 DEFAULT NULL , 
	TDATE CHAR(10) CCSID 37 DEFAULT NULL , 
	PDATE CHAR(10) CCSID 37 DEFAULT NULL , 
	ACCT CHAR(12) CCSID 37 DEFAULT NULL , 
	AMT DOUBLE PRECISION DEFAULT NULL , 
	PROJ VARCHAR(50) CCSID 37 DEFAULT NULL , 
	USRN VARCHAR(50) CCSID 37 DEFAULT NULL , 
	REV VARCHAR(2) CCSID 37 DEFAULT NULL , 
	CUSMOD VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY1 VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY1D VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY2 VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY2D VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY3 VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY3D VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY4 VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSKEY4D VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSVEND VARCHAR(50) CCSID 37 DEFAULT NULL , 
	CUSCUST VARCHAR(50) CCSID 37 DEFAULT NULL , 
	RECID VARCHAR(12) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFSBGLWF   ; 
  
LABEL ON TABLE RLARP.FFSBGLWF 
	IS 'FFSBGLR1 work file' ; 
  

  
CREATE TABLE RLARP.FFSTGR ( 
	SRC CHAR(6) CCSID 37 DEFAULT NULL , 
	GRP VARCHAR(255) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFSTGR     ; 
  
LABEL ON TABLE RLARP.FFSTGR 
	IS 'STKT TRANSACTION GROUPS' ; 
  
 
  
CREATE TABLE RLARP.FFSTKT ( 
	BYPART VARCHAR(20) CCSID 37 DEFAULT NULL , 
	BYSTOK VARCHAR(6) CCSID 37 DEFAULT NULL , 
	BYACTN CHAR(1) CCSID 37 DEFAULT NULL , 
	BYQTY DECIMAL(15, 5) DEFAULT NULL , 
	BYTDAT DATE DEFAULT NULL , 
	BYJREF VARCHAR(13) CCSID 37 DEFAULT NULL , 
	BYIREF VARCHAR(20) CCSID 37 DEFAULT NULL , 
	BYPREF VARCHAR(20) CCSID 37 DEFAULT NULL , 
	BYTRST VARCHAR(6) CCSID 37 DEFAULT NULL , 
	BYTRAN DECIMAL(11, 0) DEFAULT NULL , 
	BYSRC VARCHAR(3) CCSID 37 DEFAULT NULL , 
	BYREAS VARCHAR(3) CCSID 37 DEFAULT NULL , 
	BYDREF VARCHAR(30) CCSID 37 DEFAULT NULL , 
	BYSEQ# DECIMAL(3, 0) DEFAULT NULL , 
	BYBUNT VARCHAR(3) CCSID 37 DEFAULT NULL , 
	BYTQTY DECIMAL(15, 5) DEFAULT NULL , 
	BYTUNT VARCHAR(3) CCSID 37 DEFAULT NULL , 
	BYPGQT DECIMAL(15, 5) DEFAULT NULL , 
	BYPSQT DECIMAL(15, 5) DEFAULT NULL , 
	BYSDAT DATE DEFAULT NULL , 
	BYSTIM TIME DEFAULT NULL , 
	BYUSER VARCHAR(10) CCSID 37 DEFAULT NULL , 
	BYFSYY DECIMAL(4, 0) DEFAULT NULL , 
	BYFSPR DECIMAL(2, 0) DEFAULT NULL , 
	BYPLNT VARCHAR(3) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFSTKT     ; 
  
LABEL ON TABLE RLARP.FFSTKT 
	IS 'EXPORT FILE TO MID-SQL02 FOR STKT SELECTIONS' ; 
  

  
CREATE TABLE RLARP.FFTERR ( 
	PROV CHAR(2) CCSID 37 DEFAULT NULL , 
	CTRY CHAR(3) CCSID 37 DEFAULT NULL , 
	DESCR VARCHAR(30) CCSID 37 DEFAULT NULL , 
	GEO VARCHAR(30) CCSID 37 DEFAULT NULL , 
	VERS VARCHAR(30) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FFTERR     ; 
  
LABEL ON TABLE RLARP.FFTERR 
	IS 'Geography groupings' ; 
  

  
CREATE TABLE RLARP.FR8M8 ( 
	ORIG CHAR(60) CCSID 37 DEFAULT NULL , 
	DEST CHAR(60) CCSID 37 DEFAULT NULL , 
	HMILES DECIMAL(10, 6) DEFAULT NULL , 
	HSTOPS DECIMAL(10, 6) DEFAULT NULL , 
	HSC DECIMAL(10, 6) DEFAULT NULL , 
	HCPM DECIMAL(10, 6) DEFAULT NULL , 
	HRMF DECIMAL(10, 6) DEFAULT NULL , 
	QCPM DECIMAL(10, 6) DEFAULT NULL , 
	QMIN DECIMAL(10, 6) DEFAULT NULL , 
	QSC DECIMAL(10, 6) DEFAULT NULL , 
	EF CHAR(19) CCSID 37 DEFAULT NULL , 
	ET CHAR(19) CCSID 37 DEFAULT NULL )   
	  
	RCDFMT FR8M8      ; 
  
LABEL ON TABLE RLARP.FR8M8 
	IS 'The Freight Mate' ; 
  

  
CREATE INDEX RLARP.ACCT_ACTN 
	ON RLARP.FFPDGLR1 ( ACCT ASC , ACTN ASC )   
	; 
  
CREATE INDEX RLARP.BATCH 
	ON RLARP.FFSBGLR1 ( BATCH ASC )   
	; 
  
CREATE INDEX RLARP.BTID_WRKO_PART 
	FOR SYSTEM NAME BTID_00001 ON RLARP.FFPDGLR1 ( BTID ASC , WRKO ASC , ENT# ASC )   
	; 
  
CREATE UNIQUE INDEX RLARP.DEPTRESC 
	ON RLARP.FFRGRP ( DEPT ASC , RESC ASC )   
	; 
  
CREATE UNIQUE INDEX RLARP.FFCRET_UNQ 
	ON RLARP.FFCRET ( FCUR ASC , TCUR ASC , RTYP ASC , PERD ASC )   
	; 
  
CREATE UNIQUE INDEX RLARP.FFFORD_UNQ 
	ON RLARP.FFFORD ( "VERSION" ASC , PLNT ASC , BCUS ASC , SCUS ASC , "PART" ASC , CURR ASC , ORD_DATE ASC , REQ_DATE ASC )   
	; 
  
CREATE UNIQUE INDEX RLARP.FISC_KRRKEY 
	FOR SYSTEM NAME FISC_00001 ON RLARP.FFPORCAP ( FISC ASC , KRRKEY ASC )   
	; 
  
CREATE UNIQUE INDEX RLARP.FR8M8_UNQ 
	ON RLARP.FR8M8 ( ORIG ASC , DEST ASC , EF ASC , ET ASC )   
	; 
  
CREATE UNIQUE INDEX RLARP.FRI_TRI 
	ON RLARP.FFICSTX ( FRI ASC , TRI ASC )   
	; 
  
LABEL ON INDEX RLARP.FRI_TRI 
	IS 'FRI_TRI' ; 
  
CREATE INDEX RLARP.PART 
	ON RLARP.FFMGRP ( "PART" ASC )   
	; 
  
CREATE INDEX RLARP.PART_PLNT_FROM_TO 
	FOR SYSTEM NAME PART_00003 ON RLARP.FFCOSTEFFD ( "PART" ASC , PLNT ASC , FDT ASC , FTM ASC , TDT ASC , TTM ASC )   
	; 
  
CREATE INDEX RLARP.PART_PLNT_FST_TST 
	FOR SYSTEM NAME PART_00005 ON RLARP.FFICSTX ( "PART" ASC , PLNT ASC , FST ASC , TST ASC )   
	; 
  
LABEL ON INDEX RLARP.PART_PLNT_FST_TST 
	IS 'PART_PLNT_FST_TST' ; 
  
CREATE UNIQUE INDEX RLARP.PART_PLNT_RCID 
	FOR SYSTEM NAME PART_00001 ON RLARP.FFCOSTEFFD ( "PART" ASC , PLNT ASC , TRI ASC )   
	; 
  
CREATE INDEX RLARP.PART_PLNT_TRI 
	FOR SYSTEM NAME PART_00004 ON RLARP.FFICSTX ( "PART" ASC , PLNT ASC , TRI ASC )   
	; 
  
LABEL ON INDEX RLARP.PART_PLNT_TRI 
	IS 'PART_PLNT_TRI' ; 
  
CREATE INDEX RLARP.PERD_MODULE_ACCT 
	FOR SYSTEM NAME PERD_00001 ON RLARP.FFSBGLR1 ( PERD ASC , MODULE ASC , ACCT ASC )   
	; 
  
LABEL ON INDEX RLARP.PERD_MODULE_ACCT 
	IS 'PERIOD, MODULE, & ACCOUNT' ; 
  
CREATE UNIQUE INDEX RLARP.TRANN 
	ON RLARP.FFPORCAG ( D07TXN ASC )   
	; 
  
CREATE INDEX RLARP.TRI 
	ON RLARP.FFICSTX ( TRI ASC )   
	; 
  
LABEL ON INDEX RLARP.TRI 
	IS 'TRI' ; 
  
CREATE UNIQUE INDEX RLARP.UNQ 
	ON RLARP.FFSBGLR1 ( PERD ASC , MODULE ASC , CUSMOD ASC , ACCT ASC , BATCH ASC , PDATE ASC , PROJ ASC , CUSKEY1 ASC , CUSKEY2 ASC , CUSKEY3 ASC , CUSKEY4 ASC , CUSVEND ASC , CUSCUST ASC , RECID ASC )   
	; 
  

  
  
CREATE VIEW RLARP.VW_FFABSO ( 
	PERD , 
	CAPR , 
	COMP , 
	NWPLNT , 
	ADEP , 
	TP , 
	RRAT , 
	RHRS , 
	RCRW , 
	SHRS , 
	SCRW , 
	RSIZ , 
	EMH , 
	ELH , 
	AMNT ) 
	AS 
	SELECT  
			DIGITS(NWFSYY)||DIGITS(NWFSPP) PERD,  
			CAPR,  
			PD.COMP,  
			NWPLNT, ADEP,  
			CASE ACTN  
				WHEN 'AFS' THEN 'FIXED'  
				WHEN 'AFG' THEN 'FIXED'  
				WHEN 'AVS' THEN 'VARIABLE'  
				WHEN 'AVG' THEN 'VARIABLE'  
				WHEN 'ALS' THEN 'LABOR'  
				WHEN 'ALG' THEN 'LABOR'  
			END TP,  
			RRAT,  
			SUM(RHRS) RHRS, RCRW, SUM(SHRS) SHRS, SCRW, RSIZ, SUM(RHRS+SHRS) EMH, SUM(RHRS*RCRW+SHRS*SCRW) ELH, SUM(AMNT) AMNT  
		FROM  
			LGDAT.RPRH  
			INNER JOIN QGPL.FFPDGLR1 ON  
				NWBTID = BTID  
			LEFT OUTER JOIN RLARP.VW_FFPLPR PL ON  
				YAPLNT = NWPLNT  
			LEFT OUTER JOIN RLARP.VW_FFGLPD PD ON  
				PL.COMP = PD.COMP AND  
				DIGITS(NWFSYY)||DIGITS(NWFSPP) = FSPR  
		WHERE  
			ACTN IN ('AFS','AFG','AVS','AVG','ALS','ALG')  
		GROUP BY  
			DIGITS(NWFSYY)||DIGITS(NWFSPP), NWPLNT,  
			CAPR,  
			PD.COMP,  
			ADEP,  
			CASE ACTN  
				WHEN 'AFS' THEN 'FIXED'  
				WHEN 'AFG' THEN 'FIXED'  
				WHEN 'AVS' THEN 'VARIABLE'  
				WHEN 'AVG' THEN 'VARIABLE'  
				WHEN 'ALS' THEN 'LABOR'  
				WHEN 'ALG' THEN 'LABOR'  
			END,  
			RRAT, RCRW, SCRW, RSIZ   
	RCDFMT VW_FFABSO  ; 
  
LABEL ON TABLE RLARP.VW_FFABSO 
	IS 'Prod - Absorption Reporting' ; 
  
LABEL ON COLUMN RLARP.VW_FFABSO 
( COMP IS 'Company' , 
	NWPLNT IS 'Plant               Code' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFABSO 
( COMP TEXT IS 'Company' , 
	NWPLNT TEXT IS 'Plant Code' ) ; 
  
  
CREATE VIEW RLARP.VW_FFACMOD ( 
	MODULE , 
	BATCH , 
	PERD , 
	TDATE , 
	PDATE , 
	ACCT , 
	AMT , 
	KBPRJ# , 
	USRN , 
	REV , 
	CUSMOD , 
	CUSKEY1 , 
	CUSKEY1D , 
	CUSKEY2 , 
	CUSKEY2D , 
	D07RKEY , 
	CUSKEY3D , 
	CUSKEY4 , 
	CUSKEY4D , 
	CUSVEND , 
	CUSCUST , 
	RECID ) 
	AS 
	SELECT 'APMA' MODULE, BATCH, PERD, TDATE, PDATE, KRCOM#||DIGITS(D07GLAC) ACCT,D07AMT*CASE SUBSTR(CUSMOD,1,3) WHEN 'REV' THEN -1 ELSE 1 END AMT, KBPRJ#, USRN, REV, CUSMOD, DIGITS(KRPO#)||DIGITS(KRPOI#)||' - '||RTRIM(KRDESC) CUSKEY1, 'PO-ITEM-DESCR' CUSKEY1D, KRPT# CUSKEY2, 'PART' CUSKEY2D, D07RKEY, 'MASTER RECEIPT KEY' CUSKEY3D, KRQREC CUSKEY4, 'QTY' CUSKEY4D, KRVEN# CUSVEND, '' CUSCUST, DIGITS(D07TXN) RECID FROM ( SELECT DISTINCT MODULE, BATCH, PERD, TDATE, PDATE, SUBSTR(ACCT,1,2) COMP, USRN, REV, CUSMOD, RLARP.FSPR_OFFSET(PERD,-1) RPERD FROM RLARP.FFSBGLR1 WHERE PERD >= '1503' AND MODULE = 'APAC' ) X INNER JOIN RLARP.FFPORCAG G ON G.D07FSPR = CASE SUBSTR(CUSMOD,1,1) WHEN 'A' THEN '20'||X.PERD ELSE '20'||X.RPERD END INNER JOIN RLARP.FFPORCAP C ON KRRKEY = D07RKEY AND FISC = SUBSTR(D07FSPR,3,4) AND KRCOM# = X.COMP INNER JOIN LGDAT.POI ON KBPO# = KRPO# AND KBITM# = KRPOI#   
	RCDFMT VW_FFACMOD ; 
  
LABEL ON TABLE RLARP.VW_FFACMOD 
	IS 'AP - APAC substitution' ; 
  
LABEL ON COLUMN RLARP.VW_FFACMOD 
( KBPRJ# IS 'Project             Number' , 
	D07RKEY IS 'Master              Receipt Key' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFACMOD 
( KBPRJ# TEXT IS 'Project Number' , 
	D07RKEY TEXT IS 'Master Receipt Key' ) ; 
  
  
CREATE VIEW RLARP.VW_FFAPDO ( 
	FHCOM# , 
	FHBANK , 
	VEND , 
	FHVCH# , 
	FHINV# , 
	FHIDAT , 
	FHDDAT , 
	FHCDAT , 
	CAPR , 
	WEEKN , 
	FSPR , 
	FHGRS , 
	FHDIS , 
	FHPTD , 
	FHCBAL , 
	DAYS_OUTSTANDING FOR COLUMN DAYS_00001 , 
	DAYS_PASTDUE FOR COLUMN DAYS_00002 ) 
	AS 
	SELECT  
			FHCOM#, FHBANK, RTRIM(FHVEN#)||' - '||RTRIM(BTNAME) VEND, FHVCH#, FHINV#, FHIDAT, FHDDAT, FHCDAT,  
			SUBSTR(CHAR(FHCDAT),3,2)||SUBSTR(CHAR(FHCDAT),6,2) CAPR,  
			WEEK(FHCDAT) WEEKN,  
			DIGITS(FHPYY)||DIGITS(FHPPER) FSPR, FHGRS, FHDIS, FHPTD, FHCBAL,  
			MAX(DAYS(FHCDAT)-DAYS(FHIDAT),0) DAYS_OUTSTANDING,  
			MAX(DAYS(FHCDAT)-DAYS(CASE FHDDAT WHEN '0001-01-01' THEN FHIDAT ELSE FHDDAT END),-60) DAYS_PASTDUE  
		FROM  
			LGDAT."OPEN"  
			LEFT OUTER JOIN LGDAT.VEND ON  
				BTVEND = FHVEN#  
		WHERE  
			FHCDAT > '0001-01-01'   
	RCDFMT VW_FFAPDO  ; 
  
LABEL ON TABLE RLARP.VW_FFAPDO 
	IS 'AP - Payment history, days outstanding' ; 
  
LABEL ON COLUMN RLARP.VW_FFAPDO 
( FHCOM# IS 'Company' , 
	FHBANK IS 'Pay. Bank           Code' , 
	FHVCH# IS 'Voucher             Number' , 
	FHINV# IS 'Invoice             Number' , 
	FHIDAT IS 'Invoice             Date' , 
	FHDDAT IS 'Due                 Date' , 
	FHCDAT IS 'Closing             Date' , 
	FHGRS IS 'Gross               Amount' , 
	FHDIS IS 'Discount            Amount' , 
	FHPTD IS 'Paid to Date' , 
	FHCBAL IS 'Current             Balance' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFAPDO 
( FHCOM# TEXT IS 'Company' , 
	FHBANK TEXT IS 'Pay. Bank Code' , 
	FHVCH# TEXT IS 'Voucher Number' , 
	FHINV# TEXT IS 'Invoice Number' , 
	FHIDAT TEXT IS 'Invoice Date' , 
	FHDDAT TEXT IS 'Due Date' , 
	FHCDAT TEXT IS 'Closing Date' , 
	FHGRS TEXT IS 'Gross Amount' , 
	FHDIS TEXT IS 'Discount Amount' , 
	FHPTD TEXT IS 'Paid to Date' , 
	FHCBAL TEXT IS 'Current Balance' ) ; 
  
  
CREATE VIEW RLARP.VW_FFAPVA ( 
	SRCE , 
	PERIOD , 
	FSPR , 
	IDAT , 
	DDAT , 
	COMP , 
	VEND , 
	DESCR , 
	VEND_DESCR , 
	BANK , 
	VCHR_PO , 
	INV_POLINE , 
	ITEM_DESCR , 
	CURR , 
	AMT , 
	AMT_USD ) 
	AS 
	SELECT  
		'VHCR' AS SRCE,  
		DIGITS(FHPYY)||DIGITS(FHPPER) AS PERIOD,  
		AP AS FSPR,  
		CHAR(FHIDAT) AS IDAT,  
		CHAR(FHDDAT) AS DDAT,  
		FHCOM# AS COMP,  
		FHVEN# AS VEND,  
		RTRIM(BTNAME) AS DESCR,  
		RTRIM(FHVEN#)||' - '||RTRIM(BTNAME) AS VEND_DESCR,  
		FHBANK AS BANK,  
		FHVCH# AS VCHR_PO,  
		FHINV# AS INV_POLINE,  
		FHVDES AS ITEM_DESCR,  
		FHCURR AS CURR,  
		FHCBAL AS AMT,  
		ROUND(FHCBAL*RATE,2) AS AMT_USD  
	FROM  
		LGDAT."OPEN"  
		LEFT OUTER JOIN LGDAT.VEND ON  
			BTVEND = FHVEN#  
		LEFT OUTER JOIN LGDAT.VCHR ON  
			IDVCH# = FHVCH# AND  
			IDCOM# = FHCOM# AND  
			IDBNK# = FHBANK AND  
			IDFISY = FHPYY AND  
			IDFISP = FHPPER  
		LEFT OUTER JOIN RLARP.VW_FFCOPR C ON  
			COMP = FHCOM#  
		LEFT OUTER JOIN RLARP.FFCRET X ON  
			X.FCUR = FHCURR AND  
			X.TCUR = 'US' AND  
			X.RTYP = 'ME' AND  
			X.PERD = C.AP  
		WHERE  
			FHCBAL <> 0 AND DIGITS(FHPYY)||DIGITS(FHPPER) >= '0901'  
			  
		UNION ALL  
			  
	SELECT  
		'POR' AS SRCE,  
		SUBSTR(DIGITS(KRIVYR),3,2)||DIGITS(KRIVPR) AS PERIOD,  
		AP AS FSPR,  
		CHAR(KRRDAT) AS IDAT,  
		CHAR(KRRDAT + PAYDAYS DAYS) AS DDAT,  
		KRCOM# AS COMP,  
		KRVEN# AS VEND,  
		RTRIM(BTNAME) AS DESCR,  
		BTVEND||' - '||RTRIM(BTNAME) AS VEND_DESCR,  
		'BANK HERE' AS BANK,  
		DIGITS(KRPO#) AS VHCR_PO,  
		DIGITS(KRPOI#) AS INV_POLINE,  
		KCDESC AS ITEM_DESCR,  
		KACURR AS CURR,  
		ROUND(((KREXT+KRPST)/KRBQTY*FLOAT(KRRCVX)-KRSCST)*KRBQTY,2) AS AMT,  
		ROUND(((KREXT+KRPST)/KRBQTY*FLOAT(KRRCVX)-KRSCST)*KRBQTY*RATE,2) AS AMT_USD  
	FROM  
		LGDAT.PORCAP  
		INNER JOIN RLARP.VW_FFCOPR ON  
			COMP = KRCOM#  
		LEFT OUTER JOIN LGDAT.MAST ON  
			AZCOMP||DIGITS(AZGL#1)||DIGITS(AZGL#2) = KRCOM#||DIGITS(CASE KRGLVR WHEN 0 THEN KRGLEX ELSE KRGLVR END)  
		LEFT OUTER JOIN LGDAT.FGRP ON  
			BQ1GRP = AZGROP  
		LEFT OUTER JOIN LGDAT.VEND ON  
			BTVEND = KRVEN#  
		LEFT OUTER JOIN LGDAT.POH ON  
			KAPO# = KRPO#  
		LEFT OUTER JOIN LGDAT.POD ON  
			KCPO# = KRPO# AND  
			KCITM# = KRPOI# AND  
			KCLIN# = 1  
		LEFT OUTER JOIN LGDAT.GGTP ON  
			D35GCDE = AZFUT3  
		LEFT OUTER JOIN RLARP.FFCRET ON  
			FCUR = CURR AND  
			TCUR = 'US' AND  
			RTYP = 'ME' AND  
			PERD = AP  
		LEFT OUTER JOIN RLARP.VW_FFTMCD T ON  
			T.TERM = BTTRMC  
	WHERE  
		ROUND(((KREXT+KRPST)/KRBQTY*FLOAT(KRRCVX)-KRSCST)*KRBQTY,2) <>0   
	RCDFMT VW_FFAPVA  ; 
  
LABEL ON TABLE RLARP.VW_FFAPVA 
	IS 'AP - Open Vouchers & PORCAP''s' ; 
  
LABEL ON COLUMN RLARP.VW_FFAPVA 
( COMP IS 'Company' , 
	VEND IS 'Vendor #' , 
	BANK IS 'Pay. Bank           Code' , 
	VCHR_PO IS 'Voucher             Number' , 
	INV_POLINE IS 'Invoice             Number' , 
	ITEM_DESCR IS 'Voucher             Description' , 
	CURR IS 'Pay. Curr           Code' , 
	AMT IS 'Current             Balance' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFAPVA 
( COMP TEXT IS 'Company' , 
	VEND TEXT IS 'Vendor #' , 
	BANK TEXT IS 'Pay. Bank Code' , 
	VCHR_PO TEXT IS 'Voucher Number' , 
	INV_POLINE TEXT IS 'Invoice Number' , 
	ITEM_DESCR TEXT IS 'Voucher Description' , 
	CURR TEXT IS 'Pay. Curr Code' , 
	AMT TEXT IS 'Current Balance' ) ; 
  

  
CREATE VIEW RLARP.VW_FFAPVT ( 
	MODULE , 
	BATCH , 
	PERD , 
	TDATE , 
	PDATE , 
	ACCT , 
	AMT , 
	PROJ , 
	USRN , 
	REV , 
	CUSMOD , 
	CUSKEY1 , 
	CUSKEY1D , 
	CUSKEY2 , 
	CUSKEY2D , 
	CUSKEY3 , 
	CUSKEY3D , 
	CUSKEY4 , 
	CUSKEY4D , 
	CUSVEND , 
	CUSCUST , 
	RECID , 
	FGRP , 
	ACCR , 
	DISC , 
	CURR , 
	CATG ) 
	AS 
	SELECT  
		S.*,  
		AZGROP||' - '||RTRIM(BQ1TITL) FGRP, 
		IFCOM#||DIGITS(IFAPGL) ACCR, 
		IFCOM#||DIGITS(IFDSGL) DISC, 
		IFCOM#||DIGITS(IFCOGL) CURR, 
		CASE ACCT 
			WHEN IFCOM#||DIGITS(IFAPGL) THEN 'ACCR' 
			WHEN IFCOM#||DIGITS(IFDSGL) THEN 'DISC' 
			WHEN IFCOM#||DIGITS(IFCOGL) THEN 'CURR' 
			ELSE 'CHRG' 
		END CATG 
	FROM  
		QGPL.FFSBGLR1 S  
		LEFT OUTER JOIN LGDAT.MAST ON 
			AZCOMP||DIGITS(AZGL#1)||DIGITS(AZGL#2) = ACCT 
		LEFT OUTER JOIN LGDAT.FGRP ON 
			BQ1GRP = AZGROP 
		LEFT OUTER JOIN LGDAT.CONT ON 
			IFCOM# = SUBSTR(ACCT,1,2) AND 
			IFBNK# = RTRIM(CUSKEY2) 
			 
	WHERE  
		MODULE = 'APVN'   
	RCDFMT VW_FFAPVT  ; 
  
LABEL ON TABLE RLARP.VW_FFAPVT 
	IS 'Acct - Voucher Transactions' ; 
  
CREATE VIEW RLARP.VW_FFBINB ( 
	FSPR , 
	ACCT , 
	PRIME , 
	PLANT , 
	"PART" , 
	ILOC , 
	LQBIN# , 
	GLCODE , 
	INVCODE , 
	MAJG , 
	MING , 
	MAJS , 
	MINS , 
	STATUS , 
	PROCUREMENT FOR COLUMN PROCU00001 , 
	QTOH , 
	EXTCOST , 
	EXTCOST_USD FOR COLUMN EXTCO00001 ) 
	AS 
	SELECT 
		P.FSPR FSPR, 
		YACOMP||DIGITS(Y1INVA) ACCT,  
		SUBSTR(YACOMP||DIGITS(Y1INVA),7,4) PRIME, 
		LQPLNT PLANT,  
		RTRIM(LQPART)||' - '||RTRIM(COALESCE(AVDES1,AWDES1,'')) PART,  
		LQSTKL||' - '||RTRIM(AXLOCN) ILOC, 
		LQBIN#, 
		COALESCE(AWGLDC, AVGLCD) GLCODE, 
		COALESCE(AWGLED, AVGLED) INVCODE, 
		COALESCE(AWMAJG,AVMAJG)||' - '||RTRIM(BQDES) MAJG, 
		COALESCE(AWMING, AVMING)||' - '||RTRIM(BRDES) MING, 
		COALESCE(AWMAJS, AVMAJS)||' - '||RTRIM(SMJ.BSDES1) MAJS, 
		COALESCE(AWMINS, AVMINS)||' - '||RTRIM(SMN.BSDES1) MINS, 
		V6STAT STATUS,  
		V6RPLN PROCUREMENT, 
		LQQTYH QTOH, 
		LQQTYH*TOT EXTCOST, 
		LQQTYH*TOT*RATE EXTCOST_USD 
	FROM 
		LGDAT.BINB 
		LEFT OUTER JOIN LGDAT.STKA ON 
			V6PART = LQPART AND 
			V6PLNT = LQPLNT 
		LEFT OUTER JOIN LGDAT.STKMM ON 
			AVPART = LQPART 
		LEFT OUTER JOIN LGDAT.STKMP ON 
			AWPART = LQPART 
		LEFT OUTER JOIN LGDAT.PLNT ON 
			YAPLNT = LQPLNT 
		LEFT OUTER JOIN LGDAT.GLIE ON 
			Y1PLNT = LQPLNT AND 
			Y1GLEC = COALESCE(AVGLED, AWGLED) 
		LEFT OUTER JOIN LGDAT.MAJG ON 
			BQGRP = COALESCE(AWMAJG, AVMAJG) 
		LEFT OUTER JOIN LGDAT.MMGP ON 
			BRGRP = BQGRP AND 
			BRMGRP = COALESCE(AVMING, AWMING) 
		LEFT OUTER JOIN LGDAT.MMSL SMN ON 
			SMN.BSMJCD = COALESCE(AVMAJS, AWMAJS) AND 
			SMN.BSMNCD = COALESCE(AVMINS, AWMINS) 
		LEFT OUTER JOIN LGDAT.MMSL SMJ ON 
			SMJ.BSMJCD = COALESCE(AVMAJS, AWMAJS) AND 
			SMJ.BSMNCD = '' 
		LEFT OUTER JOIN LGDAT.STKR ON 
			AXSTKL = LQSTKL 
		LEFT OUTER JOIN LGDAT.MAST ON 
			AZCOMP||DIGITS(AZGL#1)||DIGITS(AZGL#2) = YACOMP||DIGITS(Y1INVA)  
		LEFT OUTER JOIN RLARP.FFPERD P ON 
			P.CAPR = SUBSTR(CHAR(CURRENT_DATE),3,2)||SUBSTR(CHAR(CURRENT_DATE),6,2)  
		LEFT OUTER JOIN RLARP.FFCRET FX ON 
			FCUR = AZFUT2 AND 
			TCUR = 'US' AND 
			RTYP = 'ME' AND 
			FX.PERD = P.FSPR 
		LEFT OUTER JOIN QGPL.FFICSTX ON 
			PART = LQPART AND 
			PLNT = LQPLNT AND 
			TRI = 'STD' 
	WHERE 
		LQPART <> '' AND 
		LQQTYH<> 0   
	RCDFMT VW_FFBINB  ; 
  
LABEL ON TABLE RLARP.VW_FFBINB 
	IS 'Inv - Bin On Hand' ; 
  
LABEL ON COLUMN RLARP.VW_FFBINB 
( PLANT IS 'Plant               Code' , 
	LQBIN# IS 'Bin #' , 
	STATUS IS 'Inventory           Item                Status' , 
	PROCUREMENT IS 'Replenishment       Type' , 
	QTOH IS 'Qty on hand         in base unit' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFBINB 
( PLANT TEXT IS 'Plant Code' , 
	LQBIN# TEXT IS 'Bin #' , 
	STATUS TEXT IS 'Inventory Item Status' , 
	PROCUREMENT TEXT IS 'Replenishment Type' , 
	QTOH TEXT IS 'Qty on hand in base unit' ) ; 
  
  
CREATE VIEW RLARP.VW_FFCIRAN ( 
	DHINV# , 
	DILIN# , 
	DIGLCD , 
	DIREAS , 
	DIEXT , 
	DICTEX , 
	DIQTSH , 
	DHTOTI , 
	DCORD# , 
	INCRD# , 
	INITM# , 
	INRAN# , 
	INRNDR , 
	ININV# , 
	INIITM , 
	INPLNT , 
	INRNDI , 
	INCRED , 
	INRCOD , 
	INPT# , 
	ORIGPER , 
	RANPER , 
	CREDPER , 
	INTOTI , 
	INFAMT , 
	INDPCD , 
	INCUST , 
	PROB , 
	RECNOTES ) 
	AS 
	SELECT  
		CRED.DHINV#, DILIN#, DIGLCD, DIREAS, DIEXT, DICTEX, DIQTSH, CRED.DHTOTI, DCORD#, INCRD#, INITM#, INRAN#, INRNDR, ININV#, INIITM, INPLNT, INRNDI, INCRED,  
		INRCOD, INPT#, ORIG.DHYYPP ORIGPER, INYYPP RANPER, DIGITS(CRED.DHARYR)||DIGITS(CRED.DHARPR) CREDPER, INTOTI, INFAMT,  
		INDPCD, INCUST,  
		RTRIM(INRDS1||' '||INRDS2||' '||INRDS3) AS PROB,  
		RTRIM(INREC1||' '||INREC2||' '||INREC3) AS RECNOTES  
	FROM  
		LGDAT.OIH CRED	  
		INNER JOIN LGDAT.OID CDD ON  
			CDD.DIINV# = CRED.DHINV#  
		LEFT OUTER JOIN LGDAT.CCRH ON  
			CRED.DHORD# = DCORD#  
		LEFT OUTER JOIN LGDAT.CCRI ON  
			DIORD# = DDORD# AND  
			DILIN# = DDITM#  
		LEFT OUTER JOIN LGDAT.RANS ON  
			DDORD# = INCRD# AND  
			DDITM# = INITM#  
		LEFT OUTER JOIN LGDAT.OIH ORIG ON  
			ORIG.DHINV# = ININV#  
	WHERE  
		CRED.DHINCR = 'C'   
		RCDFMT VW_FF00002 ; 
  
LABEL ON TABLE RLARP.VW_FFCIRAN 
	IS 'Sales - credit invoices left joined back to RAN' ; 
  
LABEL ON COLUMN RLARP.VW_FFCIRAN 
( DHINV# IS 'Invoice             Number' , 
	DILIN# IS 'Line                Number' , 
	DIGLCD IS 'GL Distr            Code' , 
	DIREAS IS 'Reason              Code' , 
	DIEXT IS 'Extension' , 
	DICTEX IS 'Cost                Extension' , 
	DIQTSH IS 'Quantity            Shipped' , 
	DHTOTI IS 'Invoice             Total' , 
	DCORD# IS 'Order               Number' , 
	INCRD# IS 'Credit              Number' , 
	INITM# IS 'Credit              Detail' , 
	INRAN# IS 'Return              Author.             Number' , 
	INRNDR IS 'Return              Authorization       Document Number' , 
	ININV# IS 'Invoice             Number' , 
	INIITM IS 'Invoice             Item                Number' , 
	INPLNT IS 'Plant               Code' , 
	INRNDI IS 'Return              Authorization       Document Item Number' , 
	INCRED IS 'Credit              Note                Issued' , 
	INRCOD IS 'Reason              Code' , 
	INPT# IS 'Returned            Part #' , 
	ORIGPER IS 'G/L Year            G/L Period' , 
	RANPER IS 'G/L Year            G/L Period' , 
	INTOTI IS 'Item Total          (not including      discounts)' , 
	INFAMT IS 'Item                Freight             Amount' , 
	INDPCD IS 'RANS                Action              Code' , 
	INCUST IS 'Customer            Number' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFCIRAN 
( DHINV# TEXT IS 'Invoice Number' , 
	DILIN# TEXT IS 'Line Number' , 
	DIGLCD TEXT IS 'GL Distr Code' , 
	DIREAS TEXT IS 'Reason Code' , 
	DIEXT TEXT IS 'Extension' , 
	DICTEX TEXT IS 'Cost Extension' , 
	DIQTSH TEXT IS 'Quantity Shipped' , 
	DHTOTI TEXT IS 'Include FST & PST' , 
	DCORD# TEXT IS 'Order Number' , 
	INCRD# TEXT IS 'Credit Number' , 
	INITM# TEXT IS 'Credit Detail' , 
	INRAN# TEXT IS 'Return Author. Number' , 
	INRNDR TEXT IS 'Return Authorization Document Number' , 
	ININV# TEXT IS 'Invoice Number' , 
	INIITM TEXT IS 'Invoice Item Number' , 
	INPLNT TEXT IS 'Plant Code' , 
	INRNDI TEXT IS 'Return Authorization Document Item Number' , 
	INCRED TEXT IS 'Credit Note Issued' , 
	INRCOD TEXT IS 'Reason Code' , 
	INPT# TEXT IS 'Returned Part #' , 
	ORIGPER TEXT IS 'G/L Year G/L Period' , 
	RANPER TEXT IS 'G/L Year G/L Period' , 
	INTOTI TEXT IS 'Item Total (not including discounts)' , 
	INFAMT TEXT IS 'Item Freight Amount' , 
	INDPCD TEXT IS 'RANS Action Code' , 
	INCUST TEXT IS 'Customer Number' ) ; 

  
CREATE VIEW RLARP.VW_FFCOPR ( 
	COMP , 
	DESCR , 
	CURR , 
	GL , 
	AR , 
	AP , 
	FA , 
	IC , 
	CONS ) 
	AS 
	SELECT  
		LTRIM(RTRIM(A9)) AS COMP,  
		A30 AS DESCR,  
		SUBSTR(C.A249,242,2) CURR,  
		SUBSTR(C.A249,32,4) AS GL,  
		SUBSTR(C.A249,190,4) AS AR,  
		SUBSTR(C.A249,182,4) AS AP,  
		SUBSTR(C.A249,198,4) AS FA,  
		SUBSTR(C.A249,238,4) AS IC , 
		SUBSTR(D.A249,9,5) CONS_FUNC 
	FROM  
		LGDAT.CODE  
		LEFT OUTER JOIN LGDAT.NAME C ON  
			'C0000'||LTRIM(RTRIM(A9)) = C.A7  
		LEFT OUTER JOIN LGDAT.NAME D ON  
			'D0000'||LTRIM(RTRIM(A9)) = D.A7  
	WHERE  
		A2 = 'AA' OR A2 IS NULL   
	RCDFMT VW_FF00006 ; 
  
LABEL ON TABLE RLARP.VW_FFCOPR 
	IS 'Mast - Companies & current fiscal periods' ; 
  
LABEL ON COLUMN RLARP.VW_FFCOPR 
( DESCR IS 'Description         Usually' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFCOPR 
( DESCR TEXT IS 'Description Usually' ) ; 
  

  
CREATE VIEW RLARP.VW_FFCUST ( 
	BVCUST , 
	BVNAME , 
	CGRP , 
	BVSTAT , 
	BVREAS , 
	BVCLAS , 
	BVCOMP , 
	BVARCD , 
	BVCTRY , 
	BVPRCD , 
	BVSALM , 
	BVTERR , 
	BVCURR , 
	BVTERM , 
	DESCR , 
	PAYDATE , 
	PAYDAYS , 
	PAYPERC , 
	DISCDAYS , 
	DISCP , 
	BVFOBC ) 
	AS 
	SELECT  
			BVCUST, 
			BVNAME,  
			COALESCE(CGRP,BVNAME) CUSTDESCR,  
			BVSTAT,  
			BVREAS,  
			BVCLAS,  
			BVCOMP,  
			BVARCD,  
			BVCTRY,  
			BVPRCD,  
			BVPOST  
			BVSALM,  
			BVTERR,  
			BVCURR,  
			BVTERM,  
			DESCR,  
			PAYDATE,  
			PAYDAYS,  
			PAYPERC,  
			DISCDAYS,  
			DISCP,  
			BVFOBC  
		FROM  
			LGDAT.CUST CM  
			LEFT OUTER JOIN RLARP.FFCUST CG ON  
				CUSTN = BVCUST  
			LEFT OUTER JOIN RLARP.VW_FFTMCD ON  
				TERM = BVTERM   
	RCDFMT VW_FFCUST  ; 
  
LABEL ON TABLE RLARP.VW_FFCUST 
	IS 'Sales - Customers' ; 
  
LABEL ON COLUMN RLARP.VW_FFCUST 
( BVCUST IS 'Customer            Number' , 
	BVNAME IS 'Customer            Name' , 
	BVSTAT IS 'Customer            Status' , 
	BVREAS IS 'Inactive            Reason' , 
	BVCLAS IS 'Customer            Class' , 
	BVCOMP IS 'Company             Number' , 
	BVARCD IS 'A/R                 Code' , 
	BVCTRY IS 'Country' , 
	BVPRCD IS 'Province            Code' , 
	BVSALM IS 'Postal              Code' , 
	BVTERR IS 'Territory           Code' , 
	BVCURR IS 'Currency            Code' , 
	BVTERM IS 'Terms               Code' , 
	BVFOBC IS 'FOB                 Code' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFCUST 
( BVCUST TEXT IS 'Customer Number' , 
	BVNAME TEXT IS 'Customer Name' , 
	BVSTAT TEXT IS 'Customer Status' , 
	BVREAS TEXT IS 'Inactive Reason' , 
	BVCLAS TEXT IS 'Customer Class' , 
	BVCOMP TEXT IS 'Company Number' , 
	BVARCD TEXT IS 'A/R Code' , 
	BVCTRY TEXT IS 'Country' , 
	BVPRCD TEXT IS 'Province Code' , 
	BVSALM TEXT IS 'Postal Code' , 
	BVTERR TEXT IS 'Territory Code' , 
	BVCURR TEXT IS 'Currency Code' , 
	BVTERM TEXT IS 'Terms Code' , 
	BVFOBC TEXT IS 'FOB Code' ) ; 
  
  
CREATE VIEW RLARP.VW_FFGLPD ( 
	COMP , 
	FSYR , 
	PERDS , 
	PERD , 
	FSPR , 
	SDAT , 
	EDAT , 
	CAPR , 
	NDAYS ) 
	AS 
	SELECT  
				KPCOMP COMP,  
				DIGITS(KPCCYY) FSYR,  
				KPMAXP PERDS,  
				PERD,  
				SUBSTR(DIGITS(KPCCYY),3,2)||PERD FSPR,  
				SDAT,  
				EDAT,  
				CAPR,  
				NDAYS  
				  
			FROM  
			(  
			SELECT  
				KPCOMP,  
				KPCCYY,  
				KPMAXP,  
				'01' PERD,CHAR(KPSD01) SDAT, CHAR(KPED01) EDAT,  
				SUBSTR(CHAR(KPED01),3,2)||SUBSTR(CHAR(KPED01),6,2) CAPR,  
				KPDY01 NDAYS  
			FROM  
				LGDAT.GLDATE  
			  
			UNION ALL  
			  
			SELECT  
				KPCOMP,  
				KPCCYY,  
				KPMAXP,  
				'02' PERD,CHAR(KPSD02) SDAT, CHAR(KPED02) EDAT,  
				SUBSTR(CHAR(KPED02),3,2)||SUBSTR(CHAR(KPED02),6,2) CAPR,  
				KPDY02 NDAYS  
			  
			FROM  
				LGDAT.GLDATE  
			  
			UNION ALL  
			  
			SELECT  
				KPCOMP,  
				KPCCYY,  
				KPMAXP,  
				'03' PERD,CHAR(KPSD03) SDAT, CHAR(KPED03) EDAT,  
				SUBSTR(CHAR(KPED03),3,2)||SUBSTR(CHAR(KPED03),6,2) CAPR,  
				KPDY03 NDAYS  
			  
			FROM  
				LGDAT.GLDATE  
			  
			UNION ALL  
			  
			SELECT  
				KPCOMP,  
				KPCCYY,  
				KPMAXP,  
				'04' PERD,CHAR(KPSD04) SDAT, CHAR(KPED04) EDAT,  
				SUBSTR(CHAR(KPED04),3,2)||SUBSTR(CHAR(KPED04),6,2) CAPR,  
				KPDY04 NDAYS  
			  
			FROM  
				LGDAT.GLDATE  
			  
			UNION ALL  
			  
			SELECT  
				KPCOMP,  
				KPCCYY,  
				KPMAXP,  
				'05' PERD,CHAR(KPSD05) SDAT, CHAR(KPED05) EDAT,  
				SUBSTR(CHAR(KPED05),3,2)||SUBSTR(CHAR(KPED05),6,2) CAPR,  
				KPDY05 NDAYS  
			  
			FROM  
				LGDAT.GLDATE  
			  
			UNION ALL  
			  
			SELECT  
				KPCOMP,  
				KPCCYY,  
				KPMAXP,  
				'06' PERD,CHAR(KPSD06) SDAT, CHAR(KPED06) EDAT,  
				SUBSTR(CHAR(KPED06),3,2)||SUBSTR(CHAR(KPED06),6,2) CAPR,  
				KPDY06 NDAYS  
			  
			FROM  
				LGDAT.GLDATE  
			  
			  
			UNION ALL  
			  
			SELECT  
				KPCOMP,  
				KPCCYY,  
				KPMAXP,  
				'07' PERD,CHAR(KPSD07) SDAT, CHAR(KPED07) EDAT,  
				SUBSTR(CHAR(KPED07),3,2)||SUBSTR(CHAR(KPED07),6,2) CAPR,  
				KPDY07 NDAYS  
			  
			FROM  
				LGDAT.GLDATE  
			  
			UNION ALL  
			  
			SELECT  
				KPCOMP,  
				KPCCYY,  
				KPMAXP,  
				'08' PERD,CHAR(KPSD08) SDAT, CHAR(KPED08) EDAT,  
				SUBSTR(CHAR(KPED08),3,2)||SUBSTR(CHAR(KPED08),6,2) CAPR,  
				KPDY08 NDAYS  
			  
			FROM  
				LGDAT.GLDATE  
			  
			  
			UNION ALL  
			  
			SELECT  
				KPCOMP,  
				KPCCYY,  
				KPMAXP,  
				'09' PERD,CHAR(KPSD09) SDAT, CHAR(KPED09) EDAT,  
				SUBSTR(CHAR(KPED09),3,2)||SUBSTR(CHAR(KPED09),6,2) CAPR,  
				KPDY09 NDAYS  
			  
			FROM  
				LGDAT.GLDATE  
			  
			UNION ALL  
			  
			SELECT  
				KPCOMP,  
				KPCCYY,  
				KPMAXP,  
				'10' PERD,CHAR(KPSD10) SDAT, CHAR(KPED10) EDAT,  
				SUBSTR(CHAR(KPED10),3,2)||SUBSTR(CHAR(KPED10),6,2) CAPR,  
				KPDY10 NDAYS  
			  
			FROM  
				LGDAT.GLDATE  
			  
			UNION ALL  
			  
			SELECT  
				KPCOMP,  
				KPCCYY,  
				KPMAXP,  
				'11' PERD,CHAR(KPSD11) SDAT, CHAR(KPED11) EDAT,  
				SUBSTR(CHAR(KPED11),3,2)||SUBSTR(CHAR(KPED11),6,2) CAPR,  
				KPDY11 NDAYS  
			  
			FROM  
				LGDAT.GLDATE  
			  
			UNION ALL  
			  
			SELECT  
				KPCOMP,  
				KPCCYY,  
				KPMAXP,  
				'12' PERD,CHAR(KPSD12) SDAT, CHAR(KPED12) EDAT,  
				SUBSTR(CHAR(KPED12),3,2)||SUBSTR(CHAR(KPED12),6,2) CAPR,  
				KPDY12 NDAYS  
			  
			FROM  
				LGDAT.GLDATE  
			  
			UNION ALL  
			  
			SELECT  
				KPCOMP,  
				KPCCYY,  
				KPMAXP,  
				'13' PERD,CHAR(KPSD13) SDAT, CHAR(KPED13) EDAT,  
				SUBSTR(CHAR(KPED13),3,2)||SUBSTR(CHAR(KPED13),6,2) CAPR,  
				KPDY13 NDAYS  
			  
			FROM  
				LGDAT.GLDATE  
			  
			UNION ALL  
			  
			SELECT  
				KPCOMP,  
				KPCCYY,  
				KPMAXP,  
				'14' PERD,CHAR(KPSD14) SDAT, CHAR(KPED14) EDAT,  
				SUBSTR(CHAR(KPED14),3,2)||SUBSTR(CHAR(KPED14),6,2) CAPR,  
				KPDY14 NDAYS  
			  
			FROM  
				LGDAT.GLDATE  
			  
			UNION ALL  
			  
			SELECT  
				KPCOMP,  
				KPCCYY,  
				KPMAXP,  
				'15' PERD,CHAR(KPSD15) SDAT, CHAR(KPED15) EDAT,  
				SUBSTR(CHAR(KPED15),3,2)||SUBSTR(CHAR(KPED15),6,2) CAPR,  
				KPDY15 NDAYS  
			  
			FROM  
				LGDAT.GLDATE  
			  
			) X  
			WHERE  
				NDAYS <> 0   
	RCDFMT VW_FFGLPD  ; 
  
LABEL ON TABLE RLARP.VW_FFGLPD 
	IS 'Acct - Periods by Company' ; 
  
LABEL ON COLUMN RLARP.VW_FFGLPD 
( COMP IS 'Company' , 
	PERDS IS 'Periods             /Year' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFGLPD 
( COMP TEXT IS 'Company' , 
	PERDS TEXT IS 'Periods /Year' , 
	NDAYS TEXT IS 'Days in Period' ) ; 
  
  
CREATE VIEW RLARP.VW_FFICSTX ( 
	V6PART , 
	V6PLNT , 
	V6STAT , 
	V6RPLN , 
	V6UNTI , 
	RECENTCOST , 
	STD_DATE , 
	STDCOST , 
	MATERIAL , 
	LABOR , 
	FIXED , 
	"VARIABLE" , 
	OTHER , 
	CURR , 
	SHIP_DUTY_WHSE_OTH FOR COLUMN SHIP_00001 ) 
	AS 
	SELECT  
			V6PART, V6PLNT, V6STAT, V6RPLN, V6UNTI,  
			COALESCE(CGACCS, CHACCS, Y0ACCS) AS RECENTCOST,  
			CHAR(COALESCE(CGSDAT, CHSDAT, Y0SDAT)) STD_DATE,  
			COALESCE(CGSTCS, CHSTCS, Y0STCS) AS STDCOST,  
			COALESCE(CGMATS, CHSUC, Y0SMAT) AS MATERIAL,  
			COALESCE(CGLABS, Y0SLAB, 0) AS LABOR,  
			COALESCE(CGBRFS, Y0SFBR, 0) AS FIXED,  
			COALESCE(CGBRVS, Y0SVBR, 0) AS VARIABLE,  
			COALESCE(CGSTOC, Y0SOTC, 0) AS OTHER,  
			COALESCE(Y0SOC,CHSCC, 0) CURR,  
			COALESCE(Y0SSHC,CHSFC+CHSDC+CHS1C+CHS2C+CHSDWC, 0) AS SHIP_DUTY_WHSE_OTH  
		FROM  
			LGDAT.STKA  
			LEFT OUTER JOIN LGDAT.ICSTM ICSTM ON  
				CGPART = V6PART AND  
				CGPLNT = V6PLNT  
			LEFT OUTER JOIN LGDAT.ICSTP ICSTP ON  
				CHPART = V6PART AND  
				CHPLNT = V6PLNT  
			LEFT OUTER JOIN LGDAT.ICSTR ICSTR ON  
				Y0PART = V6PART AND  
				Y0PLNT = V6PLNT  
		WHERE  
			CHAR(COALESCE(CGSDAT, CHSDAT, Y0SDAT)) <> ''   
	RCDFMT VW_FFICSTX ; 
  
LABEL ON TABLE RLARP.VW_FFICSTX 
	IS 'Inv - ICSTM,P,R stacked' ; 
  
LABEL ON COLUMN RLARP.VW_FFICSTX 
( V6PART IS 'Part                Number' , 
	V6PLNT IS 'Plant               Code' , 
	V6STAT IS 'Inventory           Item                Status' , 
	V6RPLN IS 'Replenishment       Type' , 
	V6UNTI IS 'Unit                Of                  Issue' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFICSTX 
( V6PART TEXT IS 'Part Number' , 
	V6PLNT TEXT IS 'Plant Code' , 
	V6STAT TEXT IS 'Inventory Item Status' , 
	V6RPLN TEXT IS 'Replenishment Type' , 
	V6UNTI TEXT IS 'Unit Of Issue' ) ; 
  
  
CREATE VIEW RLARP.VW_FFINVD ( 
	FSPR , 
	CAPR , 
	FSYR , 
	QRTR , 
	INV_COMP , 
	INV_PLNT , 
	INV_CURR , 
	COMP_CURR , 
	BILL_REMIT_TO FOR COLUMN BILL_00001 , 
	BILL_CUST_CLASS FOR COLUMN BILL_00002 , 
	BILL_CUST , 
	BILL_PROV , 
	BILL_CTRY , 
	SHIP_REMIT_TO FOR COLUMN SHIP_00001 , 
	SHIP_CUST_CLASS FOR COLUMN SHIP_00002 , 
	SHIP_CUST , 
	SHIP_PROV , 
	SHIP_CTRY , 
	GLDC , 
	GLEC , 
	REAS , 
	PROMOTION , 
	INV_TYPE , 
	TRADE_NAME , 
	"PART" , 
	MOLD , 
	MAJG , 
	MING , 
	MAJS , 
	MINS , 
	CMSGL , 
	FGRP , 
	QTY_SHIP , 
	COST , 
	INVOICE , 
	COST_USD , 
	INVOICE_USD FOR COLUMN INVOI00001 , 
	TERMS ) 
	AS 
	SELECT  
		DIGITS(DHARYR)||DIGITS(DHARPR) FSPR,  
		CAPR,  
		FSYR,  
		QRTR,  
		DHCOMP INV_COMP,  
		DHPLNT INV_PLNT,  
		DHCURR INV_CURR,  
		CURR COMP_CURR,  
		BC.BVCOMP BILL_REMIT_TO,  
		BC.BVCLAS BILL_CUST_CLASS,  
		BC.BVCUST||' - '||RTRIM(BC.BVNAME) BILL_CUST,  
		BC.BVPRCD BILL_PROV,  
		BC.BVCTRY BILL_CTRY,  
		SC.BVCOMP SHIP_REMIT_TO,  
		SC.BVCLAS SHIP_CUST_CLASS,  
		SC.BVCUST||' - '||RTRIM(SC.BVNAME) SHIP_CUST,  
		SC.BVPRCD SHIP_PROV,  
		SC.BVCTRY SHIP_CTRY,  
		DIGLCD||' - '||RTRIM(G.A30) GLCODE,  
		GLEC,  
		DIREAS||' - '||RTRIM(R.A30) REAS,  
		RTRIM(DCPROM) PROMOTION,  
		DHINCR INV_TYPE,  
		SUBSTR(CUSTPART,1,1) TRADE_NAME,  
		DIPART PART, SUBSTR(DIPART,1,8) MOLD,  
		MAJG,  
		MING,  
		MAJS,  
		MINS,  
		DIGITS(ZWSAL#) CMSGL,  
		AZGROP||' - '||RTRIM(BQ1TITL) FGRP,  
		SUM(DIQTSH*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END) QTY_SHIP,  
		ROUND(SUM(DICTEX*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END),2) COST,  
		ROUND(SUM(DIEXT*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END),2) INVOICE,  
		ROUND(SUM(DICTEX*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END*CX.RATE),2) COST_USD,  
		ROUND(SUM(DIEXT*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END*IX.RATE),2) INVOICE_USD ,  
		DHTRCD  
	FROM  
		LGDAT.OIH  
		INNER JOIN LGDAT.OID ON  
			DIINV# = DHINV#  
		LEFT OUTER JOIN LGDAT.OCRH ON  
			DCORD# = DHORD#  
		LEFT OUTER JOIN LGDAT.CODE G ON  
			G.A2 = 'EE' AND  
			LTRIM(RTRIM(G.A9)) = DIGLCD  
		LEFT OUTER JOIN LGDAT.CODE R ON  
			R.A2 = 'RS' AND  
			LTRIM(RTRIM(R.A9)) = DIREAS  
		LEFT OUTER JOIN LGDAT.CUST BC ON  
			BC.BVCUST = DHBCS#  
		LEFT OUTER JOIN LGDAT.CUST SC ON  
			SC.BVCUST = DHSCS#  
		LEFT OUTER JOIN RLARP.VW_FFITEMM ON  
			ITEM = DIPART  
		LEFT OUTER JOIN LGDAT.PLNT ON  
			YAPLNT = DHPLNT  
		LEFT OUTER JOIN LGDAT.GLIE ON  
			Y1PLNT = DHPLNT AND  
			Y1GLEC = GLEC  
		LEFT OUTER JOIN LGDAT.ARMASC ON  
			ZWCOMP = BC.BVCOMP AND  
			ZWKEY1 = BC.BVARCD AND  
			ZWKEY2 = DIGLCD  
		LEFT OUTER JOIN RLARP.FFCRET IX ON  
			IX.PERD = DIGITS(DHARYR)||DIGITS(DHARPR) AND  
			IX.FCUR = DHCURR AND  
			IX.TCUR = 'US' AND  
			IX.RTYP = 'ME'  
		LEFT OUTER JOIN RLARP.VW_FFCOPR ON  
			COMP = DHCOMP  
		LEFT OUTER JOIN RLARP.FFCRET CX ON  
			CX.PERD = DIGITS(DHARYR)||DIGITS(DHARPR) AND  
			CX.FCUR = CURR AND  
			CX.TCUR = 'US' AND  
			CX.RTYP = 'ME'  
		LEFT OUTER JOIN LGDAT.MAST ON  
			AZCOMP||DIGITS(AZGL#1)||DIGITS(AZGL#2) = DIGITS(ZWSAL#) 	  
		LEFT OUTER JOIN LGDAT.FGRP ON  
			BQ1GRP = AZGROP  
		LEFT OUTER JOIN RLARP.FFPERD ON  
			FSPR = DIGITS(DHARYR)||DIGITS(DHARPR)  
	GROUP BY  
		DIGITS(DHARYR)||DIGITS(DHARPR), 	  
		CAPR,  
		FSYR,  
		QRTR,  
		DHCOMP ,  
		DHPLNT ,  
		DHCURR ,  
		CURR,  
		BC.BVCOMP ,  
		BC.BVCLAS ,  
		BC.BVCUST||' - '||RTRIM(BC.BVNAME) ,  
		BC.BVPRCD ,  
		BC.BVCTRY ,  
		SC.BVCOMP ,  
		SC.BVCLAS ,  
		SC.BVCUST||' - '||RTRIM(SC.BVNAME) ,  
		SC.BVPRCD ,  
		SC.BVCTRY ,  
		DIGLCD||' - '||RTRIM(G.A30) ,  
		GLEC,  
		DIREAS||' - '||RTRIM(R.A30) ,  
		RTRIM(DCPROM) ,  
		DHINCR,  
		SUBSTR(CUSTPART,1,1) ,  
		DIPART, SUBSTR(DIPART,1,8),																				MAJG,  
		MING,  
		MAJS,  
		MINS,  
		DIGITS(ZWSAL#) ,  
		AZGROP||' - '||RTRIM(BQ1TITL) ,  
		DHTRCD   
RCDFMT VW_FFINVS  ; 

LABEL ON TABLE RLARP.VW_FFINVD 
IS 'Sales - Invoice Detail' ; 

LABEL ON COLUMN RLARP.VW_FFINVD 
( INV_COMP IS 'Company             Number' , 
	INV_PLNT IS 'Plant               Code' , 
	INV_CURR IS 'Currency            Code' , 
	BILL_REMIT_TO IS 'Company             Number' , 
	BILL_CUST_CLASS IS 'Customer            Class' , 
	BILL_PROV IS 'Province            Code' , 
	BILL_CTRY IS 'Country' , 
	SHIP_REMIT_TO IS 'Company             Number' , 
	SHIP_CUST_CLASS IS 'Customer            Class' , 
	SHIP_PROV IS 'Province            Code' , 
	SHIP_CTRY IS 'Country' , 
	INV_TYPE IS 'Invoice             Credit' , 
	"PART" IS 'Part                Number' , 
	TERMS IS 'Terms               Code' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFINVD 
( INV_COMP TEXT IS 'Company Number' , 
	INV_PLNT TEXT IS 'Plant Code' , 
	INV_CURR TEXT IS 'Currency Code' , 
	BILL_REMIT_TO TEXT IS 'Company Number' , 
	BILL_CUST_CLASS TEXT IS 'Customer Class' , 
	BILL_PROV TEXT IS 'Province Code' , 
	BILL_CTRY TEXT IS 'Country' , 
	SHIP_REMIT_TO TEXT IS 'Company Number' , 
	SHIP_CUST_CLASS TEXT IS 'Customer Class' , 
	SHIP_PROV TEXT IS 'Province Code' , 
	SHIP_CTRY TEXT IS 'Country' , 
	INV_TYPE TEXT IS 'Invoice Credit' , 
	"PART" TEXT IS 'Part Number' , 
	TERMS TEXT IS 'Terms Code' ) ; 
  
  
CREATE VIEW RLARP.VW_FFINVS ( 
	FSPR , 
	CAPR , 
	FSYR , 
	QRTR , 
	INV_COMP , 
	INV_PLNT , 
	INV_CURR , 
	COMP_CURR , 
	BILL_REMIT_TO FOR COLUMN BILL_00001 , 
	BILL_CUST_CLASS FOR COLUMN BILL_00002 , 
	BILL_CUST , 
	BILL_PROV , 
	BILL_CTRY , 
	SHIP_REMIT_TO FOR COLUMN SHIP_00001 , 
	SHIP_CUST_CLASS FOR COLUMN SHIP_00002 , 
	SHIP_CUST , 
	SHIP_PROV , 
	SHIP_CTRY , 
	GLDC , 
	GLEC , 
	REAS , 
	PROMOTION , 
	INV_TYPE , 
	TRADE_NAME , 
	MAJG , 
	MING , 
	MAJS , 
	MINS , 
	CMSGL , 
	FGRP , 
	QTY_SHIP , 
	COST , 
	INVOICE , 
	COST_USD , 
	INVOICE_USD FOR COLUMN INVOI00001 , 
	TERMS ) 
	AS 
	SELECT  
		DIGITS(DHARYR)||DIGITS(DHARPR) FSPR,  
		CAPR,  
		FSYR,  
		QRTR,  
		DHCOMP INV_COMP,  
		DHPLNT INV_PLNT,  
		DHCURR INV_CURR,  
		CURR COMP_CURR,  
		BC.BVCOMP BILL_REMIT_TO,  
		BC.BVCLAS BILL_CUST_CLASS,  
		BC.BVCUST||' - '||RTRIM(BC.BVNAME) BILL_CUST,  
		BC.BVPRCD BILL_PROV,  
		BC.BVCTRY BILL_CTRY,  
		SC.BVCOMP SHIP_REMIT_TO,  
		SC.BVCLAS SHIP_CUST_CLASS,  
		SC.BVCUST||' - '||RTRIM(SC.BVNAME) SHIP_CUST,  
		SC.BVPRCD SHIP_PROV,  
		SC.BVCTRY SHIP_CTRY,  
		DIGLCD||' - '||RTRIM(G.A30) GLCODE,  
		GLEC,  
		DIREAS||' - '||RTRIM(R.A30) REAS,  
		RTRIM(DCPROM) PROMOTION,  
		DHINCR INV_TYPE,  
		SUBSTR(CUSTPART,1,1) TRADE_NAME,  
		MAJG,  
		MING,  
		MAJS,  
		MINS,  
		DIGITS(ZWSAL#) CMSGL,  
		AZGROP||' - '||RTRIM(BQ1TITL) FGRP,  
		SUM(DIQTSH*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END) QTY_SHIP,  
		ROUND(SUM(DICTEX*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END),2) COST,  
		ROUND(SUM(DIEXT*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END),2) INVOICE,  
		ROUND(SUM(DICTEX*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END*CX.RATE),2) COST_USD,  
		ROUND(SUM(DIEXT*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END*IX.RATE),2) INVOICE_USD ,  
		DHTRCD  
	FROM  
		LGDAT.OIH  
		INNER JOIN LGDAT.OID ON  
			DIINV# = DHINV#  
		LEFT OUTER JOIN LGDAT.OCRH ON  
			DCORD# = DHORD#  
		LEFT OUTER JOIN LGDAT.CODE G ON  
			G.A2 = 'EE' AND  
			LTRIM(RTRIM(G.A9)) = DIGLCD  
		LEFT OUTER JOIN LGDAT.CODE R ON  
			R.A2 = 'RS' AND  
			LTRIM(RTRIM(R.A9)) = DIREAS  
		LEFT OUTER JOIN LGDAT.CUST BC ON  
			BC.BVCUST = DHBCS#  
		LEFT OUTER JOIN LGDAT.CUST SC ON  
			SC.BVCUST = DHSCS#  
		LEFT OUTER JOIN RLARP.VW_FFITEMM ON  
			ITEM = DIPART  
		LEFT OUTER JOIN LGDAT.PLNT ON  
			YAPLNT = DHPLNT  
		LEFT OUTER JOIN LGDAT.GLIE ON  
			Y1PLNT = DHPLNT AND  
			Y1GLEC = GLEC  
		LEFT OUTER JOIN LGDAT.ARMASC ON  
			ZWCOMP = BC.BVCOMP AND  
			ZWKEY1 = BC.BVARCD AND  
			ZWKEY2 = DIGLCD  
		LEFT OUTER JOIN RLARP.FFCRET IX ON  
			IX.PERD = DIGITS(DHARYR)||DIGITS(DHARPR) AND  
			IX.FCUR = DHCURR AND  
			IX.TCUR = 'US' AND  
			IX.RTYP = 'ME'  
		LEFT OUTER JOIN RLARP.VW_FFCOPR ON  
			COMP = DHCOMP  
		LEFT OUTER JOIN RLARP.FFCRET CX ON  
			CX.PERD = DIGITS(DHARYR)||DIGITS(DHARPR) AND  
			CX.FCUR = CURR AND  
			CX.TCUR = 'US' AND  
			CX.RTYP = 'ME'  
		LEFT OUTER JOIN LGDAT.MAST ON  
			AZCOMP||DIGITS(AZGL#1)||DIGITS(AZGL#2) = DIGITS(ZWSAL#) 	  
		LEFT OUTER JOIN LGDAT.FGRP ON  
			BQ1GRP = AZGROP  
		LEFT OUTER JOIN RLARP.FFPERD ON  
			FSPR = DIGITS(DHARYR)||DIGITS(DHARPR)  
	GROUP BY  
		DIGITS(DHARYR)||DIGITS(DHARPR), 	  
		CAPR,  
		FSYR,  
		QRTR,  
		DHCOMP ,  
		DHPLNT ,  
		DHCURR ,  
		CURR,  
		BC.BVCOMP ,  
		BC.BVCLAS ,  
		BC.BVCUST||' - '||RTRIM(BC.BVNAME) ,  
		BC.BVPRCD ,  
		BC.BVCTRY ,  
		SC.BVCOMP ,  
		SC.BVCLAS ,  
		SC.BVCUST||' - '||RTRIM(SC.BVNAME) ,  
		SC.BVPRCD ,  
		SC.BVCTRY ,  
		DIGLCD||' - '||RTRIM(G.A30) ,  
		GLEC,  
		DIREAS||' - '||RTRIM(R.A30) ,  
		RTRIM(DCPROM) ,  
		DHINCR,  
		SUBSTR(CUSTPART,1,1) ,  
		MAJG,  
		MING,  
		MAJS,  
		MINS,  
		DIGITS(ZWSAL#) ,  
		AZGROP||' - '||RTRIM(BQ1TITL) ,  
		DHTRCD   
RCDFMT VW_FFINVS  ; 

LABEL ON TABLE RLARP.VW_FFINVS 
IS 'Sales - Invoice Summary' ; 

LABEL ON COLUMN RLARP.VW_FFINVS 
( INV_COMP IS 'Company             Number' , 
	INV_PLNT IS 'Plant               Code' , 
	INV_CURR IS 'Currency            Code' , 
	BILL_REMIT_TO IS 'Company             Number' , 
	BILL_CUST_CLASS IS 'Customer            Class' , 
	BILL_PROV IS 'Province            Code' , 
	BILL_CTRY IS 'Country' , 
	SHIP_REMIT_TO IS 'Company             Number' , 
	SHIP_CUST_CLASS IS 'Customer            Class' , 
	SHIP_PROV IS 'Province            Code' , 
	SHIP_CTRY IS 'Country' , 
	INV_TYPE IS 'Invoice             Credit' , 
	TERMS IS 'Terms               Code' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFINVS 
( INV_COMP TEXT IS 'Company Number' , 
	INV_PLNT TEXT IS 'Plant Code' , 
	INV_CURR TEXT IS 'Currency Code' , 
	BILL_REMIT_TO TEXT IS 'Company Number' , 
	BILL_CUST_CLASS TEXT IS 'Customer Class' , 
	BILL_PROV TEXT IS 'Province Code' , 
	BILL_CTRY TEXT IS 'Country' , 
	SHIP_REMIT_TO TEXT IS 'Company Number' , 
	SHIP_CUST_CLASS TEXT IS 'Customer Class' , 
	SHIP_PROV TEXT IS 'Province Code' , 
	SHIP_CTRY TEXT IS 'Country' , 
	INV_TYPE TEXT IS 'Invoice Credit' , 
	TERMS TEXT IS 'Terms Code' ) ; 
  

  
CREATE VIEW RLARP.VW_FFINVSP ( 
	FSPR , 
	CAPR , 
	FSYR , 
	QRTR , 
	INV_COMP , 
	INV_PLNT , 
	INV_CURR , 
	COMP_CURR , 
	BILL_REMIT_TO FOR COLUMN BILL_00001 , 
	BILL_CUST_CLASS FOR COLUMN BILL_00002 , 
	BILL_CUST , 
	BILL_PROV , 
	BILL_CTRY , 
	SHIP_REMIT_TO FOR COLUMN SHIP_00001 , 
	SHIP_CUST_CLASS FOR COLUMN SHIP_00002 , 
	SHIP_CUST , 
	SHIP_PROV , 
	SHIP_CTRY , 
	GLCODE , 
	GL_EXP_CODE FOR COLUMN GL_EX00001 , 
	REAS , 
	PROMOTION , 
	INV_TYPE , 
	"PART" , 
	TRADE_NAME , 
	MAJG , 
	MING , 
	MAJS , 
	MINS , 
	CMSGL , 
	FGRP , 
	QTY_SHIP , 
	COST , 
	INVOICE , 
	COST_USD , 
	INVOICE_USD FOR COLUMN INVOI00001 ) 
	AS 
	SELECT  
		DIGITS(DHARYR)||DIGITS(DHARPR) FSPR,  
		CAPR,  
		FSYR,  
		QRTR,  
		DHCOMP INV_COMP,  
		DHPLNT INV_PLNT,  
		DHCURR INV_CURR,  
		CURR COMP_CURR,  
		BC.BVCOMP BILL_REMIT_TO,  
		BC.BVCLAS BILL_CUST_CLASS,  
		BC.BVCUST||' - '||RTRIM(BC.BVNAME) BILL_CUST,  
		BC.BVPRCD BILL_PROV,  
		BC.BVCTRY BILL_CTRY,  
		SC.BVCOMP SHIP_REMIT_TO,  
		SC.BVCLAS SHIP_CUST_CLASS,  
		SC.BVCUST||' - '||RTRIM(SC.BVNAME) SHIP_CUST,  
		SC.BVPRCD SHIP_PROV,  
		SC.BVCTRY SHIP_CTRY,  
		DIGLCD||' - '||RTRIM(G.A30) GLCODE,  
		GLEC,  
		DIREAS||' - '||RTRIM(R.A30) REAS,  
		RTRIM(DCPROM) PROMOTION,  
		DHINCR INV_TYPE, DIPART PART,  
		SUBSTR(CUSTPART,1,1) TRADE_NAME,  
		MAJG,  
		MING,  
		MAJS,  
		MINS,  
		DIGITS(ZWSAL#) CMSGL,  
		AZGROP||' - '||RTRIM(BQ1TITL) FGRP,  
		SUM(DIQTSH*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END) QTY_SHIP,  
		ROUND(SUM(DICTEX*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END),2) COST,  
		ROUND(SUM(DIEXT*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END),2) INVOICE,  
		ROUND(SUM(DICTEX*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END*CX.RATE),2) COST_USD,  
		ROUND(SUM(DIEXT*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END*IX.RATE),2) INVOICE_USD  
	FROM  
		LGDAT.OIH  
		INNER JOIN LGDAT.OID ON  
			DIINV# = DHINV#  
		LEFT OUTER JOIN LGDAT.OCRH ON  
			DCORD# = DHORD#  
		LEFT OUTER JOIN LGDAT.CODE G ON  
			G.A2 = 'EE' AND  
			LTRIM(RTRIM(G.A9)) = DIGLCD  
		LEFT OUTER JOIN LGDAT.CODE R ON  
			R.A2 = 'RS' AND  
			LTRIM(RTRIM(R.A9)) = DIREAS  
		LEFT OUTER JOIN LGDAT.CUST BC ON  
			BC.BVCUST = DHBCS#  
		LEFT OUTER JOIN LGDAT.CUST SC ON  
			SC.BVCUST = DHSCS#  
		LEFT OUTER JOIN RLARP.VW_FFITEMM ON  
			ITEM = DIPART  
		LEFT OUTER JOIN LGDAT.PLNT ON  
			YAPLNT = DHPLNT  
		LEFT OUTER JOIN LGDAT.GLIE ON  
			Y1PLNT = DHPLNT AND  
			Y1GLEC = GLEC  
		LEFT OUTER JOIN LGDAT.ARMASC ON  
			ZWCOMP = BC.BVCOMP AND  
			ZWKEY1 = BC.BVARCD AND  
			ZWKEY2 = DIGLCD  
		LEFT OUTER JOIN RLARP.FFCRET IX ON  
			IX.PERD = DIGITS(DHARYR)||DIGITS(DHARPR) AND  
			IX.FCUR = DHCURR AND  
			IX.TCUR = 'US' AND  
			IX.RTYP = 'ME'  
		LEFT OUTER JOIN RLARP.VW_FFCOPR ON  
			COMP = DHCOMP  
		LEFT OUTER JOIN RLARP.FFCRET CX ON  
			CX.PERD = DIGITS(DHARYR)||DIGITS(DHARPR) AND  
			CX.FCUR = CURR AND  
			CX.TCUR = 'US' AND  
			CX.RTYP = 'ME'  
		LEFT OUTER JOIN LGDAT.MAST ON  
			AZCOMP||DIGITS(AZGL#1)||DIGITS(AZGL#2) = DIGITS(ZWSAL#) 	  
		LEFT OUTER JOIN LGDAT.FGRP ON  
			BQ1GRP = AZGROP  
		LEFT OUTER JOIN RLARP.FFPERD ON  
			FSPR = DIGITS(DHARYR)||DIGITS(DHARPR)  
	GROUP BY  
		DIGITS(DHARYR)||DIGITS(DHARPR), 	  
		CAPR,  
		FSYR,  
		QRTR,  
		DHCOMP ,  
		DHPLNT ,  
		DHCURR ,  
		CURR,  
		BC.BVCOMP ,  
		BC.BVCLAS ,  
		BC.BVCUST||' - '||RTRIM(BC.BVNAME) ,  
		BC.BVPRCD ,  
		BC.BVCTRY ,  
		SC.BVCOMP ,  
		SC.BVCLAS ,  
		SC.BVCUST||' - '||RTRIM(SC.BVNAME) ,  
		SC.BVPRCD ,  
		SC.BVCTRY ,  
		DIGLCD||' - '||RTRIM(G.A30) ,  
		GLEC,  
		DIREAS||' - '||RTRIM(R.A30) ,  
		RTRIM(DCPROM) ,  
		DHINCR, DIPART,  
		SUBSTR(CUSTPART,1,1) ,  
		MAJG,  
		MING,  
		MAJS,  
		MINS,  
		DIGITS(ZWSAL#) ,  
		AZGROP||' - '||RTRIM(BQ1TITL)   
		RCDFMT VW_FFINVS  ; 

LABEL ON TABLE RLARP.VW_FFINVSP 
IS 'Sales - Invoice Summary & Part' ; 

LABEL ON COLUMN RLARP.VW_FFINVSP 
( INV_COMP IS 'Company             Number' , 
	INV_PLNT IS 'Plant               Code' , 
	INV_CURR IS 'Currency            Code' , 
	BILL_REMIT_TO IS 'Company             Number' , 
	BILL_CUST_CLASS IS 'Customer            Class' , 
	BILL_PROV IS 'Province            Code' , 
	BILL_CTRY IS 'Country' , 
	SHIP_REMIT_TO IS 'Company             Number' , 
	SHIP_CUST_CLASS IS 'Customer            Class' , 
	SHIP_PROV IS 'Province            Code' , 
	SHIP_CTRY IS 'Country' , 
	INV_TYPE IS 'Invoice             Credit' , 
	"PART" IS 'Part                Number' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFINVSP 
( INV_COMP TEXT IS 'Company Number' , 
	INV_PLNT TEXT IS 'Plant Code' , 
	INV_CURR TEXT IS 'Currency Code' , 
	BILL_REMIT_TO TEXT IS 'Company Number' , 
	BILL_CUST_CLASS TEXT IS 'Customer Class' , 
	BILL_PROV TEXT IS 'Province Code' , 
	BILL_CTRY TEXT IS 'Country' , 
	SHIP_REMIT_TO TEXT IS 'Company Number' , 
	SHIP_CUST_CLASS TEXT IS 'Customer Class' , 
	SHIP_PROV TEXT IS 'Province Code' , 
	SHIP_CTRY TEXT IS 'Country' , 
	INV_TYPE TEXT IS 'Invoice Credit' , 
	"PART" TEXT IS 'Part Number' ) ; 
  
  
CREATE VIEW RLARP.VW_FFITEMM ( 
	ITEM , 
	DESCR1 , 
	DESCR2 , 
	DESCR3 , 
	MAJG , 
	MING , 
	MAJS , 
	MINS , 
	GLDC , 
	GLEC , 
	HARM , 
	CLASS , 
	WEIGHT , 
	WEIGHT_UOM , 
	SHIP_VOL , 
	SHIP_UOM , 
	DEF_PLNT , 
	CUSTPART , 
	ASSEMCODE , 
	STOCK_TYPE , 
	MAT_GRP ) 
	AS 
	SELECT  
			AVPART ITEM,  
			RTRIM(AVDES1) DESCR1, 
			RTRIM(AVDES2) DESCR2, 
			RTRIM(AVDES3) DESCR3, 
	 		AVMAJG||' - '||RTRIM(BQDES) MAJG,  
			AVMING||' - '||RTRIM(BRDES) MING,  
			AVMAJS||' - '||RTRIM(MS.BSDES1) MAJS,  
			AVMINS||' - '||RTRIM(NS.BSDES1) MINS,  
			AVGLCD||' - '||RTRIM(GD.A30) GLDC,  
			AVGLED||' - '||RTRIM(GE.A30) GLEC,  
			AVHARM,  
			AVCLSS,  
			AVNWHT, AVNWUN, AVSVOL, AVSVUN, AVDPLT, AVCPT#, AVASSC, AVTYPE,  
			M.GROUP 	 	  
	FROM  
		RLARP.VW_FFSTKMX S  
		LEFT OUTER JOIN LGDAT.MAJG ON  
			BQGRP = AVMAJG  
		LEFT OUTER JOIN LGDAT.MMSL MS ON  
			MS.BSMJCD = AVMAJS AND  
			MS.BSMNCD = ''  
		LEFT OUTER JOIN LGDAT.MMSL NS ON  
			NS.BSMJCD = AVMAJS AND  
			NS.BSMNCD = AVMINS  
		LEFT OUTER JOIN LGDAT.MMGP ON  
			BRGRP = AVMAJG AND  
			BRMGRP = AVMING  
		LEFT OUTER JOIN LGDAT.CODE GE ON  
			RTRIM(LTRIM(GE.A9)) = AVGLED AND  
			GE.A2 = 'GE'  
		LEFT OUTER JOIN LGDAT.CODE GD ON  
			RTRIM(LTRIM(GD.A9)) = AVGLCD AND  
			GD.A2 = 'EE'  
		LEFT OUTER JOIN RLARP.FFMGRP M ON  
			PART = AVPART   
	RCDFMT VW_FFITEMM ; 
  
LABEL ON TABLE RLARP.VW_FFITEMM 
	IS 'Inv - All parts with group descriptions' ; 
  
LABEL ON COLUMN RLARP.VW_FFITEMM 
( ITEM IS 'Part                Number' , 
	HARM IS 'Harmonization #' , 
	CLASS IS 'Inventory           Class               Code' , 
	WEIGHT IS 'Net Weight' , 
	WEIGHT_UOM IS 'Net Weight          Unit' , 
	SHIP_VOL IS 'Shipping            Volume' , 
	SHIP_UOM IS 'Shipping            Volume              Unit' , 
	DEF_PLNT IS 'Default             Plant               Code' , 
	CUSTPART IS 'Customer            Part #' , 
	ASSEMCODE IS 'Assembly            Code' , 
	STOCK_TYPE IS 'Stock               Type' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFITEMM 
( ITEM TEXT IS 'Part Number' , 
	HARM TEXT IS 'Harmonization #' , 
	CLASS TEXT IS 'Inventory Class Code' , 
	WEIGHT TEXT IS 'Net Weight' , 
	WEIGHT_UOM TEXT IS 'Net Weight Unit' , 
	SHIP_VOL TEXT IS 'Shipping Volume' , 
	SHIP_UOM TEXT IS 'Shipping Volume Unit' , 
	DEF_PLNT TEXT IS 'Default Plant Code' , 
	CUSTPART TEXT IS 'Customer Part #' , 
	ASSEMCODE TEXT IS 'Assembly Code' , 
	STOCK_TYPE TEXT IS 'Stock Type' ) ; 
  
  
CREATE VIEW RLARP.VW_FFJRNL ( 
	FSPR , 
	COMP , 
	BATCH , 
	JRNL# , 
	GL_BATCH , 
	POST_STAT , 
	REVERSING , 
	BATCH_DESCR FOR COLUMN BATCH00001 , 
	JRNL_DESCR , 
	"SOURCE" , 
	ENTERED_BY , 
	REVISED_BY , 
	JCDAT , 
	JTDAT , 
	JRDAT , 
	BCDAT , 
	UCJTOT , 
	LINES ) 
	AS 
	SELECT  
		DIGITS(UCFSYR)||DIGITS(UCFSPR) AS FSPR,  
		UBCOMP COMP,  
		UBBTCH BATCH,  
		UCJRNL JRNL#,  
		UBPSBT GL_BATCH,  
		UBSTAT POST_STAT,  
		UCREVE REVERSING,  
		UBDESC BATCH_DESCR,  
		UCDESC JRNL_DESCR,  
		UCJSRC SOURCE,  
		UBCRBY AS ENTERED_BY,  
		UBRVBY AS REVISED_BY,  
		CHAR(UCCDAT) JCDAT,  
		CHAR(UCTDAT) JTDAT,  
		CHAR(UCRDAT) JRDAT,  
		CHAR(UBCDAT) BCDAT,  
		UCJTOT,  
		COUNT(UDLINE) LINES  
	FROM  
		LGDAT.JRNA  
		INNER JOIN LGDAT.JRNB ON  
			UCBTCH = UBBTCH AND  
			UCCOMP = UBCOMP  
		LEFT OUTER JOIN LGDAT.JRNC ON  
			UDCOMP = UCCOMP AND  
			UDBTCH = UCBTCH AND  
			UDJRNL = UCJRNL  
	GROUP BY  
		DIGITS(UCFSYR)||DIGITS(UCFSPR) ,  
		UBCOMP ,  
		UBBTCH ,  
		UCJRNL ,  
		UBPSBT ,  
		UBSTAT ,  
		UCREVE ,  
		UBDESC ,  
		UCDESC,  
		UCJSRC,  
		UBCRBY ,  
		UBRVBY ,  
		CHAR(UCCDAT) ,  
		CHAR(UCTDAT) ,  
		CHAR(UCRDAT) ,  
		CHAR(UBCDAT) ,  
		UCJTOT   
	RCDFMT VW_FFJRNL  ; 
  
LABEL ON TABLE RLARP.VW_FFJRNL 
	IS 'Acct - Journal batches and entries' ; 
  
LABEL ON COLUMN RLARP.VW_FFJRNL 
( COMP IS 'Company             Code' , 
	BATCH IS 'Batch               Number' , 
	JRNL# IS 'Journal             Number' , 
	GL_BATCH IS 'Posting             Batch' , 
	POST_STAT IS 'Status              Code' , 
	REVERSING IS 'Reversing           Entry' , 
	BATCH_DESCR IS 'Description' , 
	JRNL_DESCR IS 'Description' , 
	"SOURCE" IS 'Source' , 
	ENTERED_BY IS 'Created             By User' , 
	REVISED_BY IS 'Revised             By User' , 
	UCJTOT IS 'Journal             Total' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFJRNL 
( COMP TEXT IS 'Company Code' , 
	BATCH TEXT IS 'Batch Number' , 
	JRNL# TEXT IS 'Journal Number' , 
	GL_BATCH TEXT IS 'Posting Batch' , 
	POST_STAT TEXT IS 'Status Code' , 
	REVERSING TEXT IS 'Reversing Entry' , 
	BATCH_DESCR TEXT IS 'Description' , 
	JRNL_DESCR TEXT IS 'Description' , 
	"SOURCE" TEXT IS 'Source' , 
	ENTERED_BY TEXT IS 'Created By User' , 
	REVISED_BY TEXT IS 'Revised By User' , 
	UCJTOT TEXT IS 'Journal Total' ) ; 
  

  
CREATE VIEW RLARP.VW_FFMFL_1 ( 
	ORD_PERD , 
	CALC_STATUS FOR COLUMN CALC_00001 , 
	DCPPCL , 
	DCODAT , 
	DCMDAT , 
	PLNT , 
	SHIPP , 
	SHIPL , 
	BILL_CUST , 
	BILL_CUST_CLASS FOR COLUMN BILL_00002 , 
	SHIP_CUST_CLASS FOR COLUMN SHIP_00001 , 
	CTRY , 
	DEST , 
	DCPO , 
	DCPROM , 
	DDORD# , 
	DDPART , 
	DDQTOI , 
	DDGLC , 
	GLDC , 
	MAJG , 
	MING , 
	GLEC , 
	FGRP , 
	DCCURR , 
	ORD_AMT_USD FOR COLUMN ORD_A00001 , 
	ORD_TERMS , 
	PALLET_PUNIT FOR COLUMN PALLE00001 , 
	PALLETS , 
	CGRP , 
	GEO , 
	CHAN , 
	FREIGHT , 
	CREDITS , 
	REBATES , 
	TERMS , 
	ORD_COST_USD FOR COLUMN ORD_C00001 ) 
	AS 
	SELECT  
			ORD_PERD, CALC_STATUS, DCPPCL, DCODAT, DCMDAT, B.PLNT,  
			QZPROV||' - '||BVPRCD SHIPP,  
			SUBSTR(QZPOST,1,3)||' - '||SUBSTR(BVPOST,1,3) SHIPL,  
			BILL_CUST, BILL_CUST_CLASS, SHIP_CUST_CLASS, BVCTRY CTRY, BVPRCD DEST, RTRIM(DCPO) DCPO, RTRIM(DCPROM) DCPROM,  
			DDORD#, DDPART, DDQTOI, DDGLC, GLDC, MAJG, MING, GLEC, FGRP, DCCURR,  
			ORD_AMT_USD,  
			ORD_TERMS,  
			--PAYDATE, PAYDAYS, 
			--DISCP, DISCDAYS, 
			--CASE PAYDATE WHEN '' THEN PAYDAYS ELSE DAYS(PAYDATE) - DAYS(DCMDAT) END NETDAYS, 
			--V6PACK, V6PACU, 
			CASE COALESCE(FACTOR,0) WHEN 0 THEN FLOAT(V6PACK) ELSE FLOAT(FACTOR) END PALLET_PUNIT,  
			--MAT, LAB, 
			FLOAT(DDQTOI)*CASE COALESCE(FACTOR,0) WHEN 0 THEN 1.0/FLOAT(V6PACK) ELSE FLOAT(FACTOR) END PALLETS,  
			COALESCE(CGRP,RTRIM(SUBSTR(BILL_CUST,12,100))) CGRP,  
			GEO, CHAN,  
			--PRATE, 
			--COALESCE(CRED,0) CREDR, 
			--COALESCE(REBT,0) REBTR, 
			FLOAT(DDQTOI)*CASE COALESCE(FACTOR,0) WHEN 0 THEN 1.0/FLOAT(V6PACK) ELSE FLOAT(FACTOR) END*CASE DCPPCL WHEN 'P' THEN TL/24 ELSE 0 END FREIGHT,  
			COALESCE(CRED,0)*ORD_AMT_USD CREDITS,  
			COALESCE(REBT,0)*ORD_AMT_USD REBATES,  
			-MIN(  
					FLOAT(  
						(  
						30.0-CASE PAYDATE WHEN '' THEN PAYDAYS ELSE DAYS(PAYDATE) - DAYS(DCMDAT) END  
						)  
						/30.0  
					)  
					*.01  
				,  
					(  
						FLOAT  
						(  
						30.0 - DISCDAYS  
						)  
						/30.0  
						*.01  
						-COALESCE(DISCP,0.0)  
					)  
			)*ORD_AMT_USD TERMS,  
			DDQTOI*(MAT+LAB)*RATE ORD_COST_USD  
		FROM  
			 RLARP.VW_FFORDB B  
			LEFT OUTER JOIN LGDAT.CUST ON  
				BVCUST = RTRIM(SUBSTR(SHIP_CUST,1,8))  
			LEFT OUTER JOIN LGDAT.STKA A ON  
				V6PART = DDPART AND  
				V6PLNT = B.PLNT  
			LEFT OUTER JOIN QGPL.FFICSTX X ON  
				X.PART = V6PART AND  
				X.PLNT = V6PLNT AND  
				TRI = 'STD'  
			LEFT OUTER JOIN RLARP.VW_FFUNIT PU ON  
				IHPART = V6PART AND  
				IHUNT1 = V6UNTI AND  
				IHUNT2 = 'PLT'  
			LEFT OUTER JOIN RLARP.VW_FFPLPR PL ON  
				PL.YAPLNT = B.PLNT  
			LEFT OUTER JOIN RLARP.VW_FFGLPD PD ON  
				PL.COMP = PD.COMP AND  
				SDAT <= DCODAT AND  
				EDAT >= DCODAT  
			LEFT OUTER JOIN RLARP.FFCRET F ON  
				FCUR = CURR AND  
				TCUR = 'US' AND  
				RTYP = 'ME' AND  
				F.PERD = FSPR  
			LEFT OUTER JOIN RLARP.FFTERR T ON  
				PROV = BVPRCD AND  
				CTRY = BVCTRY AND  
				T.VERS = 'INI'  
			LEFT OUTER JOIN RLARP.FFCHNL C ON  
				BILL = BILL_CUST_CLASS AND  
				SHIP = SHIP_CUST_CLASS AND  
				C.VERS = 'INI'  
			LEFT OUTER JOIN LGDAT.PLNT P ON  
				P.YAPLNT = B.PLNT  
			LEFT OUTER JOIN LGDAT.ADRS ON  
				QZADR = YAADR#  
			LEFT OUTER JOIN RLARP.FFFR8 R ON  
				F = SUBSTR(QZPOST,1,3) AND  
				T = SUBSTR(BVPOST,1,3) AND  
				CARRIER = 'MARKET' AND  
				VERSION = '201501'  
			LEFT OUTER JOIN RLARP.FFCUST ON  
				CUSTN = SUBSTR(BILL_CUST,1,8)  
			LEFT OUTER JOIN RLARP.FFCRED CR ON  
				RTRIM(CUSTG) = COALESCE(RTRIM(CGRP),BILL_CUST) AND  
				CR.VERS = 'INI'  
		WHERE  
			ORD_PERD >= '1501' AND ORD_PERD < '1600'   
	RCDFMT VW_FFMFL_1 ; 
  
LABEL ON TABLE RLARP.VW_FFMFL_1 
	IS 'Pricing Project Data Source' ; 
  
LABEL ON COLUMN RLARP.VW_FFMFL_1 
( DCPPCL IS 'Prepaid             Collect' , 
	DCODAT IS 'Date                Entered' , 
	DCMDAT IS 'Promise             Date' , 
	BILL_CUST_CLASS IS 'Customer            Class' , 
	SHIP_CUST_CLASS IS 'Customer            Class' , 
	CTRY IS 'Country' , 
	DEST IS 'Province            Code' , 
	DDORD# IS 'Order               Number' , 
	DDPART IS 'Part                Number' , 
	DDQTOI IS 'Quantity            Ordered IU' , 
	DDGLC IS 'G/L                 Code' , 
	DCCURR IS 'Currency' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFMFL_1 
( DCPPCL TEXT IS 'Prepaid Collect' , 
	DCODAT TEXT IS 'Date Entered' , 
	DCMDAT TEXT IS 'Promise Date' , 
	BILL_CUST_CLASS TEXT IS 'Customer Class' , 
	SHIP_CUST_CLASS TEXT IS 'Customer Class' , 
	CTRY TEXT IS 'Country' , 
	DEST TEXT IS 'Province Code' , 
	DDORD# TEXT IS 'Order Number' , 
	DDPART TEXT IS 'Part Number' , 
	DDQTOI TEXT IS 'Quantity Ordered IU' , 
	DDGLC TEXT IS 'G/L Code' , 
	DCCURR TEXT IS 'Currency' ) ; 

  
CREATE VIEW RLARP.VW_FFOEE ( 
	PERD , 
	NWPLNT , 
	ADEPT , 
	ARESC , 
	SDEPT , 
	SRESC , 
	RRATE , 
	QTYG , 
	QTYS , 
	STIME , 
	RTIME , 
	DTIME , 
	ABSLAB , 
	ABSOVH , 
	CODE ) 
	AS 
	SELECT  
		PERD, NWPLNT, ADEPT, ARESC, SDEPT, SRESC, RRATE,  
		SUM(OAQTYG) QTYG,  
		SUM(OAQTYS) QTYS,  
		SUM(STIME) STIME,  
		SUM(RTIME) RTIME,  
		SUM(DTIME) DTIME,  
		SUM(ABSLAB) ABSLAB,  
		SUM(ABSOVH) ABSOVH,  
		CODE  
	FROM  
	(  
	  -----------------------------DOWNTIME-------------------------------------------- 
	SELECT  
		NWFSYY||DIGITS(NWFSPP) PERD, NWPLNT, NXDEPT ADEPT, NXRESC ARESC, '' SDEPT, '' SRESC,  
		0 RRATE,  
		0 OAQTYG, 0 OAQTYS,  
		0 STIME,  
		0 RTIME,  
		SUM(NXTIME) DTIME,  
		0 ABSLAB,  
		0 ABSOVH,  
		RTRIM(NXINDC)||' - '||RTRIM(AFDES1) CODE  
	FROM  
		LGDAT.RPRH  
		INNER JOIN LGDAT.RPRD ON  
			NWBTID = NXBTID  
		LEFT OUTER JOIN LGDAT.INDLBR ON  
			AFCODE = NXINDC  
	GROUP BY  
		NWFSYY||DIGITS(NWFSPP), NWPLNT, NXDEPT, NXRESC,RTRIM(NXINDC)||' - '||RTRIM(AFDES1)  

	UNION ALL  

--------------------------------RUN TIME---------------------------------------- 
	SELECT  
		NWFSYY||DIGITS(NWFSPP) PERD, NWPLNT, OADEPT ADEPT, OARESC ARESC, AODEPT SDEPT, AORESC SRESC,  
		CASE ABVBRD WHEN 0 THEN IFNULL(AAVBRD,0) ELSE IFNULL(ABVBRD,0) END+CASE ABBRDR WHEN 0 THEN IFNULL(AABRDR,0) ELSE IFNULL(ABBRDR,0) END RRATE,  
		0 OAQTYG, 0 OAQTYS,  
		0 STIME,  
		SUM(OATIME) RTIME,  
		0 DTIME,  
		0 ABSLAB, 0 ABSOVH,  
		'02 - RUN' CODE  
	FROM  
		LGDAT.RPRR  
		INNER JOIN LGDAT.RPRH ON  
			NWBTID = OABTID  
		LEFT OUTER JOIN LGDAT.METHDR ON  
			AOPART = OAPART AND  
			AOPLNT = NWPLNT AND  
			AOSEQ# = OASEQ#  
		LEFT OUTER JOIN LGDAT.PUNIT C1 ON  
			C1.IHPART = OAPART AND  
			C1.IHUNT2 = OAUNIT AND  
			C1.IHUNT1 = AOUNIT  
		LEFT OUTER JOIN LGDAT.PUNIT C2 ON  
			C2.IHPART = OAPART AND  
			C2.IHUNT1 = OAUNIT AND  
			C2.IHUNT2 = AOUNIT  
		LEFT OUTER JOIN LGDAT.RESRE ON  
			ABDEPT = AODEPT AND  
			ABRESC = AORESC  
		LEFT OUTER JOIN LGDAT.DEPTS ON  
			ABDEPT = AADEPT  
		LEFT OUTER JOIN LGDAT.STKA ON  
			V6PART = OAPART AND  
			V6PLNT = NWPLNT  
	GROUP BY  
		NWFSYY||DIGITS(NWFSPP), NWPLNT, OADEPT, OARESC, AORESC, AODEPT,  
		CASE ABVBRD WHEN 0 THEN IFNULL(AAVBRD,0) ELSE IFNULL(ABVBRD,0) END+CASE ABBRDR WHEN 0 THEN IFNULL(AABRDR,0) ELSE IFNULL(ABBRDR,0) END  
	  
	UNION ALL  
	  
	  -------------------------------------EARNED HOURS------------------------------------------------ 
	SELECT  
		NWFSYY||DIGITS(NWFSPP) PERD, NWPLNT, OADEPT ADEPT, OARESC ARESC, AODEPT SDEPT, AORESC SRESC,  
		(  
			CASE ABVBRD WHEN 0 THEN IFNULL(AAVBRD,0) ELSE IFNULL(ABVBRD,0) END+  
			CASE ABBRDR WHEN 0 THEN IFNULL(AABRDR,0) ELSE IFNULL(ABBRDR,0) END  
		) RRATE,  
		SUM(OAQTYG) OAQTYG,  
		SUM(OAQTYS) OAQTYS,  
		SUM(  
			(CASE IFNULL(AORUNS,0) WHEN 0 THEN 0 ELSE 1/AORUNS END+AOSETP/1000000)*  
			FLOAT(OAQTYG+OAQTYS)*  
			COALESCE((C1.IHCNV1/C1.IHCNV2),(C2.IHCNV2/C2.IHCNV1),FLOAT(1))) STIME,  
		0 RTIME,  
		0 DTIME,  
		SUM(  
			CASE ABLABR WHEN 0 THEN IFNULL(AASTDR,0) ELSE IFNULL(ABLABR,0) END*  
			(CASE IFNULL(AORUNS,0) WHEN 0 THEN 0 ELSE 1/AORUNS END*AO#MEN/AO#MCH+AOSETP*AOSCRW/1000000)*  
			FLOAT(OAQTYG+OAQTYS)*  
			COALESCE((C1.IHCNV1/C1.IHCNV2),(C2.IHCNV2/C2.IHCNV1),FLOAT(1))  
		) ABSLAB,  
		SUM(  
			(CASE ABVBRD WHEN 0 THEN IFNULL(AAVBRD,0) ELSE IFNULL(ABVBRD,0) END+CASE IFNULL(ABBRDR,0) WHEN 0 THEN IFNULL(AABRDR,0) ELSE IFNULL(ABBRDR,0) END)*  
			(CASE IFNULL(AORUNS,0) WHEN 0 THEN 0 ELSE 1/AORUNS END+AOSETP/1000000)*  
			FLOAT(OAQTYG+OAQTYS)*  
			COALESCE((C1.IHCNV1/C1.IHCNV2),(C2.IHCNV2/C2.IHCNV1),FLOAT(1))  
		) ABSOVH,  
		'01 - EARNED' CODE  
	FROM  
		LGDAT.RPRR  
		INNER JOIN LGDAT.RPRH ON  
			NWBTID = OABTID  
		LEFT OUTER JOIN LGDAT.METHDR ON  
			AOPART = OAPART AND  
			AOPLNT = NWPLNT AND  
			AOSEQ# = OASEQ#  
		LEFT OUTER JOIN LGDAT.PUNIT C1 ON  
			C1.IHPART = OAPART AND  
			C1.IHUNT2 = OAUNIT AND  
			C1.IHUNT1 = AOUNIT  
		LEFT OUTER JOIN LGDAT.PUNIT C2 ON  
			C2.IHPART = OAPART AND  
			C2.IHUNT1 = OAUNIT AND  
			C2.IHUNT2 = AOUNIT  
		LEFT OUTER JOIN LGDAT.RESRE ON  
			ABDEPT = AODEPT AND  
			ABRESC = AORESC  
		LEFT OUTER JOIN LGDAT.DEPTS ON  
			ABDEPT = AADEPT  
		LEFT OUTER JOIN LGDAT.STKA ON  
			V6PART = OAPART AND  
			V6PLNT = NWPLNT  
	WHERE  
		AORESC <> ''  
	GROUP BY  
		NWFSYY||DIGITS(NWFSPP), NWPLNT, OADEPT, OARESC, AORESC, AODEPT,  
		CASE ABVBRD WHEN 0 THEN IFNULL(AAVBRD,0) ELSE IFNULL(ABVBRD,0) END+CASE ABBRDR WHEN 0 THEN IFNULL(AABRDR,0) ELSE IFNULL(ABBRDR,0) END  
	) X  
	GROUP BY  
		PERD, NWPLNT, ADEPT, ARESC, SDEPT, SRESC, RRATE, CODE   
	RCDFMT VW_FF_OEE  ; 
  
LABEL ON TABLE RLARP.VW_FFOEE 
	IS 'Prod - Query of reported times & earned hours' ; 
  
LABEL ON COLUMN RLARP.VW_FFOEE 
( NWPLNT IS 'Plant               Code' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFOEE 
( NWPLNT TEXT IS 'Plant Code' , 
	ADEPT TEXT IS 'Department' , 
	ARESC TEXT IS 'Resource' ) ; 

  
CREATE VIEW RLARP.VW_FFOPAP ( 
	PERIOD , 
	FSPR , 
	IDAT , 
	DDAT , 
	FHCOM# , 
	VEN# , 
	DESCR , 
	VEND_DESCR , 
	FHBANK , 
	FHVCH# , 
	INVOICE , 
	FHVDES , 
	FHCURR , 
	AMT , 
	AMT_USD ) 
	AS 
	SELECT  
		DIGITS(FHPYY)||DIGITS(FHPPER) AS PERIOD,  
		AP FSPR,  
		CHAR(FHIDAT) IDAT, CHAR(FHDDAT) DDAT,  
		FHCOM#,  
		FHVEN# VEN#,  
		RTRIM(BTNAME) DESCR,  
		RTRIM(FHVEN#)||' - '||RTRIM(BTNAME) VEND_DESCR,  
		FHBANK,  
		FHVCH#,  
		FHINV# AS INVOICE,  
		FHVDES,  
		FHCURR,  
		FHCBAL AMT,  
		ROUND(FHCBAL*RATE,2) AMT_USD  
	FROM  
		LGDAT."OPEN"  
		LEFT OUTER JOIN LGDAT.VEND ON  
			BTVEND = FHVEN#  
		LEFT OUTER JOIN LGDAT.VCHR ON  
			IDVCH# = FHVCH# AND  
			IDCOM# = FHCOM# AND  
			IDBNK# = FHBANK AND  
			IDFISY = FHPYY AND  
			IDFISP = FHPPER  
		LEFT OUTER JOIN RLARP.VW_FFCOPR C ON  
			COMP = FHCOM#  
		LEFT OUTER JOIN RLARP.FFCRET X ON  
			X.FCUR = FHCURR AND  
			X.TCUR = 'US' AND  
			X.RTYP = 'ME' AND  
			X.PERD = C.AP  
	WHERE  
		FHCBAL <> 0 AND DIGITS(FHPYY)||DIGITS(FHPPER) >= '0901'   
	RCDFMT VW_FFOPAP  ; 
  
LABEL ON TABLE RLARP.VW_FFOPAP 
	IS 'AP - Open Vouchers' ; 
  
LABEL ON COLUMN RLARP.VW_FFOPAP 
( FHCOM# IS 'Company' , 
	VEN# IS 'Vendor #' , 
	FHBANK IS 'Pay. Bank           Code' , 
	FHVCH# IS 'Voucher             Number' , 
	INVOICE IS 'Invoice             Number' , 
	FHVDES IS 'Voucher             Description' , 
	FHCURR IS 'Pay. Curr           Code' , 
	AMT IS 'Current             Balance' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFOPAP 
( FHCOM# TEXT IS 'Company' , 
	VEN# TEXT IS 'Vendor #' , 
	FHBANK TEXT IS 'Pay. Bank Code' , 
	FHVCH# TEXT IS 'Voucher Number' , 
	INVOICE TEXT IS 'Invoice Number' , 
	FHVDES TEXT IS 'Voucher Description' , 
	FHCURR TEXT IS 'Pay. Curr Code' , 
	AMT TEXT IS 'Current Balance' ) ; 
  
  
CREATE VIEW RLARP.VW_FFOPOR ( 
	DCODAT , 
	ORD_PERD , 
	DDQDAT , 
	REQ_PERD , 
	DCMDAT , 
	PRO_PERD , 
	PROM_PERD , 
	DCPO , 
	DCPROM , 
	DDORD# , 
	DDITM# , 
	DCSTAT , 
	DDITST , 
	CALC_STATUS FOR COLUMN CALC_00001 , 
	DDQTOI , 
	DDQTSI , 
	QTY_I , 
	DCCURR , 
	DCBCUS , 
	DCSCUS , 
	PLNT , 
	DDPART , 
	DDGLC , 
	DDCRRS , 
	DCTRCD , 
	DDTOTI , 
	"VALUE" , 
	VALUE_USD , 
	COST , 
	COST_USD , 
	FESVIA , 
	ACCT , 
	FGRP , 
	GLEC , 
	GLDC , 
	MAJG , 
	MING , 
	MAJS , 
	MINS ) 
	AS 
	SELECT  
		DCODAT DCODAT,  
		SUBSTR(CHAR(DCODAT),3,2)||SUBSTR(CHAR(DCODAT),6,2) ORD_PERD,  
		DDQDAT,  
		SUBSTR(CHAR(MAX(DDQDAT,CURRENT DATE)),3,2)||SUBSTR(CHAR(MAX(DDQDAT,CURRENT DATE)),6,2) REQ_PERD,  
		DCMDAT,  
		SUBSTR(CHAR(MAX(DCMDAT,CURRENT DATE)),3,2)||SUBSTR(CHAR(MAX(DCMDAT,CURRENT DATE)),6,2) PRO_PERD,  
		SUBSTR(CHAR(DCMDAT),3,2)||SUBSTR(CHAR(DCMDAT),6,2) PROM_PERD,  
		DCPO,  
		DCPROM,  
		DDORD#,  
		DDITM#,  
		DCSTAT,  
		DDITST,  
		CASE DDITST  
			WHEN 'C' THEN  
				CASE DDQTSI  
					WHEN 0 THEN 'CANCELED'  
					ELSE 'CLOSED'  
				END  
			ELSE  
				CASE WHEN DDQTSI >0 THEN 'BACKORDER' ELSE 'OPEN' END  
		END CALC_STATUS,  
		DDQTOI,  
		DDQTSI,  
		DDQTOI - DDQTSI QTY_I,  
		DCCURR,  
		DCBCUS,  
		DCSCUS,  
		SUBSTR(DDSTKL,1,3) PLNT,  
		DDPART,  
		DDGLC,  
		DDCRRS,  
		DCTRCD,  
		DDTOTI,  
		CASE DDQTOI WHEN 0 THEN 0 ELSE DDTOTI/DDQTOI END*(DDQTOI - DDQTSI) VALUE,  
		CASE DDQTOI WHEN 0 THEN 0 ELSE DDTOTI/DDQTOI END*(DDQTOI - DDQTSI)*IX.RATE VALUE_USD,  
		TOT*(DDQTOI - DDQTSI) COST,  
		TOT*(DDQTOI - DDQTSI)*CX.RATE COST_USD,  
		DCSHVI FESVIA,  
		DIGITS(ZWSAL#) ACCT,  
		AZGROP||' - '||RTRIM(BQ1TITL) FGRP,  
		GLEC, GLDC, MAJG, MING, MAJS, MINS  
	FROM  
		LGDAT.OCRI  
		INNER JOIN LGDAT.OCRH ON  
			DCORD# = DDORD#  
		LEFT OUTER JOIN LGDAT.PLNT P ON  
			P.YAPLNT = SUBSTR(DDSTKL,1,3)  
		LEFT OUTER JOIN LGDAT.CUST ON  
			BVCUST = DCBCUS  
		LEFT OUTER JOIN LGDAT.ARMASC ON  
			ZWCOMP = BVCOMP AND  
			ZWKEY1 = BVARCD AND  
			ZWKEY2 = DDGLC AND  
			ZWPLNT = CASE SUBSTR(BVCOMP,1,1) WHEN '3' THEN '0'||BVCOMP ELSE P.YAPLNT END	  
		LEFT OUTER JOIN LGDAT.MAST ON  
			AZCOMP||DIGITS(AZGL#1)||DIGITS(AZGL#2) = DIGITS(ZWSAL#)  
		LEFT OUTER JOIN LGDAT.FGRP ON  
			BQ1GRP = AZGROP  
		LEFT OUTER JOIN RLARP.VW_FFITEMM ON  
			ITEM = DDPART  
		LEFT OUTER JOIN RLARP.VW_FFPLPR PR ON  
			PR.YAPLNT = SUBSTR(DDSTKL,1,3)  
		LEFT OUTER JOIN RLARP.FFCRET IX ON  
			IX.FCUR = DCCURR AND  
			IX.TCUR = 'US' AND  
			IX.PERD = AR AND  
			IX.RTYP = 'ME'  
		LEFT OUTER JOIN RLARP.FFCRET CX ON  
			CX.FCUR = CURR AND  
			CX.TCUR = 'US' AND  
			CX.PERD = AR AND  
			CX.RTYP = 'ME'  
		LEFT OUTER JOIN QGPL.FFICSTX ON  
			PART = DDPART AND  
			PLNT = SUBSTR(DDSTKL,1,3) AND  
			TRI = 'STD'  
	WHERE  
		DDITST <> 'C' AND  
		DDQTOI - DDQTSI <> 0   
	RCDFMT VW_FFOPOR  ; 
  
LABEL ON TABLE RLARP.VW_FFOPOR 
	IS 'Sales - Open Orders' ; 
  
LABEL ON COLUMN RLARP.VW_FFOPOR 
( DCODAT IS 'Date                Entered' , 
	DDQDAT IS 'Request             Date' , 
	DCMDAT IS 'Promise             Date' , 
	DCPO IS 'Purchase            Order' , 
	DCPROM IS 'Promotion Number' , 
	DDORD# IS 'Order               Number' , 
	DDITM# IS 'Item                Number' , 
	DCSTAT IS 'Order               Status' , 
	DDITST IS 'Item                Status' , 
	DDQTOI IS 'Quantity            Ordered IU' , 
	DDQTSI IS 'Quantity            Shipped IU' , 
	DCCURR IS 'Currency' , 
	DCBCUS IS 'Bill-to             Customer' , 
	DCSCUS IS 'Ship-to             Customer' , 
	DDPART IS 'Part                Number' , 
	DDGLC IS 'G/L                 Code' , 
	DDCRRS IS 'Credit              Reason' , 
	DCTRCD IS 'Terms               Code' , 
	DDTOTI IS 'Item                Net Total' , 
	FESVIA IS 'Ship Via' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFOPOR 
( DCODAT TEXT IS 'Date Entered' , 
	DDQDAT TEXT IS 'Request Date' , 
	DCMDAT TEXT IS 'Promise Date' , 
	DCPO TEXT IS 'Purchase Order' , 
	DCPROM TEXT IS 'Promotion Number' , 
	DDORD# TEXT IS 'Order Number' , 
	DDITM# TEXT IS 'Item Number' , 
	DCSTAT TEXT IS 'Status New, A, B/o, Comp' , 
	DDITST TEXT IS 'Status Open, B/o, Compl.' , 
	DDQTOI TEXT IS 'Quantity Ordered IU' , 
	DDQTSI TEXT IS 'Quantity Shipped IU' , 
	DCCURR TEXT IS 'Currency' , 
	DCBCUS TEXT IS 'Bill-to Customer' , 
	DCSCUS TEXT IS 'Ship-to Customer' , 
	DDPART TEXT IS 'Part Number' , 
	DDGLC TEXT IS 'G/L Code' , 
	DDCRRS TEXT IS 'Credit Reason' , 
	DCTRCD TEXT IS 'Terms Code' , 
	DDTOTI TEXT IS 'Item Net Total' , 
	FESVIA TEXT IS 'Ship Via' ) ; 
  
CREATE VIEW RLARP.VW_FFORDB ( 
	DCODAT , 
	ORD_PERD , 
	DDQDAT , 
	DCMDAT , 
	DCPO , 
	DCPROM , 
	DDORD# , 
	DCPPCL , 
	DDITM# , 
	DCSTAT , 
	DDITST , 
	CALC_STATUS FOR COLUMN CALC_00001 , 
	DDQTOI , 
	DDQTSI , 
	DDSDAT , 
	DCCURR , 
	PLNT , 
	DDPART , 
	DDGLC , 
	ORD_AMT , 
	ORD_AMT_USD FOR COLUMN ORD_A00001 , 
	ACCT , 
	FGRP , 
	BILL_REMIT_TO FOR COLUMN BILL_00001 , 
	BILL_CUST_CLASS FOR COLUMN BILL_00002 , 
	BILL_CUST , 
	SHIP_CUST_CLASS FOR COLUMN SHIP_00001 , 
	SHIP_CUST , 
	"PART" , 
	GLDC , 
	GLEC , 
	MAJG , 
	MING , 
	MAJS , 
	MINS , 
	ORD_TERMS , 
	PAYDATE , 
	PAYDAYS , 
	DISCP , 
	DISCDAYS ) 
	AS 
	SELECT  
		DCODAT,  
		SUBSTR(CHAR(DCODAT),3,2)||SUBSTR(CHAR(DCODAT),6,2) ORD_PERD,  
		DDQDAT,  
		DCMDAT,  
		DCPO,  
		DCPROM,  
		DDORD#,  
		DCPPCL,  
		DDITM#,  
		DCSTAT,  
		DDITST,  
		CASE DDITST  
			WHEN 'C' THEN  
				CASE DDQTSI  
					WHEN 0 THEN 'CANCELED'  
					ELSE 'CLOSED'  
				END  
			ELSE  
				CASE WHEN DDQTSI >0 THEN 'BACKORDER' ELSE 'OPEN' END  
		END CALC_STATUS,  
		DDQTOI,  
		DDQTSI,  
		DDSDAT,  
		DCCURR,  
		SUBSTR(DDSTKL,1,3) PLNT,  
		DDPART,  
		DDGLC,  
		CASE DDQTOI WHEN 0 THEN 0 ELSE DDTOTI END ORD_AMT,  
		CASE DDQTOI WHEN 0 THEN 0 ELSE DDTOTI END*XO.RATE ORD_AMT_USD,  
		DIGITS(ZWSAL#) ACCT,  
		AZGROP||' - '||RTRIM(BQ1TITL) FGRP,  
		-------------------CUSTOMER INFO--------------------- 
		BC.BVCOMP BILL_REMIT_TO,  
		BC.BVCLAS BILL_CUST_CLASS,  
		BC.BVCUST||' - '||RTRIM(BC.BVNAME) BILL_CUST,  
		SC.BVCLAS SHIP_CUST_CLASS,  
		SC.BVCUST||' - '||RTRIM(SC.BVNAME) SHIP_CUST,  
		DDPART PART,  
		GLDC,  
		GLEC,  
		MAJG, 	MING, 	MAJS, 	MINS,  
		------------------TERMS-------------------------------- 
		DCTRCD||' - '||RTRIM(TC.DESCR) ORD_TERMS,  
		PAYDATE,  
		PAYDAYS,  
		DISCP,  
		DISCDAYS  
	FROM  
		LGDAT.OCRI  
		INNER JOIN LGDAT.OCRH ON  
			DCORD# = DDORD#  
		--------changed below join from inner to left, have ship quantities with no BOL, trying to resolve 
		LEFT OUTER JOIN RLARP.FFCRET XO ON  
			XO.FCUR = DCCURR AND  
			XO.TCUR = 'US' AND  
			XO.RTYP = 'MA' AND  
			XO.PERD = SUBSTR(CHAR(DCODAT),3,2)||SUBSTR(CHAR(DCODAT),6,2)  
		LEFT OUTER JOIN LGDAT.PLNT ON  
			YAPLNT = SUBSTR(DDSTKL,1,3)  
		LEFT OUTER JOIN RLARP.VW_FFCOPR ON  
			COMP = YACOMP  
		LEFT OUTER JOIN LGDAT.CUST BC ON  
			BC.BVCUST = DCBCUS  
		LEFT OUTER JOIN LGDAT.CUST SC ON  
			SC.BVCUST = DCSCUS  
		LEFT OUTER JOIN LGDAT.ARMASC ON  
			ZWCOMP = BC.BVCOMP AND  
			ZWKEY1 = BC.BVARCD AND  
			ZWKEY2 = DDGLC AND  
			ZWPLNT = CASE SUBSTR(BC.BVCOMP,1,1) WHEN '3' THEN '0'||BC.BVCOMP ELSE SUBSTR(DDSTKL,1,3) END  
		LEFT OUTER JOIN LGDAT.MAST ON  
			AZCOMP||DIGITS(AZGL#1)||DIGITS(AZGL#2) = DIGITS(ZWSAL#)  
		LEFT OUTER JOIN LGDAT.FGRP ON  
			BQ1GRP = AZGROP  
		LEFT OUTER JOIN RLARP.VW_FFITEMM I ON  
			ITEM = DDPART  
		LEFT OUTER JOIN RLARP.VW_FFTMCD TC ON  
			TERM = DCTRCD   
	RCDFMT VW_FFORDB  ; 
  
LABEL ON TABLE RLARP.VW_FFORDB 
	IS 'Sales - Orders Booked' ; 
  
LABEL ON COLUMN RLARP.VW_FFORDB 
( DCODAT IS 'Date                Entered' , 
	DDQDAT IS 'Request             Date' , 
	DCMDAT IS 'Promise             Date' , 
	DCPO IS 'Purchase            Order' , 
	DCPROM IS 'Promotion Number' , 
	DDORD# IS 'Order               Number' , 
	DCPPCL IS 'Prepaid             Collect' , 
	DDITM# IS 'Item                Number' , 
	DCSTAT IS 'Order               Status' , 
	DDITST IS 'Item                Status' , 
	DDQTOI IS 'Quantity            Ordered IU' , 
	DDQTSI IS 'Quantity            Shipped IU' , 
	DDSDAT IS 'Ship                Date' , 
	DCCURR IS 'Currency' , 
	DDPART IS 'Part                Number' , 
	DDGLC IS 'G/L                 Code' , 
	BILL_REMIT_TO IS 'Company             Number' , 
	BILL_CUST_CLASS IS 'Customer            Class' , 
	SHIP_CUST_CLASS IS 'Customer            Class' , 
	"PART" IS 'Part                Number' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFORDB 
( DCODAT TEXT IS 'Date Entered' , 
	DDQDAT TEXT IS 'Request Date' , 
	DCMDAT TEXT IS 'Promise Date' , 
	DCPO TEXT IS 'Purchase Order' , 
	DCPROM TEXT IS 'Promotion Number' , 
	DDORD# TEXT IS 'Order Number' , 
	DCPPCL TEXT IS 'Prepaid Collect' , 
	DDITM# TEXT IS 'Item Number' , 
	DCSTAT TEXT IS 'Status New, A, B/o, Comp' , 
	DDITST TEXT IS 'Status Open, B/o, Compl.' , 
	DDQTOI TEXT IS 'Quantity Ordered IU' , 
	DDQTSI TEXT IS 'Quantity Shipped IU' , 
	DDSDAT TEXT IS 'Ship Date' , 
	DCCURR TEXT IS 'Currency' , 
	DDPART TEXT IS 'Part Number' , 
	DDGLC TEXT IS 'G/L Code' , 
	BILL_REMIT_TO TEXT IS 'Company Number' , 
	BILL_CUST_CLASS TEXT IS 'Customer Class' , 
	SHIP_CUST_CLASS TEXT IS 'Customer Class' , 
	"PART" TEXT IS 'Part Number' ) ; 
  

  
CREATE VIEW RLARP.VW_FFORDD ( 
	ORDER_COMPONENT FOR COLUMN ORDER00001 , 
	ORD_DATE , 
	ORD_PERD , 
	REQ_DATE , 
	CUST_PO , 
	PROMOTION , 
	ORDER_NUMBER FOR COLUMN ORDER00002 , 
	ORDER_LINE , 
	HEADER_STAT FOR COLUMN HEADE00001 , 
	LINE_STAT , 
	LINE_TOT_ORD FOR COLUMN LINE_00001 , 
	LINE_TOT_SHIP FOR COLUMN LINE_00002 , 
	CALC_STATUS FOR COLUMN CALC_00001 , 
	QUANTITY , 
	CURRENCY , 
	PLANT , 
	ORDER_DIST_CODE FOR COLUMN ORDER00003 , 
	RETURN_REASON FOR COLUMN RETUR00001 , 
	ORD_AMT , 
	ORD_AMT_USD FOR COLUMN ORD_A00001 , 
	BOL_NUMBER , 
	BOL_LINE , 
	MASTER_BOL , 
	CARRIER , 
	BOL_POSTED , 
	BOL_DATE , 
	INVOICE_NUMBER FOR COLUMN INVOI00001 , 
	INVOICE_LINE FOR COLUMN INVOI00002 , 
	INVOICE_FISC_PERIOD FOR COLUMN INVOI00003 , 
	INV_AMT , 
	INV_AMT_USD FOR COLUMN INV_A00001 , 
	ACCT , 
	FGRP , 
	BILL_REMIT_TO FOR COLUMN BILL_00001 , 
	BILL_CUST_CLASS FOR COLUMN BILL_00002 , 
	BILL_CUST , 
	BILL_PROV , 
	BILL_CTRY , 
	BILL_CITY , 
	BILL_POSTAL FOR COLUMN BILL_00003 , 
	BILL_AGENT , 
	SHIP_REMIT_TO FOR COLUMN SHIP_00001 , 
	SHIP_CUST_CLASS FOR COLUMN SHIP_00002 , 
	SHIP_CUST , 
	SHIP_PROV , 
	SHIP_CTRY , 
	SHIP_CITY , 
	SHIP_POSTAL FOR COLUMN SHIP_00003 , 
	SHIP_AGENT , 
	"PART" , 
	PART_MOLD , 
	PART_MOLD_COLR FOR COLUMN PART_00001 , 
	PART_COLOR , 
	PART_DESCR , 
	PART_DIST_CODE FOR COLUMN PART_00002 , 
	PART_EXP_CODE FOR COLUMN PART_00003 , 
	PART_MAJG , 
	PART_MING , 
	PART_MAJS , 
	PART_MINS , 
	COST_CURR , 
	TOT_COST_USD FOR COLUMN TOT_C00001 , 
	MAT_COST_USD FOR COLUMN MAT_C00001 , 
	FRT_COST_USD FOR COLUMN FRT_C00001 , 
	CUR_COST_USD FOR COLUMN CUR_C00001 , 
	LAB_COST_USD FOR COLUMN LAB_C00001 , 
	VBR_COST_USD FOR COLUMN VBR_C00001 , 
	FBR_COST_USD FOR COLUMN FBR_C00001 , 
	OBR_COST_USD FOR COLUMN OBR_C00001 , 
	ORD_TERMS , 
	PAYDATE , 
	PAYDAYS , 
	DISCP , 
	DISCDAYS ) 
	AS 
	SELECT  
		ORDER_COMPONENT,  
		DCODAT ORD_DATE,  
		COALESCE(ORD_PERD,'NONE') ORD_PERD,  
		DDQDAT REQ_DATE,  
		DCPO CUST_PO,  
		DCPROM PROMOTION,  
		DDORD# ORDER_NUMBER,  
		DDITM# ORDER_LINE,  
		DCSTAT HEADER_STAT,  
		DDITST LINE_STAT,  
		DDQTOI LINE_TOT_ORD,  
		DDQTSI LINE_TOT_SHIP,  
		CASE ORD.DDITST  
			WHEN 'C' THEN  
				CASE ORD.DDQTSI  
					WHEN 0 THEN 'CANCELED'  
					ELSE 'CLOSED'  
				END  
			ELSE  
				CASE ORDER_COMPONENT  
					WHEN 'SHIPMENT' THEN 'CLOSED'  
					ELSE CASE WHEN DDQTSI >0 THEN 'BACKORDER' ELSE 'OPEN' END  
				END  
		END CALC_STATUS,  
		QTY_I QUANTITY,  
		DCCURR CURRENCY,  
		ORD.PLNT PLANT,  
		DDGLC ORDER_DIST_CODE,  
		DDCRRS||' - '||RTRIM(RC.DESCR) RETURN_REASON,  
		ORD_AMT,  
		ORD_AMT*XO.RATE ORD_AMT_USD,  
		BOL BOL_NUMBER,  
		BOLI BOL_LINE,  
		FEMBOL MASTER_BOL,  
		FESVIA CARRIER,  
		FESIND BOL_POSTED,  
		FESDAT BOL_DATE,  
		DIINV# INVOICE_NUMBER,  
		DILIN# INVOICE_LINE,  
		COALESCE(INV_PERD,'NONE') INVOICE_FISC_PERIOD,  
		DIEXT INV_AMT,  
		ORD.DIEXT*XI.RATE INV_AMT_USD,  
		DIGITS(ZWSAL#) ACCT,  
		AZGROP||' - '||RTRIM(BQ1TITL) FGRP,  
		-------------------CUSTOMER INFO--------------------- 
		BC.BVCOMP BILL_REMIT_TO,  
		BC.BVCLAS BILL_CUST_CLASS,  
		BC.BVCUST||' - '||RTRIM(BC.BVNAME) BILL_CUST,  
		BC.BVPRCD BILL_PROV,  
		BC.BVCTRY BILL_CTRY,  
		BC.BVCITY BILL_CITY,  
		BC.BVPOST BILL_POSTAL,  
		BC.BVSALM||' - '||RTRIM(BS.A30) BILL_AGENT,  
		SC.BVCOMP SHIP_REMIT_TO,  
		SC.BVCLAS SHIP_CUST_CLASS,  
		SC.BVCUST||' - '||RTRIM(SC.BVNAME) SHIP_CUST,  
		SC.BVPRCD SHIP_PROV,  
		SC.BVCTRY SHIP_CTRY,  
		SC.BVCITY SHIP_CITY,  
		SC.BVPOST SHIP_POSTAL,  
		SC.BVSALM||' - '||RTRIM(SS.A30) SHIP_AGENT,  
		------------------PART INFO-------------------------- 
		DDPART PART,  
		SUBSTR(DDPART,1,8) PART_MOLD,  
		SUBSTR(DDPART,1,11) PART_MOLD_COLR,  
		CL.DESCR PART_COLOR,  
		I.DESCR1 PART_DESCR,  
		GLDC PART_DIST_CODE,  
		GLEC PART_EXP_CODE,  
		MAJG PART_MAJG, 	MING PART_MING, 	MAJS PART_MAJS, 	MINS PART_MINS,  
		------------------COST INFO--------------------------- 
		CURR COST_CURR,  
		ROUND(TOT*QTY_I*XC.RATE,2) TOT_COST_USD,  
		ROUND(MAT*QTY_I*XC.RATE,2) MAT_COST_USD,  
		ROUND(FRT*QTY_I*XC.RATE,2) FRT_COST_USD,  
		ROUND(CUR*QTY_I*XC.RATE,2) CUR_COST_USD,  
		ROUND(LAB*QTY_I*XC.RATE,2) LAB_COST_USD,  
		ROUND(VBR*QTY_I*XC.RATE,2) VBR_COST_USD,  
		ROUND(FBR*QTY_I*XC.RATE,2) FBR_COST_USD,  
		ROUND(OBR*QTY_I*XC.RATE,2) OBR_COST_USD,  
		------------------TERMS-------------------------------- 
		ORD.DCTRCD||' - '||RTRIM(TC.DESCR) ORD_TERMS,  
		PAYDATE,  
		PAYDAYS,  
		DISCP,  
		DISCDAYS  
	FROM  
	(  
	SELECT  
		'REMAINDER' ORDER_COMPONENT,  
		DCODAT,  
		SUBSTR(CHAR(DCODAT),3,2)||SUBSTR(CHAR(DCODAT),6,2) ORD_PERD,  
		DDQDAT,  
		DCPO,  
		DCPROM,  
		DDORD#,  
		DDITM#,  
		DCSTAT,  
		DDITST,  
		DDQTOI,  
		DDQTSI,  
		DDQTOI - DDQTSI QTY_I,  
		DCCURR,  
		DCBCUS,  
		DCSCUS,  
		SUBSTR(DDSTKL,1,3) PLNT,  
		DDPART,  
		DDGLC,  
		DDCRRS,  
		DCTRCD,  
		CASE DDQTOI WHEN 0 THEN 0 ELSE DDTOTI/DDQTOI END*(DDQTOI - DDQTSI) ORD_AMT,  
		0 BOL,  
		0 BOLI,  
		0 FEMBOL,  
		DCSHVI FESVIA,  
		'' FESIND,  
		DATE(0) FESDAT,  
		0 DIINV#,  
		0 DILIN#,  
		'NONE' INV_PERD,  
		0.0 DIEXT  
	FROM  
		LGDAT.OCRI  
		INNER JOIN LGDAT.OCRH ON  
			DCORD# = DDORD#  
	WHERE  
		DDQTOI - DDQTSI <> 0  
	  
	UNION ALL  
	  
	SELECT  
		'SHIPMENT' ORDER_COMPONENT,  
		DCODAT,  
		SUBSTR(CHAR(DCODAT),3,2)||SUBSTR(CHAR(DCODAT),6,2) ORD_PERD,  
		DDQDAT,  
		CASE COALESCE(DHCPO,'') WHEN '' THEN DCPO ELSE DHCPO END DCPO,  
		DCPROM,  
		DDORD#,  
		DDITM#,  
		DCSTAT,  
		DDITST,  
		DDQTOI,  
		DDQTSI,  
		FGQSHP*CASE FESIND WHEN 'Y' THEN 1 ELSE 0 END QTY_I,  
		DCCURR,  
		DCBCUS,  
		DCSCUS,  
		COALESCE(FGPLNT,SUBSTR(DDSTKL,1,3)) PLNT,  
		DDPART,  
		DDGLC,  
		COALESCE(DIREAS,DDCRRS) DDCRRS,  
		DCTRCD,  
		CASE DDQTOI WHEN 0 THEN 0 ELSE DDTOTI/DDQTOI END*COALESCE(FGQSHP*CASE FESIND WHEN 'Y' THEN 1 ELSE 0 END,DDQTSI) ORD_AMT,  
		FGBOL# BOL,  
		FGENT# BOLI,  
		FEMBOL,  
		FESVIA,  
		FESIND,  
		FESDAT,  
		DIINV#,  
		DILIN#,  
		DIGITS(DHARYR)||DIGITS(DHARPR) INV_PERD,  
		DIEXT*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END DIEXT  
		  
	FROM  
		LGDAT.OCRI  
		INNER JOIN LGDAT.OCRH ON  
			DCORD# = DDORD#  
		  --------changed below join from inner to left, have ship quantities with no BOL, trying to resolve 
		LEFT OUTER JOIN LGDAT.BOLD ON  
			FGORD# = DDORD# AND  
			FGITEM = DDITM#  
		LEFT OUTER JOIN LGDAT.BOLH ON  
			FEBOL# = FGBOL#  
		LEFT OUTER JOIN LGDAT.OID ON  
			DIINV# = FGINV# AND  
			DILIN# = FGLIN#  
		LEFT OUTER JOIN LGDAT.OIH ON  
			DHINV# = DIINV#  
	WHERE  
		DDQTSI <> 0	  
	) ORD  
		LEFT OUTER JOIN RLARP.FFCRET XO ON  
			XO.FCUR = DCCURR AND  
			XO.TCUR = 'US' AND  
			XO.RTYP = 'MA' AND  
			XO.PERD = ORD.ORD_PERD  
		LEFT OUTER JOIN RLARP.FFCRET XI ON  
			XI.FCUR = DCCURR AND  
			XI.TCUR = 'US' AND  
			XI.RTYP = 'MA' AND  
			XI.PERD = ORD.INV_PERD  
		LEFT OUTER JOIN LGDAT.PLNT ON  
			YAPLNT = ORD.PLNT  
		LEFT OUTER JOIN RLARP.VW_FFCOPR ON  
			COMP = YACOMP  
		LEFT OUTER JOIN RLARP.FFCRET XC ON  
			XC.FCUR = CURR AND  
			XC.TCUR = 'US' AND  
			XC.RTYP = 'MA' AND  
			XC.PERD = ORD.ORD_PERD  
		LEFT OUTER JOIN LGDAT.CUST BC ON  
			BC.BVCUST = ORD.DCBCUS  
		LEFT OUTER JOIN LGDAT.CUST SC ON  
			SC.BVCUST = DCSCUS  
		LEFT OUTER JOIN LGDAT.ARMASC ON  
			ZWCOMP = BC.BVCOMP AND  
			ZWKEY1 = BC.BVARCD AND  
			ZWKEY2 = ORD.DDGLC AND  
			ZWPLNT = CASE SUBSTR(BC.BVCOMP,1,1) WHEN '3' THEN '0'||BC.BVCOMP ELSE ORD.PLNT END  
		LEFT OUTER JOIN LGDAT.MAST ON  
			AZCOMP||DIGITS(AZGL#1)||DIGITS(AZGL#2) = DIGITS(ZWSAL#)  
		LEFT OUTER JOIN LGDAT.FGRP ON  
			BQ1GRP = AZGROP  
		LEFT OUTER JOIN RLARP.VW_FFITEMM I ON  
			ITEM = DDPART  
		LEFT OUTER JOIN QGPL.FFICSTX C ON  
			C.PART = ORD.DDPART AND  
			C.PLNT = ORD.PLNT AND  
			TRI = 'STD'  
		LEFT OUTER JOIN RLARP.FFCOLR "CL" ON  
			COLOR = CASE SUBSTRING(DDPART,1,3)  
					WHEN 'S01' THEN SUBSTRING(DDPART,12,3)  
					WHEN 'S02' THEN SUBSTRING(DDPART,12,3)  
					WHEN 'S21' THEN SUBSTRING(DDPART,12,3)  
					ELSE SUBSTRING(DDPART,9,3)  
				END  
		LEFT OUTER JOIN LGDAT.CODE BS ON  
			BS.A2 = 'MM' AND  
			LTRIM(RTRIM(BS.A9)) = BC.BVSALM  
		LEFT OUTER JOIN LGDAT.CODE SS ON  
			SS.A2 = 'MM' AND  
			LTRIM(RTRIM(SS.A9)) = SC.BVSALM  
		LEFT OUTER JOIN RLARP.VW_FFTMCD TC ON  
			TERM = ORD.DCTRCD  
		LEFT OUTER JOIN RLARP.VW_FFRTCD RC ON  
			CODE = DDCRRS   
		RCDFMT VW_FFORDD  ; 
  
LABEL ON TABLE RLARP.VW_FFORDD 
	IS 'Sales - Order Details' ; 
  
LABEL ON COLUMN RLARP.VW_FFORDD 
( ORD_DATE IS 'Date                Entered' , 
	REQ_DATE IS 'Request             Date' , 
	CUST_PO IS 'Purchase            Order' , 
	PROMOTION IS 'Promotion Number' , 
	ORDER_NUMBER IS 'Order               Number' , 
	ORDER_LINE IS 'Item                Number' , 
	HEADER_STAT IS 'Order               Status' , 
	LINE_STAT IS 'Item                Status' , 
	LINE_TOT_ORD IS 'Quantity            Ordered IU' , 
	LINE_TOT_SHIP IS 'Quantity            Shipped IU' , 
	CURRENCY IS 'Currency' , 
	ORDER_DIST_CODE IS 'G/L                 Code' , 
	BILL_REMIT_TO IS 'Company             Number' , 
	BILL_CUST_CLASS IS 'Customer            Class' , 
	BILL_PROV IS 'Province            Code' , 
	BILL_CTRY IS 'Country' , 
	BILL_CITY IS 'City' , 
	BILL_POSTAL IS 'Postal              Code' , 
	SHIP_REMIT_TO IS 'Company             Number' , 
	SHIP_CUST_CLASS IS 'Customer            Class' , 
	SHIP_PROV IS 'Province            Code' , 
	SHIP_CTRY IS 'Country' , 
	SHIP_CITY IS 'City' , 
	SHIP_POSTAL IS 'Postal              Code' , 
	"PART" IS 'Part                Number' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFORDD 
( ORD_DATE TEXT IS 'Date Entered' , 
	REQ_DATE TEXT IS 'Request Date' , 
	CUST_PO TEXT IS 'Purchase Order' , 
	PROMOTION TEXT IS 'Promotion Number' , 
	ORDER_NUMBER TEXT IS 'Order Number' , 
	ORDER_LINE TEXT IS 'Item Number' , 
	HEADER_STAT TEXT IS 'Status New, A, B/o, Comp' , 
	LINE_STAT TEXT IS 'Status Open, B/o, Compl.' , 
	LINE_TOT_ORD TEXT IS 'Quantity Ordered IU' , 
	LINE_TOT_SHIP TEXT IS 'Quantity Shipped IU' , 
	CURRENCY TEXT IS 'Currency' , 
	ORDER_DIST_CODE TEXT IS 'G/L Code' , 
	CARRIER TEXT IS 'Ship Via' , 
	BILL_REMIT_TO TEXT IS 'Company Number' , 
	BILL_CUST_CLASS TEXT IS 'Customer Class' , 
	BILL_PROV TEXT IS 'Province Code' , 
	BILL_CTRY TEXT IS 'Country' , 
	BILL_CITY TEXT IS 'City' , 
	BILL_POSTAL TEXT IS 'Postal Code' , 
	SHIP_REMIT_TO TEXT IS 'Company Number' , 
	SHIP_CUST_CLASS TEXT IS 'Customer Class' , 
	SHIP_PROV TEXT IS 'Province Code' , 
	SHIP_CTRY TEXT IS 'Country' , 
	SHIP_CITY TEXT IS 'City' , 
	SHIP_POSTAL TEXT IS 'Postal Code' , 
	"PART" TEXT IS 'Part Number' ) ; 
  
  
CREATE VIEW RLARP.VW_FFPLPR ( 
	YAPLNT , 
	COMP , 
	DESCR , 
	CURR , 
	GL , 
	AR , 
	AP , 
	FA , 
	IC ) 
	AS 
	SELECT  
		YAPLNT, 
		LTRIM(RTRIM(A9)) AS COMP,  
		A30 AS DESCR,  
		SUBSTR(A249,242,2) CURR,  
		SUBSTR(A249,32,4) AS GL,  
		SUBSTR(A249,190,4) AS AR,  
		SUBSTR(A249,182,4) AS AP,  
		SUBSTR(A249,198,4) AS FA,  
		SUBSTR(A249,238,4) AS IC  
	FROM  
		LGDAT.PLNT 
		INNER JOIN LGDAT.CODE ON 
			YACOMP = LTRIM(RTRIM(A9)) 
		LEFT OUTER JOIN LGDAT.NAME ON  
			'C0000'||LTRIM(RTRIM(A9)) = A7  
	WHERE  
		A2 = 'AA' OR A2 IS NULL   
	RCDFMT VW_FFPLPR  ; 
  
LABEL ON TABLE RLARP.VW_FFPLPR 
	IS 'Mast - Plants & Current Fiscal Periods' ; 
  
LABEL ON COLUMN RLARP.VW_FFPLPR 
( YAPLNT IS 'Plant               Code' , 
	DESCR IS 'Description         Usually' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFPLPR 
( YAPLNT TEXT IS 'Plant Code' , 
	DESCR TEXT IS 'Description Usually' ) ; 
  
  
CREATE VIEW RLARP.VW_FFPOAC ( 
	FSYR , 
	QRTR , 
	FSPR , 
	CAPR , 
	WEEKNUM , 
	COMP , 
	OPSGRP , 
	FGRP , 
	FGRP_DESCR , 
	ACCT , 
	PRIME , 
	MODULE , 
	CUSMOD , 
	TRAN1 , 
	TRAN2 , 
	STMT , 
	LVL0D , 
	LVL1D , 
	LVL2D , 
	LVL3D , 
	AZFUT3 , 
	EBITDA , 
	DEPARTMENT , 
	IC_TYPE , 
	IC_POINTER , 
	ELIM_GRP , 
	FUNCAREA , 
	TRANS_BASE , 
	TRANS_USD ) 
	AS 
	SELECT  
		SUBSTR(CHAR(CURRENT_DATE),1,4) FSYR,  
		'' QRTR,  
		AP FSPR,  
		SUBSTR(CHAR(CURRENT_DATE),3,2)||SUBSTR(CHAR(CURRENT_DATE),6,2) CAPR,  
		SUBSTR(CHAR(KRRDAT),3,2)||SUBSTR(DIGITS(WEEK(KRRDAT)),9,2) WEEKNUM,  
		KRCOM# COMP,  
		'' OPSGRP,  
		AZGROP||' - '||RTRIM(BQ1TITL) FGRP,  
		RTRIM(BQ1TITL) FGRP_DESCR,  
		KRCOM#||DIGITS(CASE KRGLVR WHEN 0 THEN KRGLEX ELSE KRGLVR END) ACCT,  
		SUBSTR(KRCOM#||DIGITS(CASE KRGLVR WHEN 0 THEN KRGLEX ELSE KRGLVR END),7,4)||' - '||RTRIM(AZTITL) PRIME,  
		'PORCAP' MODULE,  
		'PORCAP' CUSMOD,  
		'VENDOR - '||RTRIM(BTNAME) TRAN1,  
		DIGITS(KRPO#)||' - '||RTRIM(KCDESC) TRAN2,  
		'' STMT,  
		'' LVL0D,  
		'' LVL1D,  
		'' LVL2D,  
		'' LVL3D,  
		AZFUT3,  
		RTRIM(D35DES1) EBITDA,  
		RTRIM(D35DES2) DEPARTMENT,  
		RTRIM(D35DES3) IC_TYPE,  
		RTRIM(D35USR1) IC_POINTER,  
		RTRIM(D35USR2) ELIM_GRP,  
		RTRIM(D35USR3) FUNCAREA,  
		ROUND(((KREXT+KRPST)/KRBQTY*FLOAT(KRRCVX)-KRSCST)*KRBQTY,2) TRANS_BASE,  
		ROUND(((KREXT+KRPST)/KRBQTY*FLOAT(KRRCVX)-KRSCST)*KRBQTY*RATE,2) TRANS_USD  
	FROM  
		LGDAT.PORCAP  
		INNER JOIN RLARP.VW_FFCOPR ON  
			COMP = KRCOM#  
		LEFT OUTER JOIN LGDAT.MAST ON  
			AZCOMP||DIGITS(AZGL#1)||DIGITS(AZGL#2) = KRCOM#||DIGITS(CASE KRGLVR WHEN 0 THEN KRGLEX ELSE KRGLVR END)  
		LEFT OUTER JOIN LGDAT.FGRP ON  
			BQ1GRP = AZGROP  
		LEFT OUTER JOIN LGDAT.VEND ON  
			BTVEND = KRVEN#  
		LEFT OUTER JOIN LGDAT.POD ON  
			KCPO# = KRPO# AND  
			KCITM# = KRPOI# AND  
			KCLIN# = 1  
		LEFT OUTER JOIN LGDAT.GGTP ON  
			D35GCDE = AZFUT3  
		LEFT OUTER JOIN RLARP.FFCRET ON  
			FCUR = CURR AND  
			TCUR = 'US' AND  
			RTYP = 'ME' AND  
			PERD = AP   
	RCDFMT VW_FFPOAC  ; 
  
LABEL ON TABLE RLARP.VW_FFPOAC 
	IS 'AP - PORCAP accrual; expense accounts only' ; 
  
LABEL ON COLUMN RLARP.VW_FFPOAC 
( COMP IS 'Company             Code' , 
	AZFUT3 IS 'Future Use          Fut3' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFPOAC 
( COMP TEXT IS 'Company Code' , 
	AZFUT3 TEXT IS 'Future Use Fut3' ) ; 
  
CREATE VIEW RLARP.VW_FFROWC ( 
	"TABLE" , 
	RECORDS ) 
	AS 
	SELECT 'OCRI - ORDER ITEMS' "TABLE", COUNT(*) RECORDS FROM LGDAT.OCRI  
	UNION ALL  
	SELECT 'OCRH - ORDER HEADER' "TABLE", COUNT(*) RECORDS FROM LGDAT.OCRH  
	UNION ALL  
	SELECT 'OID - INVOICE ITEMS' "TABLE", COUNT(*) RECORDS FROM LGDAT.OID  
	UNION ALL  
	SELECT 'OIH - INVOICE HEADER' "TABLE", COUNT(*) RECORDS FROM LGDAT.OIH  
	UNION ALL  
	SELECT 'OIS - DISCOUNT/CHARGE DETAILS' "TABLE", COUNT(*) RECORDS FROM LGDAT.OIS  
	UNION ALL  
	SELECT 'OIX - TAX' "TABLE", COUNT(*) RECORDS FROM LGDAT.OIX  
	UNION ALL  
	SELECT 'OIT - DESCRIPTION' "TABLE", COUNT(*) RECORDS FROM LGDAT.OIT  
	UNION ALL  
	SELECT 'BOLD - BOL ITEMS' "TABLE", COUNT(*) RECORDS FROM LGDAT.BOLD  
	UNION ALL  
	SELECT 'BOLH - BOL HEADER' "TABLE", COUNT(*) RECORDS FROM LGDAT.BOLH  
	UNION ALL  
	SELECT 'POI - PURCHASE ORDER ITEMS' "TABLE", COUNT(*) RECORDS FROM LGDAT.POI  
	UNION ALL  
	SELECT 'POD - PO ITEM DESCRIPTIONS' "TABLE", COUNT(*) RECORDS FROM LGDAT.POD  
	UNION ALL  
	SELECT 'POG - PO ITEM GL ALLOC' "TABLE", COUNT(*) RECORDS FROM LGDAT.POG  
	UNION ALL  
	SELECT 'POH - PURCHASE ORDER HEADER' "TABLE", COUNT(*) RECORDS FROM LGDAT.POH   
	RCDFMT VW_FF00001 ; 
  
LABEL ON TABLE RLARP.VW_FFROWC 
	IS 'Mast - record counts of select files' ; 
  

  
CREATE VIEW RLARP.VW_FFRTCD ( 
	CODE , 
	DESCR , 
	INV_GL , 
	INV_QTY , 
	SLS_QTY , 
	COS , 
	QC_INSPECT ) 
	AS 
	SELECT  
		LTRIM(RTRIM(A9)) AS CODE,  
		A30 AS DESCR,  
		SUBSTR(A215,5,1) AS INV_GL , 
		SUBSTR(A215,1,1) AS INV_QTY,  
		SUBSTR(A215,2,1) AS SLS_QTY,  
		SUBSTR(A215,3,1) AS COS,  
		SUBSTR(A215,4,1) AS QC_INSPECT 
	FROM  
		LGDAT.CODE 
	WHERE 
		A2 = 'RS'   
	RCDFMT VW_FFRTCD  ; 
  
LABEL ON TABLE RLARP.VW_FFRTCD 
	IS 'Sales - Return Reason Codes' ; 
  
LABEL ON COLUMN RLARP.VW_FFRTCD 
( DESCR IS 'Description         Usually' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFRTCD 
( DESCR TEXT IS 'Description Usually' ) ; 

  
CREATE VIEW RLARP.VW_FFSTKAX ( 
	MPART , 
	MPLNT , 
	TLVL , 
	XLVL , 
	"PART" , 
	PLNT , 
	STAT , 
	RPLN , 
	TPLN ) 
	AS 
	WITH RECURSIVE PPE(MPART, MPLNT, TLVL, LVL,PART, PLNT, STAT, RPLN, TPLN)  
		AS  
		(  
			SELECT  
				V6PART, V6PLNT,  
				DIGITS(INT(ROW_NUMBER() OVER ())),  
				0,  
				V6PART,  
				V6PLNT,  
				V6STAT,  
				V6RPLN,  
				V6TPLN  
			FROM  
				LGDAT.STKA B  
			WHERE  
				B.V6RPLN = 3 AND  
				B.V6STAT = 'A'  
			  
			UNION ALL  
			  
			SELECT  
				MPART, MPLNT,  
				PPE.TLVL,  
				PPE.LVL+1,  
				V6PART,  
				V6PLNT,  
				V6STAT,  
				V6RPLN,  
				V6TPLN  
			FROM  
				PPE PPE  
				INNER JOIN LGDAT.STKA ON  
					V6PART = PPE.PART AND  
					V6PLNT = PPE.TPLN  
			WHERE  
				PPE.LVL < 10  
		)  
		SELECT  
			MPART, MPLNT, TLVL, REPEAT('. ',LVL)|| LVL AS XLVL, PART, PLNT, STAT, RPLN, TPLN  
	FROM  
		PPE 

LABEL ON TABLE RLARP.VW_FFSTKAX 
IS 'Prod - explode stka procurement path' ; 

LABEL ON COLUMN RLARP.VW_FFSTKAX 
( MPART TEXT IS 'Part Number' , 
	MPLNT TEXT IS 'Plant Code' , 
	"PART" TEXT IS 'Part Number' , 
	PLNT TEXT IS 'Plant Code' , 
	STAT TEXT IS 'Inventory Item Status' , 
	RPLN TEXT IS 'Replenishment Type' , 
	TPLN TEXT IS 'Source Plant' ) ; 
  

  
CREATE VIEW RLARP.VW_FFSTKB ( 
	FSPR , 
	ACCT , 
	PRIME , 
	PLANT , 
	BXPART , 
	"PART" , 
	ILOC , 
	GLCODE , 
	INVCODE , 
	MAJG , 
	MING , 
	MAJS , 
	MINS , 
	STATUS , 
	PROCUREMENT FOR COLUMN PROCU00001 , 
	QTOH , 
	EXTCOST , 
	EXTCOST_USD FOR COLUMN EXTCO00001 ) 
	AS 
	SELECT  
		P.FSPR FSPR,  
		YACOMP||DIGITS(Y1INVA) ACCT,  
		SUBSTR(YACOMP||DIGITS(Y1INVA),7,4) PRIME,  
		BXPLNT PLANT,  
		BXPART, 
		RTRIM(BXPART)||' - '||RTRIM(COALESCE(AVDES1,AWDES1,'')) PART,  
	BXSTOK||' - '||RTRIM(AXLOCN) ILOC,  
	COALESCE(AWGLDC, AVGLCD) GLCODE,  
	COALESCE(AWGLED, AVGLED) INVCODE,  
	COALESCE(AWMAJG,AVMAJG)||' - '||RTRIM(BQDES) MAJG,  
	COALESCE(AWMING, AVMING)||' - '||RTRIM(BRDES) MING,  
	COALESCE(AWMAJS, AVMAJS)||' - '||RTRIM(SMJ.BSDES1) MAJS,  
	COALESCE(AWMINS, AVMINS)||' - '||RTRIM(SMN.BSDES1) MINS,  
	V6STAT STATUS,  
	V6RPLN PROCUREMENT,  
	BXQTOH QTOH,  
	BXQTOH*TOT EXTCOST,  
	BXQTOH*TOT*RATE EXTCOST_USD  
	FROM  
		LGDAT.STKB  
		LEFT OUTER JOIN LGDAT.STKA ON  
			V6PART = BXPART AND  
			V6PLNT = BXPLNT  
		LEFT OUTER JOIN LGDAT.STKMM ON  
			AVPART = BXPART  
		LEFT OUTER JOIN LGDAT.STKMP ON  
			AWPART = BXPART  
		LEFT OUTER JOIN LGDAT.PLNT ON  
			YAPLNT = BXPLNT  
		LEFT OUTER JOIN LGDAT.GLIE ON  
			Y1PLNT = BXPLNT AND  
			Y1GLEC = COALESCE(AVGLED, AWGLED)  
		LEFT OUTER JOIN LGDAT.MAJG ON  
			BQGRP = COALESCE(AWMAJG, AVMAJG)  
		LEFT OUTER JOIN LGDAT.MMGP ON  
			BRGRP = BQGRP AND  
			BRMGRP = COALESCE(AVMING, AWMING)  
		LEFT OUTER JOIN LGDAT.MMSL SMN ON  
			SMN.BSMJCD = COALESCE(AVMAJS, AWMAJS) AND  
			SMN.BSMNCD = COALESCE(AVMINS, AWMINS)  
		LEFT OUTER JOIN LGDAT.MMSL SMJ ON  
			SMJ.BSMJCD = COALESCE(AVMAJS, AWMAJS) AND  
			SMJ.BSMNCD = ''  
		LEFT OUTER JOIN LGDAT.STKR ON  
			AXSTKL = BXSTOK  
		LEFT OUTER JOIN LGDAT.MAST ON  
			AZCOMP||DIGITS(AZGL#1)||DIGITS(AZGL#2) = YACOMP||DIGITS(Y1INVA)  
		LEFT OUTER JOIN RLARP.FFPERD P ON  
			P.CAPR = SUBSTR(CHAR(CURRENT_DATE),3,2)||SUBSTR(CHAR(CURRENT_DATE),6,2)  
		LEFT OUTER JOIN RLARP.FFCRET FX ON  
			FCUR = AZFUT2 AND  
			TCUR = 'US' AND  
			RTYP = 'ME' AND  
			FX.PERD = P.FSPR  
		LEFT OUTER JOIN QGPL.FFICSTX ON  
			PART = BXPART AND  
			PLNT = BXPLNT AND  
			TRI = 'STD'  
		WHERE  
			BXPART <> '' AND  
			BXQTOH<> 0   
	RCDFMT VW_FFSTKB  ; 
  
LABEL ON TABLE RLARP.VW_FFSTKB 
	IS 'Inv - On Hand' ; 
  
LABEL ON COLUMN RLARP.VW_FFSTKB 
( PLANT IS 'Plant               Code' , 
	BXPART IS 'Part Number' , 
	STATUS IS 'Inventory           Item                Status' , 
	PROCUREMENT IS 'Replenishment       Type' , 
	QTOH IS 'Quantity            On Hand' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFSTKB 
( PLANT TEXT IS 'Plant Code' , 
	BXPART TEXT IS 'Part Number' , 
	STATUS TEXT IS 'Inventory Item Status' , 
	PROCUREMENT TEXT IS 'Replenishment Type' , 
	QTOH TEXT IS 'Quantity On Hand' ) ; 

  
CREATE VIEW RLARP.VW_FFSTKMX ( 
	AVPART , 
	AVDES1 , 
	AVDES2 , 
	AVDES3 , 
	AVMING , 
	AVUNTI , 
	AVMAJG , 
	AVMAJS , 
	AVMINS , 
	AVGLCD , 
	AVGLED , 
	AVHARM , 
	AVCLSS , 
	AVNWHT , 
	AVNWUN , 
	AVSVOL , 
	AVSVUN , 
	AVENGC , 
	AVREVL , 
	AVRDAT , 
	AVDPLT , 
	AVCPT# , 
	AVASSC , 
	AVTYPE ) 
	AS 
	SELECT  
			AVPART,  
			AVDES1,  
			AVDES2,  
			AVDES3,  
			AVMING,  
			AVUNTI,  
			AVMAJG,  
			AVMAJS,  
			AVMINS,  
			AVGLCD,  
			AVGLED,  
			AVHARM,  
			AVCLSS,  
			AVNWHT,  
			AVNWUN,  
			AVSVOL,  
			AVSVUN,  
			AVENGC,  
			AVREVL,  
			AVRDAT,  
			AVDPLT,  
			AVCPT#,  
			AVASSC,  
			AVTYPE  
		FROM  
			LGDAT.STKMM  
		  
		UNION ALL  
		  
		SELECT  
			AWPART,  
			AWDES1,  
			AWDES2,  
			AWDES3,  
			AWMING,  
			AWUNTI,  
			AWMAJG,  
			AWMAJS,  
			AWMINS,  
			AWGLDC,  
			AWGLED,  
			AWHARM,  
			AWCLSS,  
			AWNWHT,  
			AWNWUN,  
			AWSVOL,  
			AWSVUN,  
			AWENGC,  
			AWREVL,  
			AWRDAT,  
			AWDPLT,  
			'',  
			AWASSC,  
			AWTYPE  
		FROM  
			LGDAT.STKMP   
	RCDFMT VW_FFSTKMX ; 
  
LABEL ON TABLE RLARP.VW_FFSTKMX 
	IS 'Inv - stacked part master' ; 
  
LABEL ON COLUMN RLARP.VW_FFSTKMX 
( AVPART IS 'Part                Number' , 
	AVDES1 IS 'Description 1' , 
	AVDES2 IS 'Description 2' , 
	AVDES3 IS 'Description 3' , 
	AVMING IS 'Minor               Group' , 
	AVUNTI IS 'Dft                 Unit of             Issue' , 
	AVMAJG IS 'Major               Group' , 
	AVMAJS IS 'Major               Sales Code' , 
	AVMINS IS 'Minor               Sales Code' , 
	AVGLCD IS 'G/L Distribution    Code' , 
	AVGLED IS 'G/L Expense         Code' , 
	AVHARM IS 'Harmonization #' , 
	AVCLSS IS 'Inventory           Class               Code' , 
	AVNWHT IS 'Net Weight' , 
	AVNWUN IS 'Net Weight          Unit' , 
	AVSVOL IS 'Shipping            Volume' , 
	AVSVUN IS 'Shipping            Volume              Unit' , 
	AVENGC IS 'Engineering         Change #' , 
	AVREVL IS 'Revision            Level' , 
	AVRDAT IS 'Revision            Date' , 
	AVDPLT IS 'Default             Plant               Code' , 
	AVCPT# IS 'Customer            Part #' , 
	AVASSC IS 'Assembly            Code' , 
	AVTYPE IS 'Stock               Type' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFSTKMX 
( AVPART TEXT IS 'Part Number' , 
	AVDES1 TEXT IS 'Description 1' , 
	AVDES2 TEXT IS 'Description 2' , 
	AVDES3 TEXT IS 'Description 3' , 
	AVMING TEXT IS 'Minor Group' , 
	AVUNTI TEXT IS 'Dft Unit of Issue' , 
	AVMAJG TEXT IS 'Major Group' , 
	AVMAJS TEXT IS 'Major Sales Code' , 
	AVMINS TEXT IS 'Minor Sales Code' , 
	AVGLCD TEXT IS 'G/L Distribution Code' , 
	AVGLED TEXT IS 'G/L Expense Code' , 
	AVHARM TEXT IS 'Harmonization #' , 
	AVCLSS TEXT IS 'Inventory Class Code' , 
	AVNWHT TEXT IS 'Net Weight' , 
	AVNWUN TEXT IS 'Net Weight Unit' , 
	AVSVOL TEXT IS 'Shipping Volume' , 
	AVSVUN TEXT IS 'Shipping Volume Unit' , 
	AVENGC TEXT IS 'Engineering Change #' , 
	AVREVL TEXT IS 'Revision Level' , 
	AVRDAT TEXT IS 'Revision Date' , 
	AVDPLT TEXT IS 'Default Plant Code' , 
	AVCPT# TEXT IS 'Customer Part #' , 
	AVASSC TEXT IS 'Assembly Code' , 
	AVTYPE TEXT IS 'Stock Type' ) ; 
  
  
CREATE VIEW RLARP.VW_FFTB ( 
	COMP , 
	PLNT , 
	ACCOUNT , 
	TITLE , 
	PRIME , 
	INACTIVE , 
	FGRP , 
	GLCC , 
	EBITDA , 
	DEPARTMENT , 
	ELIM_TYPE , 
	IC_POINTER , 
	ELIM_GRP , 
	FUNC_AREA , 
	CONSOL_LEVEL FOR COLUMN CONSO00001 , 
	FSPR , 
	CAPR , 
	OPNB , 
	NETT , 
	ENDB , 
	OPNB_USD , 
	NETT_USD , 
	ENDB_USD , 
	BGT , 
	BGT_USD ) 
	AS 
	SELECT  
		SUBSTR(ACC,1,2) AS COMP,  
		SUBSTR(ACC,3,2) AS PLNT,  
		ACC ACCOUNT,  
		AZTITL TITLE,  
		SUBSTR(ACC,7,4) PRIME,  
		AZSTAT INACTIVE,  
		AZGROP||' - '||RTRIM(BQ1TITL) FGRP,  
		AZFUT3,  
		RTRIM(D35DES1) EBITDA,  
		SUBSTR(ACC,5,2)||CASE WHEN LENGTH(RTRIM(D35DES2)) > 0 THEN ' - '||RTRIM(D35DES2) ELSE '' END DEPARTMENT,  
		RTRIM(D35DES3) ELIM_TYPE,  
		RTRIM(D35USR1) IC_POINTER,  
		RTRIM(D35USR2) ELIM_GRP,  
		RTRIM(D35USR3) FUNC_AREA,  
		D35USR4 CONSOL_LEVEL,  
		PERIOD FSPR, P.CAPR,  
		OPNB,  
		NETT,  
		ENDB,  
		ROUND(OPNB*RATE,2) OPNB_USD,  
		ROUND(NETT*RATE,2) NETT_USD,  
		ROUND(ENDB*RATE,2) ENDB_USD,  
		BGT,  
		ROUND(BGT*RATE,2) BGT_USD  
	FROM  
	(  
		SELECT 	 				
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC, SUBSTR(AJ4CCYY,3,2)||'01' AS PERIOD, AJ4OB01 AS OPNB, AJ4TT01 AS NETT, AJ4OB01+AJ4TT01 AS ENDB, AJ4CB01 BGT  
		FROM  
			LGDAT.GLMT GLMT 	  
	  
		UNION ALL  

		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC, SUBSTR(AJ4CCYY,3,2)||'02' AS PERIOD, AJ4OB02 AS OPNB, AJ4TT02 AS NETT, AJ4OB02+AJ4TT02 AS ENDB , AJ4CB02 BGT  
		FROM  
			LGDAT.GLMT GLMT  
		  
			  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC, SUBSTR(AJ4CCYY,3,2)||'03' AS PERIOD, AJ4OB03 AS OPNB, AJ4TT03 AS NETT, AJ4OB03+AJ4TT03 AS ENDB, AJ4CB03 BGT  
		FROM  
			LGDAT.GLMT GLMT  
		  
			  

		UNION ALL  

		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC, SUBSTR(AJ4CCYY,3,2)||'04' AS PERIOD, AJ4OB04 AS OPNB, AJ4TT04 AS NETT, AJ4OB04+AJ4TT04 AS ENDB, AJ4CB04 BGT  
		FROM  
			LGDAT.GLMT GLMT  
		  
			  

		UNION ALL  

		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC, SUBSTR(AJ4CCYY,3,2)||'05' AS PERIOD, AJ4OB05 AS OPNB, AJ4TT05 AS NETT, AJ4OB05+AJ4TT05 AS ENDB, AJ4CB05 BGT  
		FROM  
			LGDAT.GLMT GLMT  
		  
			  

		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC, SUBSTR(AJ4CCYY,3,2)||'06' AS PERIOD, AJ4OB06 AS OPNB, AJ4TT06 AS NETT, AJ4OB06+AJ4TT06 AS ENDB, AJ4CB06 BGT  
		FROM  
			LGDAT.GLMT GLMT  
		  
			  

		UNION ALL  

		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC, SUBSTR(AJ4CCYY,3,2)||'07' AS PERIOD, AJ4OB07 AS OPNB, AJ4TT07 AS NETT, AJ4OB07+AJ4TT07 AS ENDB, AJ4CB07 BGT  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  

		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC, SUBSTR(AJ4CCYY,3,2)||'08' AS PERIOD, AJ4OB08 AS OPNB, AJ4TT08 AS NETT, AJ4OB08+AJ4TT08 AS ENDB, AJ4CB08 BGT  
		FROM  
			LGDAT.GLMT GLMT  
		  
	  
		UNION ALL  

		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC, SUBSTR(AJ4CCYY,3,2)||'09' AS PERIOD, AJ4OB09 AS OPNB, AJ4TT09 AS NETT, AJ4OB09+AJ4TT09 AS ENDB, AJ4CB09 BGT  
		FROM  
			LGDAT.GLMT GLMT  
		  

		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC, SUBSTR(AJ4CCYY,3,2)||'10' AS PERIOD, AJ4OB10 AS OPNB, AJ4TT10 AS NETT, AJ4OB10+AJ4TT10 AS ENDB, AJ4CB10 BGT  
		FROM  
			LGDAT.GLMT GLMT  
		  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC, SUBSTR(AJ4CCYY,3,2)||'11' AS PERIOD, AJ4OB11 AS OPNB, AJ4TT11 AS NETT, AJ4OB11+AJ4TT11 AS ENDB, AJ4CB11 BGT  
		FROM  
			LGDAT.GLMT GLMT  
		  

		UNION ALL  

		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC, SUBSTR(AJ4CCYY,3,2)||'12' AS PERIOD, AJ4OB12 AS OPNB, AJ4TT12 AS NETT, AJ4OB12+AJ4TT12 AS ENDB, AJ4CB12 BGT  
		FROM  
			LGDAT.GLMT GLMT  
		  

		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC, SUBSTR(AJ4CCYY,3,2)||'13' AS PERIOD, AJ4OB13 AS OPNB, AJ4TT13 AS NETT, AJ4OB13+AJ4TT13 AS ENDB, AJ4CB13 BGT  
		FROM  
			LGDAT.GLMT GLMT  
		  

		UNION ALL  

		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC, SUBSTR(AJ4CCYY,3,2)||'14' AS PERIOD, AJ4OB14 AS OPNB, AJ4TT14 AS NETT, AJ4OB14+AJ4TT14 AS ENDB, AJ4CB14 BGT  
		FROM  
			LGDAT.GLMT GLMT  
								  
		) "STACKED"  
		INNER JOIN LGDAT.MAST ON  
			DIGITS(AZCOMP)||DIGITS(AZGL#1)||DIGITS(AZGL#2) = STACKED.ACC  
		LEFT OUTER JOIN LGDAT.FGRP ON  
			BQ1GRP = AZGROP  
		LEFT OUTER JOIN LGDAT.GGTP ON  
			D35GCDE = AZFUT3  
		LEFT OUTER JOIN RLARP.VW_FFGLPD P ON  
			COMP = SUBSTR(ACC,1,2) AND  
			P.FSPR = PERIOD  
		LEFT OUTER JOIN RLARP.FFCRET X ON  
			FCUR = AZFUT2 AND  
			TCUR = 'US' AND  
			RTYP = CASE WHEN AZATYP <= '3' THEN 'ME' ELSE 'MA' END AND  
			X.PERD = PERIOD  
	WHERE 
		( OPNB <> 0 OR NETT <> 0 OR ENDB <> 0 )   
	RCDFMT VW_FFTB    ; 
  
LABEL ON TABLE RLARP.VW_FFTB 
	IS 'Acct - Trial Balance' ; 
  
LABEL ON COLUMN RLARP.VW_FFTB 
( TITLE IS 'Account Title' , 
	INACTIVE IS 'Account             Status              Code' , 
	GLCC IS 'Future Use          Fut3' , 
	CONSOL_LEVEL IS 'User Field 4' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFTB 
( TITLE TEXT IS 'Account Title' , 
	INACTIVE TEXT IS 'Account Status Code' , 
	GLCC TEXT IS 'Future Use Fut3' , 
	CONSOL_LEVEL TEXT IS 'User Field 4' , 
	OPNB TEXT IS 'Opening Balance (Period 1)' , 
	NETT TEXT IS 'Actual Tran. This Year (Period 1)' , 
	BGT TEXT IS 'Current Budget (Period 1)' ) ; 
  
  
CREATE VIEW RLARP.VW_FFTBLCS ( 
	COMP , 
	PLNT , 
	ACC , 
	PRIME , 
	AZTITL , 
	PARENT , 
	INACTIVE , 
	GLCC , 
	ELIM_TYPE , 
	ELIM_REL , 
	ELIM_DFGRP , 
	FSPR , 
	CAPR , 
	FGRP , 
	STMT , 
	LVL0 , 
	LVL1 , 
	LVL2 , 
	LVL3 , 
	EBITDA , 
	DEPARTMENT , 
	DEP_GRP , 
	OPEN_LOCAL , 
	NET_LOCAL , 
	END_LOCAL , 
	BDGT_LOCAL , 
	USD_OPEN , 
	USD_NET , 
	USD_END , 
	USD_BDGT ) 
	AS 
	SELECT  
		SUBSTR(ACC,1,2) AS COMP,  
		SUBSTR(ACC,3,2) PLNT,  
		ACC,  
		SUBSTR(ACC,7,4) PRIME,  
		AZTITL,  
		CASE AZFUT2  
			WHEN 'CA' THEN 'CA OPS CDN'  
			WHEN 'US' THEN CASE SUBSTR(ACC,1,2)  
				WHEN '11' THEN 'CA OPS FX'  
				WHEN '19' THEN 'GROUP ELIMS'  
				ELSE 'US OPS'  
			END  
		END PARENT,  
		AZSTAT INACTIVE,  
		AZFUT3 GLCC,  
		RTRIM(D35DES3) ELIM_TYPE,  
		RTRIM(D35USR1) ELIM_REL,  
		RTRIM(D35USR2) ELIM_DFGRP,  
		PERIOD FSPR,  
		CAPR,  
		SUBSTR(LTRIM(D35USR2)||AZGROP,1,7)||' - '||RTRIM(TL.BQ1TITL) FGRP,  
		CASE WHEN AZATYP <= 3 THEN 'BALANCE SHEET' ELSE 'INCOME STATEMENT' END STMT,  
		SUBSTR(SUBSTR(LTRIM(D35USR2)||AZGROP,1,7),1,1)||' - '||RTRIM(SUBSTR(A249,1,30)) LVL0,  
		CASE LENGTH(RTRIM(SUBSTR(LTRIM(D35USR2)||AZGROP,1,7)))  
			WHEN 3 THEN SUBSTR(TL.BQ1GRP,2,2)||' - '||RTRIM(TL.BQ1TITL)  
			ELSE SUBSTR(FA.BQ1GRP,2,2)||' - '||RTRIM(FA.BQ1TITL)  
		END LVL1,  
		CASE LENGTH(RTRIM(SUBSTR(LTRIM(D35USR2)||AZGROP,1,7)))  
			WHEN 3 THEN ''  
			WHEN 5 THEN SUBSTR(TL.BQ1GRP,4,2)||' - '||RTRIM(TL.BQ1TITL)  
			ELSE SUBSTR(FB.BQ1GRP,4,2)||' - '||RTRIM(FB.BQ1TITL)  
		END LVL2,  
		CASE LENGTH(RTRIM(SUBSTR(LTRIM(D35USR2)||AZGROP,1,7)))  
			WHEN 3 THEN ''  
			WHEN 5 THEN ''  
			ELSE SUBSTR(TL.BQ1GRP,6,2)||' - '||RTRIM(TL.BQ1TITL)  
		END LVL3,  
		RTRIM(D35DES1) EBITDA,  
		RTRIM(SUBSTR(ACC,5,2)||CASE WHEN LENGTH(RTRIM(D35DES2)) >0 THEN ' - '||D35DES2 ELSE '' END) DEPARTMENT,  
		RTRIM(D35USR3) DEP_GRP,  
		OPEN OPEN_LOCAL,  
		NET NET_LOCAL,  
		END END_LOCAL,  
		BDGT BDGT_LOCAL,  
		OPEN * RATE USD_OPEN,  
		NET * RATE USD_NET,  
		END * RATE USD_END,  
		BDGT * RATE USD_BDGT  
	FROM 	  
	(  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'01' AS PERIOD,  
			AJ4OB01 AS OPEN,  
			AJ4TT01 AS NET,  
			AJ4OB01+AJ4TT01 AS END, AJ4CB01 BDGT  
		FROM  
			LGDAT.GLMT GLMT  
			  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'02' AS PERIOD,  
			AJ4OB02 AS OPEN,  
			AJ4TT02 AS NET,  
			AJ4OB02+AJ4TT02 AS END, AJ4CB02 BDGT  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'03' AS PERIOD,  
			AJ4OB03 AS OPEN,  
			AJ4TT03 AS NET,  
			AJ4OB03+AJ4TT03 AS END, AJ4CB03 BDGT  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'04' AS PERIOD,  
			AJ4OB04 AS OPEN,  
			AJ4TT04 AS NET,  
			AJ4OB04+AJ4TT04 AS END, AJ4CB04 BDGT  
		  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'05' AS PERIOD,  
			AJ4OB05 AS OPEN,  
			AJ4TT05 AS NET,  
			AJ4OB05+AJ4TT05 AS END, AJ4CB05 BDGT  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'06' AS PERIOD,  
			AJ4OB06 AS OPEN,  
			AJ4TT06 AS NET,  
			AJ4OB06+AJ4TT06 AS END,AJ4CB06 BDGT  
		  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'07' AS PERIOD,  
			AJ4OB07 AS OPEN,  
			AJ4TT07 AS NET,  
			AJ4OB07+AJ4TT07 AS END,AJ4CB07 BDGT  
		  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'08' AS PERIOD,  
			AJ4OB08 AS OPEN,  
			AJ4TT08 AS NET,  
			AJ4OB08+AJ4TT08 AS END, AJ4CB08 BDGT  
		  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'09' AS PERIOD,  
			AJ4OB09 AS OPEN,  
			AJ4TT09 AS NET,  
			AJ4OB09+AJ4TT09 AS END, AJ4CB09 BDGT  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'10' AS PERIOD,  
			AJ4OB10 AS OPEN,  
			AJ4TT10 AS NET,  
			AJ4OB10+AJ4TT10 AS END, AJ4CB10 BDGT  
		  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'11' AS PERIOD,  
			AJ4OB11 AS OPEN,  
			AJ4TT11 AS NET,  
			AJ4OB11+AJ4TT11 AS END, AJ4CB11 BDGT  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'12' AS PERIOD,  
			AJ4OB12 AS OPEN,  
			AJ4TT12 AS NET,  
			AJ4OB12+AJ4TT12 AS END, AJ4CB12 BDGT  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'13' AS PERIOD,  
			AJ4OB13 AS OPEN,  
			AJ4TT13 AS NET,  
			AJ4OB13+AJ4TT13 AS END, AJ4CB13 BDGT  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'14' AS PERIOD,  
			AJ4OB14 AS OPEN,  
			AJ4TT14 AS NET,  
			AJ4OB14+AJ4TT14 AS END, AJ4CB14 BDGT  
		FROM  
			LGDAT.GLMT GLMT  
		  
		) "STACKED"  
		INNER JOIN LGDAT.MAST ON  
			DIGITS(AZCOMP)||DIGITS(AZGL#1)||DIGITS(AZGL#2) = STACKED.ACC  
		LEFT OUTER JOIN LGDAT.GGTP ON  
			D35GCDE = AZFUT3  
		LEFT OUTER JOIN LGDAT.NAME N ON  
			SUBSTR(N.A7,7,1) = SUBSTR(LTRIM(D35USR2)||AZGROP,1,1) AND  
			SUBSTR(N.A7,1,1) = 'A'  
		LEFT OUTER JOIN LGDAT.FGRP TL ON  
			TL.BQ1GRP = SUBSTR(LTRIM(D35USR2)||AZGROP,1,7)  
		LEFT OUTER JOIN LGDAT.FGRP FA ON  
			FA.BQ1GRP = SUBSTR(TL.BQ1GRP,1,3) AND  
			LENGTH(RTRIM(TL.BQ1GRP)) >=5  
		LEFT OUTER JOIN LGDAT.FGRP FB ON  
			FB.BQ1GRP = SUBSTR(TL.BQ1GRP,1,5) AND  
			LENGTH(RTRIM(TL.BQ1GRP)) >=7  
		LEFT OUTER JOIN RLARP.FFCRET X ON  
			X.PERD = PERIOD AND  
			X.FCUR = AZFUT2 AND  
			X.TCUR = 'US' AND  
			X.RTYP = CASE WHEN AZATYP <= 3 THEN 'ME' ELSE 'MA' END  
		LEFT OUTER JOIN RLARP.VW_FFGLPD ON  
			COMP = SUBSTR(ACC,1,2) AND  
			FSPR = PERIOD  
		WHERE  
			(  
			OPEN <> 0 OR  
			NET <> 0 OR  
			END <> 0  
				)   
	RCDFMT VW_FFTBLCS ; 
  
LABEL ON TABLE RLARP.VW_FFTBLCS 
	IS 'Acct - TB w Stmt Lines - Logical Consolidation' ; 
  
LABEL ON COLUMN RLARP.VW_FFTBLCS 
( AZTITL IS 'Account Title' , 
	INACTIVE IS 'Account             Status              Code' , 
	GLCC IS 'Future Use          Fut3' , 
	ELIM_TYPE IS 'Description 3' , 
	ELIM_REL IS 'User Field 1' , 
	ELIM_DFGRP IS 'User Field 2' , 
	EBITDA IS 'Description 1' , 
	DEP_GRP IS 'User Field 3' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFTBLCS 
( AZTITL TEXT IS 'Account Title' , 
	INACTIVE TEXT IS 'Account Status Code' , 
	GLCC TEXT IS 'Future Use Fut3' , 
	ELIM_TYPE TEXT IS 'Description 3' , 
	ELIM_REL TEXT IS 'User Field 1' , 
	ELIM_DFGRP TEXT IS 'User Field 2' , 
	EBITDA TEXT IS 'Description 1' , 
	DEP_GRP TEXT IS 'User Field 3' , 
	OPEN_LOCAL TEXT IS 'Opening Balance' , 
	NET_LOCAL TEXT IS 'Actual Tran. This Year' , 
	BDGT_LOCAL TEXT IS 'Current Budget' ) ; 
  
  
CREATE VIEW RLARP.VW_FFTMCD ( 
	TERM , 
	DESCR , 
	PAYPERC , 
	PAYDATE , 
	PAYDAYS , 
	DISCP , 
	DISCDAYS ) 
	AS 
	SELECT  
		LTRIM(RTRIM(A9)) TERM,  
		LTRIM(RTRIM(A30)) DESCR,  
		FLOAT(SUBSTR(A215,10,3)) PAYPERC,  
		CASE INT(SUBSTR(A215,28,6)) WHEN 0 THEN '' ELSE '20'||SUBSTR(A215,32,2)||'-'||SUBSTR(A215,28,2)||'-'||SUBSTR(A215,30,2) END PAYDATE,  
		INT(SUBSTR(A215,64,3)) PAYDAYS,  
		ROUND(FLOAT(SUBSTR(A215,102,4))/FLOAT(10000),2) DISCP,  
		INT(SUBSTR(A215,84,3)) DISCDAYS  
	FROM  
		LGDAT.CODE  
	WHERE  
		A2 = 'NN'   
	RCDFMT VW_FFTMCD  ; 
  
LABEL ON TABLE RLARP.VW_FFTMCD 
	IS 'Mast - Term Codes' ; 
  

  
CREATE VIEW RLARP.VW_FFUNIT ( 
	IHPART , 
	IHUNT1 , 
	IHUNT2 , 
	FACTOR ) 
	AS 
	SELECT  
		IHPART, IHUNT1, IHUNT2, IHCNV2/IHCNV1 FACTOR  
	FROM  
		LGDAT.PUNIT  
	  
	UNION ALL  
	  
	SELECT  
		IHPART, IHUNT2, IHUNT1, IHCNV1/IHCNV2 FACTOR  
	FROM  
		LGDAT.PUNIT   
	RCDFMT VW_FFUNIT  ; 
  
LABEL ON TABLE RLARP.VW_FFUNIT 
	IS 'Inv - stacked unit of measure conversions' ; 
  
LABEL ON COLUMN RLARP.VW_FFUNIT 
( IHPART IS 'Part                Number' , 
	IHUNT1 IS 'Unit1' , 
	IHUNT2 IS 'Unit2' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFUNIT 
( IHPART TEXT IS 'Part Number' , 
	IHUNT1 TEXT IS 'Unit1' , 
	IHUNT2 TEXT IS 'Unit2' ) ; 
  
  
CREATE VIEW RLARP.VW_FFVPPVD ( 
	PERD , 
	COMP , 
	MODULE , 
	VEND , 
	LBPO# , 
	LBPOI# , 
	LBRKEY , 
	LBRDAT , 
	LBPT# , 
	DESCR , 
	"GROUP" , 
	LBBQTY , 
	INV# , 
	VCHR , 
	TAXES , 
	EXCHANGE , 
	TOTAL , 
	TRN_AMT , 
	ACCT , 
	FGRP ) 
	AS 
	SELECT  
			PMT.PERD, PMT.COMP, CASE IFNULL (LBPO#, 0) WHEN 0 THEN 'Unmatched Voucher' ELSE '3-Way Match' END MODULE,  
			PMT.VEND, V.LBPO#, V.LBPOI#,  
			V.LBRKEY, CHAR(V.LBRDAT) LBRDAT, V.LBPT#,  
			COALESCE(RTRIM(V.LBPT#)||CASE WHEN V.LBPT# = '' THEN '' ELSE ' - ' END||RTRIM(V.LBDESC),IDVDES) DESCR,  
			COALESCE(GROUP,RTRIM(BQ1TITL)) GROUP,  
			V.LBBQTY,  
			PMT.INV#, PMT.VCHR, 0 TAXES, 1 EXCHANGE,  
			COALESCE(PMT.LBEXT,IDGROS) TOTAL, 	  
			CASE  
				  --if the POMVAR (PMT) has nothing, then just use the ledger amount 
				WHEN PMT.LBEXT IS NULL THEN PMT.AMT  
				ELSE  
					CASE  
						  --if POMVAR explains ppv for the whole voucher within 5 cents, just use POMVAR 
						WHEN ABS(PMT.LBEXT-PMT.LBPPV) <=.05 THEN V.LBPPV  
						  --if POMVAR does not explain the ledger amount then prorata apply the ledger amount 
						  --first to the existing line item POMVAR ppv to the whole of the POMVAR voucher ppv 
						  --but if POMVAR has -0- for the PPV then proportionately apply the ledger amount 
						  --according to the line item purchase value to the voucher total purchase value 
						ELSE  
							CASE  
								WHEN PMT.LBPPV = 0 THEN V.LBEXT/PMT.LBEXT  
								ELSE V.LBPPV/PMT.LBPPV  
							END*PMT.AMT  
					END  
			END TRN_AMT,					  
			ACCT, AZGROP||' - '||RTRIM(BQ1TITL) FGRP  
	FROM  
	(  
		SELECT  
			PERD, COMP, ACCT, VCHR, INV#, CUSVEND||' - '||RTRIM(BTNAME) VEND, AMT, SUM(LBEXT) LBEXT, SUM(LBPPV) LBPPV  
		FROM  
			(  
				SELECT  
				T.PERD, SUBSTR(ACCT,1,2) COMP, ACCT, RTRIM(CUSKEY1) VCHR, CUSKEY2 BANK, CUSKEY4 INV#, CUSVEND,  
				SUM(AMT*COALESCE(IS,1)) AMT  
				FROM  
				RLARP.FFSBGLR1 T  
				INNER JOIN LGDAT.MAST ON  
				AZCOMP||DIGITS(AZGL#1)||DIGITS(AZGL#2) = T.ACCT  
				LEFT OUTER JOIN RLARP.FFFX F ON  
				F.PERD = T.PERD AND  
				AZFUT2 = 'CA'  
			WHERE  
				MODULE = 'APVN' AND  
				T.PERD >= '1503' AND  
				SUBSTR(AZGROP,1,5) = '54010'  
			GROUP BY  
				T.PERD, SUBSTR(ACCT,1,2), ACCT, RTRIM(CUSKEY1), CUSKEY2, CUSKEY4, CUSVEND  
			) X  
			LEFT OUTER JOIN LGDAT.POMVAR ON  
				X.COMP = LBCOM# AND  
				X.VCHR = LBVCH#  
			LEFT OUTER JOIN LGDAT.VEND ON  
				BTVEND = CUSVEND  
		GROUP BY  
			PERD, COMP, ACCT, VCHR, INV#, CUSVEND||' - '||RTRIM(BTNAME), AMT  
	) PMT  
	LEFT OUTER JOIN LGDAT.POMVAR V ON  
		PMT.COMP = V.LBCOM# AND  
		PMT.VCHR = V.LBVCH#  
	LEFT OUTER JOIN LGDAT.MAST ON  
		AZCOMP||DIGITS(AZGL#1)||DIGITS(AZGL#2) = ACCT  
	LEFT OUTER JOIN LGDAT.FGRP ON  
		BQ1GRP = AZGROP  
	LEFT OUTER JOIN RLARP.FFMGRP ON  
		PART = LBPT#  
	LEFT OUTER JOIN LGDAT.VCHR ON  
		IDCOM# = PMT.COMP AND  
		IDVCH# = PMT.VCHR AND  
		IDINV# = PMT.INV#   
		RCDFMT VW_FFVPPVD ; 

LABEL ON TABLE RLARP.VW_FFVPPVD 
IS 'AP - Vouchered PPV Details' ; 

LABEL ON COLUMN RLARP.VW_FFVPPVD 
( LBPO# IS 'Purchase            Order               Number' , 
	LBPOI# IS 'P/O                 Item #' , 
	LBRKEY IS 'Record              Key' , 
	LBPT# IS 'Part                Number' , 
	LBBQTY IS 'Quantity            Received            (Base Units)' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFVPPVD 
( LBPO# TEXT IS 'Purchase Order Number' , 
	LBPOI# TEXT IS 'P/O Item #' , 
	LBRKEY TEXT IS 'Record Key' , 
	LBPT# TEXT IS 'Part Number' , 
	LBBQTY TEXT IS 'Quantity Received (Base Units)' ) ; 
  

  
CREATE VIEW RLARP.VW_FFWFACM ( 
	MODULE , 
	BATCH , 
	PERD , 
	TDATE , 
	PDATE , 
	ACCT , 
	AMT , 
	KBPRJ# , 
	USRN , 
	REV , 
	CUSMOD , 
	CUSKEY1 , 
	CUSKEY1D , 
	CUSKEY2 , 
	CUSKEY2D , 
	D07RKEY , 
	CUSKEY3D , 
	CUSKEY4 , 
	CUSKEY4D , 
	CUSVEND , 
	CUSCUST , 
	RECID ) 
	AS 
	SELECT  
			'APMA' MODULE,  
			BATCH,  
			PERD,  
			TDATE,  
			PDATE,  
			KRCOM#||DIGITS(D07GLAC) ACCT,  
			D07AMT*CASE SUBSTR(CUSMOD,1,3) WHEN 'REV' THEN -1 ELSE 1 END AMT,  
			KBPRJ#,  
			USRN,  
			REV,  
			CUSMOD,  
			DIGITS(KRPO#)||DIGITS(KRPOI#)||' - '||RTRIM(KRDESC) CUSKEY1,  
            'PO-ITEM-DESCR' CUSKEY1D,  
			KRPT# CUSKEY2,  
			'PART' CUSKEY2D,  
			D07RKEY,  
			'MASTER RECEIPT KEY' CUSKEY3D,  
			KRQREC CUSKEY4,  
			'QTY' CUSKEY4D,  
			KRVEN# CUSVEND,  
			'' CUSCUST,  
			DIGITS(D07TXN) RECID  
		FROM  
			(  
			SELECT DISTINCT  
				MODULE, BATCH, PERD, TDATE, PDATE, SUBSTR(ACCT,1,2) COMP, USRN, REV, CUSMOD, PRIORP RPERD  
			FROM  
				QGPL.FFSBGLWF  
				LEFT OUTER JOIN RLARP.VW_PRFSPR PP ON  
					PP.COMP = SUBSTR(ACCT,1,2) AND  
					PP.CURRP = PERD  
				  --Changed this to pull in the view PRFSPR to grab the prior period without having to rebuild the function FSPR_OFFSET which doesn't work with 13 periods 
			WHERE  
				MODULE = 'APAC'  
			) X  
			INNER JOIN QGPL.FFPORCAG G ON  
				G.D07FSPR = CASE SUBSTR(CUSMOD,1,1) WHEN 'A' THEN '20'||X.PERD ELSE '20'||X.RPERD END  
			INNER JOIN QGPL.FFPORCAP C ON  
				KRRKEY = D07RKEY AND  
				FISC = SUBSTR(D07FSPR,3,4) AND  
				KRCOM# = X.COMP  
			INNER JOIN LGDAT.POI ON  
				KBPO# = KRPO# AND  
				KBITM# = KRPOI#   
	RCDFMT VW_FFWFACM ; 
  
LABEL ON TABLE RLARP.VW_FFWFACM 
	IS 'Acct - Modified accrual, swap out with APAC' ; 
  
LABEL ON COLUMN RLARP.VW_FFWFACM 
( KBPRJ# IS 'Project             Number' , 
	D07RKEY IS 'Master              Receipt Key' ) ; 
  
LABEL ON COLUMN RLARP.VW_FFWFACM 
( KBPRJ# TEXT IS 'Project Number' , 
	D07RKEY TEXT IS 'Master Receipt Key' ) ; 

  
CREATE VIEW RLARP.VW_INVD1 ( 
	FSPR , 
	CAPR , 
	FSYR , 
	QRTR , 
	INV_COMP , 
	INV_PLNT , 
	INV_CURR , 
	COMP_CURR , 
	BILL_REMIT_TO FOR COLUMN BILL_00001 , 
	BILL_CUST_CLASS FOR COLUMN BILL_00002 , 
	BILL_CUST , 
	BILL_PROV , 
	BILL_CTRY , 
	SHIP_REMIT_TO FOR COLUMN SHIP_00001 , 
	SHIP_CUST_CLASS FOR COLUMN SHIP_00002 , 
	SHIP_CUST , 
	SHIP_PROV , 
	SHIP_CTRY , 
	INVOICE# , 
	CUSPO , 
	GLDC , 
	GLEC , 
	REAS , 
	PROMOTION , 
	INV_TYPE , 
	TRADE_NAME , 
	"PART" , 
	MOLD , 
	MAJG , 
	MING , 
	MAJS , 
	MINS , 
	CMSGL , 
	FGRP , 
	QTY_SHIP , 
	COST , 
	INVOICE , 
	COST_USD , 
	INVOICE_USD FOR COLUMN INVOI00001 , 
	TERMS ) 
	AS 
	SELECT  
		DIGITS(DHARYR)||DIGITS(DHARPR) FSPR,  
		CAPR,  
		FSYR,  
		QRTR,  
		DHCOMP INV_COMP,  
		DHPLNT INV_PLNT,  
		DHCURR INV_CURR,  
		CURR COMP_CURR,  
		BC.BVCOMP BILL_REMIT_TO,  
		BC.BVCLAS BILL_CUST_CLASS,  
		BC.BVCUST||' - '||RTRIM(BC.BVNAME) BILL_CUST,  
		BC.BVPRCD BILL_PROV,  
		BC.BVCTRY BILL_CTRY,  
		SC.BVCOMP SHIP_REMIT_TO,  
		SC.BVCLAS SHIP_CUST_CLASS,  
		SC.BVCUST||' - '||RTRIM(SC.BVNAME) SHIP_CUST,  
		SC.BVPRCD SHIP_PROV,  
		SC.BVCTRY SHIP_CTRY,  
		DHINV# INVOICE,  
		DHCPO CUSPO,  
		DIGLCD||' - '||RTRIM(G.A30) GLCODE,  
		GLEC,  
		DIREAS||' - '||RTRIM(R.A30) REAS,  
		RTRIM(DCPROM) PROMOTION,  
		DHINCR INV_TYPE,  
		SUBSTR(CUSTPART,1,1) TRADE_NAME,  
		DIPART PART,  
		SUBSTR(DIPART,1,8) MOLD,  
		MAJG,  
		MING,  
		MAJS,  
		MINS,  
		DIGITS(ZWSAL#) CMSGL,  
		AZGROP||' - '||RTRIM(BQ1TITL) FGRP,  
		SUM(DIQTSH*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END) QTY_SHIP,  
		ROUND(SUM(DICTEX*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END),2) COST,  
		ROUND(SUM(DIEXT*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END),2) INVOICE,  
		ROUND(SUM(DICTEX*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END*CX.RATE),2) COST_USD,  
		ROUND(SUM(DIEXT*CASE DHINCR WHEN 'C' THEN -1 ELSE 1 END*IX.RATE),2) INVOICE_USD ,  
		T.DESCR  
	FROM  
		LGDAT.OIH  
		INNER JOIN LGDAT.OID ON  
			DIINV# = DHINV#  
		LEFT OUTER JOIN LGDAT.OCRH ON  
			DCORD# = DHORD#  
		LEFT OUTER JOIN LGDAT.CODE G ON  
			G.A2 = 'EE' AND  
			LTRIM(RTRIM(G.A9)) = DIGLCD  
		LEFT OUTER JOIN LGDAT.CODE R ON  
			R.A2 = 'RS' AND  
			LTRIM(RTRIM(R.A9)) = DIREAS  
		LEFT OUTER JOIN LGDAT.CUST BC ON  
			BC.BVCUST = DHBCS#  
		LEFT OUTER JOIN LGDAT.CUST SC ON  
			SC.BVCUST = DHSCS#  
		LEFT OUTER JOIN RLARP.VW_FFITEMM ON  
			ITEM = DIPART  
		LEFT OUTER JOIN LGDAT.PLNT ON  
			YAPLNT = DHPLNT  
		LEFT OUTER JOIN LGDAT.GLIE ON  
			Y1PLNT = DHPLNT AND  
			Y1GLEC = GLEC  
		LEFT OUTER JOIN LGDAT.ARMASC ON  
			ZWCOMP = BC.BVCOMP AND  
			ZWKEY1 = BC.BVARCD AND  
			ZWKEY2 = DIGLCD  
		LEFT OUTER JOIN RLARP.FFCRET IX ON  
			IX.PERD = DIGITS(DHARYR)||DIGITS(DHARPR) AND  
			IX.FCUR = DHCURR AND  
			IX.TCUR = 'US' AND  
			IX.RTYP = 'ME'  
		LEFT OUTER JOIN RLARP.VW_FFCOPR ON  
			COMP = DHCOMP  
		LEFT OUTER JOIN RLARP.FFCRET CX ON  
			CX.PERD = DIGITS(DHARYR)||DIGITS(DHARPR) AND  
			CX.FCUR = CURR AND  
			CX.TCUR = 'US' AND  
			CX.RTYP = 'ME'  
		LEFT OUTER JOIN LGDAT.MAST ON  
			AZCOMP||DIGITS(AZGL#1)||DIGITS(AZGL#2) = DIGITS(ZWSAL#) 	  
		LEFT OUTER JOIN LGDAT.FGRP ON  
			BQ1GRP = AZGROP  
		LEFT OUTER JOIN RLARP.FFPERD ON  
			FSPR = DIGITS(DHARYR)||DIGITS(DHARPR)  
		LEFT OUTER JOIN RLARP.VW_FFTMCD T ON  
			TERM = DHTRCD  
	GROUP BY  
		DIGITS(DHARYR)||DIGITS(DHARPR), 	  
		CAPR,  
		FSYR,  
		QRTR,  
		DHCOMP ,  
		DHPLNT ,  
		DHCURR ,  
		CURR,  
		BC.BVCOMP ,  
		BC.BVCLAS ,  
		BC.BVCUST||' - '||RTRIM(BC.BVNAME) ,  
		BC.BVPRCD , 	 	 	 		
		BC.BVCTRY , 	 	 	 		
		SC.BVCOMP , 	 	 	 		
		SC.BVCLAS , 	 	 	 		
		SC.BVCUST||' - '||RTRIM(SC.BVNAME) , 	 	 	 	
		SC.BVPRCD , 	 	 	 		
		SC.BVCTRY ,  
		DHINV#,  
		DHCPO, 	 	 	 		
		DIGLCD||' - '||RTRIM(G.A30) , 	 	 	 	
		GLEC, 	 	 	 		
		DIREAS||' - '||RTRIM(R.A30) , 	 	 	 	
		RTRIM(DCPROM) , 	 	 	 	
		DHINCR, 	 	 	 		
		SUBSTR(CUSTPART,1,1) , 	 	 	 	
		DIPART,  
		SUBSTR(DIPART,1,8),  
		MAJG, 	 	 	 	 				
		MING, 	 	 	 		
		MAJS, 	 	 	 		
		MINS, 	 	 	 		
		DIGITS(ZWSAL#) , 	 	 	 		
		AZGROP||' - '||RTRIM(BQ1TITL) , 	 			
		T.DESCR   
RCDFMT VW_INVD1   ; 

LABEL ON TABLE RLARP.VW_INVD1 
IS 'Sales - Invoice Detail 1' ; 

LABEL ON COLUMN RLARP.VW_INVD1 
( INV_COMP IS 'Company             Number' , 
	INV_PLNT IS 'Plant               Code' , 
	INV_CURR IS 'Currency            Code' , 
	BILL_REMIT_TO IS 'Company             Number' , 
	BILL_CUST_CLASS IS 'Customer            Class' , 
	BILL_PROV IS 'Province            Code' , 
	BILL_CTRY IS 'Country' , 
	SHIP_REMIT_TO IS 'Company             Number' , 
	SHIP_CUST_CLASS IS 'Customer            Class' , 
	SHIP_PROV IS 'Province            Code' , 
	SHIP_CTRY IS 'Country' , 
	INVOICE# IS 'Invoice             Number' , 
	CUSPO IS 'Customer            P/O Number' , 
	INV_TYPE IS 'Invoice             Credit' , 
	"PART" IS 'Part                Number' , 
	TERMS IS 'Terms               Code' ) ; 
  
LABEL ON COLUMN RLARP.VW_INVD1 
( INV_COMP TEXT IS 'Company Number' , 
	INV_PLNT TEXT IS 'Plant Code' , 
	INV_CURR TEXT IS 'Currency Code' , 
	BILL_REMIT_TO TEXT IS 'Company Number' , 
	BILL_CUST_CLASS TEXT IS 'Customer Class' , 
	BILL_PROV TEXT IS 'Province Code' , 
	BILL_CTRY TEXT IS 'Country' , 
	SHIP_REMIT_TO TEXT IS 'Company Number' , 
	SHIP_CUST_CLASS TEXT IS 'Customer Class' , 
	SHIP_PROV TEXT IS 'Province Code' , 
	SHIP_CTRY TEXT IS 'Country' , 
	INVOICE# TEXT IS 'Invoice Number' , 
	CUSPO TEXT IS 'Customer P/O Number' , 
	INV_TYPE TEXT IS 'Invoice Credit' , 
	"PART" TEXT IS 'Part Number' , 
	TERMS TEXT IS 'Terms Code' ) ; 
  
  
CREATE VIEW RLARP.VW_PRFSPR ( 
	COMP , 
	CURRP , 
	PRIORP ) 
	AS 
	SELECT 
		B.COMP, B.FSPR CURRP, O.FSPR PRIORP 
	FROM 
		RLARP.VW_FFGLPD B 
		LEFT OUTER JOIN RLARP.VW_FFGLPD O ON 
			DAYS(O.EDAT) = DAYS(B.SDAT) -1 AND 
			O.COMP = B.COMP   
	RCDFMT VW_PRFSPR  ; 
  
LABEL ON TABLE RLARP.VW_PRFSPR 
	IS 'Acct - Prior Periods by Company' ; 
  
LABEL ON COLUMN RLARP.VW_PRFSPR 
( COMP IS 'Company' ) ; 
  
LABEL ON COLUMN RLARP.VW_PRFSPR 
( COMP TEXT IS 'Company' ) ; 
   
  
  
CREATE FUNCTION RLARP.FN_NWFUT9 ( 
	FUT9 DECIMAL(15, 5) ) 
	RETURNS CHAR(19)   
	LANGUAGE SQL 
	SPECIFIC RLARP.FN_NWFUT9 
	NOT DETERMINISTIC 
	READS SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = *NONE , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	BEGIN 
	 
	RETURN SUBSTR ( CHAR ( FUT9 ) , 1 , 4 ) || '-' || SUBSTR ( CHAR ( FUT9 ) , 5 , 2 ) || '-' || SUBSTR ( CHAR ( FUT9 ) , 7 , 2 ) || ' ' || SUBSTR ( CHAR ( FUT9 ) , 9 , 1 ) || SUBSTR ( CHAR ( FUT9 ) , 11 , 1 ) || ':' || SUBSTR ( CHAR ( FUT9 ) , 12 , 2 ) || ':' || SUBSTR ( CHAR ( FUT9 ) , 14 , 2 ) ; 
  
	END  ; 
  
  
CREATE FUNCTION RLARP.FSPR_OFFSET ( 
	FSPR VARCHAR(4) , 
	OFFSET INTEGER ) 
	RETURNS VARCHAR(4)   
	LANGUAGE SQL 
	SPECIFIC RLARP.FSPR_OFFSET 
	NOT DETERMINISTIC 
	READS SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = *NONE , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	BEGIN 
	DECLARE BASE INT ; 
	DECLARE RMD INT ; 
	DECLARE RSLT INT ; 
	 
	SET BASE = ( OFFSET / 12 ) * 100 ; 
  
	IF OFFSET <= 0 THEN 
		IF ABS ( MOD ( OFFSET , 12 ) ) >= ( FSPR - ( FSPR / 100 * 100 ) ) THEN 
			SET BASE = BASE - 100 ; 
			SET RMD = 12 - ABS ( MOD ( OFFSET , 12 ) ) ; 
		ELSE 
			SET RMD = - ABS ( MOD ( OFFSET , 12 ) ) ; 
		END IF ; 
	ELSE 
		IF ABS ( MOD ( OFFSET , 12 ) ) + ( FSPR - ( FSPR / 100 * 100 ) ) > 12 THEN 
			SET BASE = BASE + 100 ; 
			SET RMD = ABS ( MOD ( OFFSET , 12 ) ) - 12 ; 
		ELSE 
			SET RMD = ABS ( MOD ( OFFSET , 12 ) ) ; 
		END IF ; 
	END IF ; 
	SET RSLT = BASE + RMD + FSPR ; 
	RETURN RSLT ; 
  
END  ; 
  
  

  
CREATE FUNCTION RLARP.GLKEY1 ( 
	MODULE VARCHAR(4) , 
	CUSMOD VARCHAR(20) , 
	K1 VARCHAR(30) , 
	K2 VARCHAR(30) , 
	K3 VARCHAR(30) , 
	K4 VARCHAR(30) , 
	P VARCHAR(100) ) 
	RETURNS VARCHAR(255)   
	LANGUAGE SQL 
	SPECIFIC RLARP.GLKEY1 
	NOT DETERMINISTIC 
	READS SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = *NONE , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	BEGIN 
  
	DECLARE R VARCHAR ( 255 ) ; 
  
	SET R = 
	CASE MODULE 
		WHEN 'AP' THEN 'VOUCHER - ' || LTRIM ( RTRIM ( K1 ) ) 
		WHEN 'APAC' THEN 'ITEM - ' || LTRIM ( RTRIM ( K1 ) ) 
		WHEN 'APCQ' THEN 'VENDOR - ' || LTRIM ( RTRIM ( P ) ) || ' - ' || LTRIM ( RTRIM ( K4 ) ) 
		WHEN 'APVC' THEN 'CHECK NUMBER - ' || LTRIM ( RTRIM ( K2 ) ) 
		WHEN 'APVN' THEN 'VENDOR - ' || LTRIM ( RTRIM ( P ) ) 
		WHEN 'AR' THEN 'CUSTOMER - ' || LTRIM ( RTRIM ( P ) ) 
		WHEN 'ARIN' THEN 'CUSTOMER - ' || LTRIM ( RTRIM ( P ) ) 
		WHEN 'ARRC' THEN 
			CASE CUSMOD 
				WHEN 'MISC CASH ENTRY' THEN 'DESCR - ' || LTRIM ( RTRIM ( K2 ) ) 
				ELSE 'CUSTOMER - ' || LTRIM ( RTRIM ( P ) ) 
			END 
		WHEN 'AU' THEN LTRIM ( RTRIM ( K1 ) ) || ' - ' || LTRIM ( RTRIM ( K2 ) ) 
		WHEN 'GJJB' THEN 'JE - ' || LTRIM ( RTRIM ( K1 ) ) || ' - ' || LTRIM ( RTRIM ( K2 ) ) 
		WHEN 'IC' THEN LTRIM ( RTRIM ( K1 ) ) 
		WHEN 'ICIN' THEN 'CUSTOMER - ' || LTRIM ( RTRIM ( P ) ) 
		WHEN 'ICIT' THEN 'REASON/DESCR - ' || LTRIM ( RTRIM ( K2 ) ) || ' - ' || LTRIM ( RTRIM ( K3 ) ) 
		WHEN 'ICRL' THEN 'PART - ' || LTRIM ( RTRIM ( K2 ) ) 
		WHEN 'ICRT' THEN 'CUSTOMER - ' || LTRIM ( RTRIM ( P ) ) 
		WHEN 'ICVR' THEN 'PART - ' || LTRIM ( RTRIM ( K2 ) ) 
		WHEN 'OEIN' THEN 'CUSTOMER - ' || LTRIM ( RTRIM ( P ) ) 
		WHEN 'OS' THEN LTRIM ( RTRIM ( K1 ) ) || ' - ' || LTRIM ( RTRIM ( K2 ) ) 
		WHEN 'PD' THEN 'PRODUCTION' 
		WHEN 'PDWO' THEN 'PRODUCTION' 
		WHEN 'RJ' THEN LTRIM ( RTRIM ( K1 ) ) || ' - ' || LTRIM ( RTRIM ( K2 ) ) 
	END ; 
		 
  
	RETURN R ; 
  
END  ; 
  
  
CREATE PROCEDURE RLARP.FF_PSXD_01 ( 
	IN XPART VARCHAR(20) , 
	IN XPLNT CHAR(3) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC RLARP.FF_PSXD_01 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = *NONE , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	BEGIN 
	--PRODUCT STRUCTURE EXPLOSION DETAILS-- 
	--REVISION LEVEL 1 
	---------------------------------------------------------------------------------------------------------------------------------------- 
	--This result set explodes the METHDM bill of materials along the STKA.V6RPLN procurement path and 
	--links in the routings & burden rates to get to a detailed rebuild of the product cost. 
	--The explosion method is a recursive CTE (common table expression) that operates like a self join. 
	--the explosion stops if it encounters a replenishment type 2 or exceeds 10 levels which is interpreted as an infinite loop somewhere 
	--the last select breaks out all possible data points 
	--duty, shipping and warehousing on the ICSTR file and the misc1 & 2 cost categories functions are not known but included here anyways 
	--it is assumed any conversion issues are handled in a single step by the PUNIT file, which doesn't always have a single step conversion 
	---------------------------------------------------------------------------------------------------------------------------------------- 
DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
WITH RECURSIVE PSE 
	( 
		 ------------EXPLOSION TRACKING---------------- 
		LVL , PLINE , CLINE , MAST , PRNT , CHLD , 
		 ------------PROCUREMENT----------------------- 
		STAT , REPL , 
		 ------------ROUTING--------------------------- 
		SEQ , DEP , RESC , OPC , REPP , REFF , XREFF , 
		 ------------BILL OF MATERIALS----------------- 
		RQBY , BACK , SCRP , EFF , QTY , BQTY , RQTY , ERQTY , 
		 ------------UOM CONVERSIONS------------------- 
		UNTI , BUOM , CONV , 
		 ------------SOURCING-------------------------- 
		CPLNT , SPLNT , 
		 ------------CURRENCY-------------------------- 
		CPC , SPC , FXR 
	) AS 
( 
SELECT 
	0 , 
	VARCHAR ( SUBSTR ( DIGITS ( INT ( RANK ( ) OVER ( ORDER BY A . V6PART ASC , A . V6PLNT ASC ) ) ) , 6 , 5 ) , 100 ) || 
	CASE WHEN AOSEQ# < 10 
		THEN SUBSTR ( DIGITS ( - AOSEQ# + 9 ) , 2 , 3 ) 
		ELSE '' 
	END AS PLINE , 
	VARCHAR ( SUBSTR ( DIGITS ( INT ( RANK ( ) OVER ( ORDER BY A . V6PART ASC , A . V6PLNT ASC ) ) ) , 6 , 5 ) , 100 ) || SUBSTR ( DIGITS ( - AOSEQ# + 10 ) , 2 , 3 ) AS CLINE , 
	A . V6PART , 
	A . V6PART , 
	A . V6PART , 
	A . V6STAT , 
	A . V6RPLN , 
	AOSEQ# , 
	AODEPT , 
	COALESCE ( APVEND , AORESC ) , 
	COALESCE ( APODES , AOOPNM ) , 
	AOREPP , 
	ROUND ( FLOAT ( 1 / IFNULL ( AOEFC1 , 1 ) ) , 8 ) , 
	ROUND ( FLOAT ( 1 / IFNULL ( AOEFC1 , 1 ) ) , 8 ) , 
	'R' , 
	' ' , 
	1 , 
	1 , 
	1 , 
	1 , 
	1 , 
	1 , 
	A . V6UNTI , 
	A . V6UNTI , 
	FLOAT ( 1 ) , 
	A . V6PLNT , 
	CASE A . V6RPLN WHEN '3' THEN A . V6TPLN ELSE A . V6PLNT END , 
	SUBSTR ( CC . A215 , 152 , 2 ) , 
	SUBSTR ( SC . A215 , 152 , 2 ) , 
	B86SRTE 
FROM 
	LGDAT . STKA A 
	LEFT OUTER JOIN LGDAT . METHDR ON 
		AOPART = A . V6PART AND 
		AOPLNT = CASE A . V6TPLN WHEN '' THEN A . V6PLNT ELSE A . V6TPLN END AND 
		A . V6RPLN = 1 
	LEFT OUTER JOIN LGDAT . METHDO ON 
		APPART = A . V6PART AND 
		APPLNT = CASE A . V6TPLN WHEN '' THEN A . V6PLNT ELSE A . V6TPLN END 
	LEFT OUTER JOIN LGDAT . PLNT CP ON 
		CP . YAPLNT = A . V6PLNT 
	LEFT OUTER JOIN LGDAT . PLNT SP ON 
		SP . YAPLNT = CASE A . V6RPLN WHEN '3' THEN A . V6TPLN ELSE A . V6PLNT END 
	LEFT OUTER JOIN LGDAT . CODE CC ON 
		LTRIM ( RTRIM ( CC . A9 ) ) = CP . YACOMP AND 
		CC . A2 = 'AA' 
	LEFT OUTER JOIN LGDAT . CODE SC ON 
		LTRIM ( RTRIM ( SC . A9 ) ) = SP . YACOMP AND 
		SC . A2 = 'AA' 
	LEFT OUTER JOIN LGDAT . CRET ON 
		B86COMN = SP . YACOMP AND 
		B86CURC = SUBSTR ( CC . A215 , 152 , 2 ) AND 
		B86RTTY = 'S' 
	 
WHERE 
	A . V6PART = XPART AND 
	A . V6PLNT = XPLNT 
  
UNION ALL 
  
SELECT 
	PSE . LVL + 1 , 
	CASE WHEN AOSEQ# < 10 
		THEN PSE . CLINE || '-' || REPEAT ( '0' , 3 - LENGTH ( VARCHAR ( M . AQLIN# ) ) ) || VARCHAR ( M . AQLIN# ) || SUBSTR ( DIGITS ( COALESCE ( - AOSEQ# + 9 , AQSEQ# ) ) , 2 , 3 ) 
		ELSE VARCHAR ( PSE . CLINE , 100 ) 
	END , 
	PSE . CLINE || '-' || REPEAT ( '0' , 3 - LENGTH ( VARCHAR ( M . AQLIN# ) ) ) || VARCHAR ( M . AQLIN# ) || SUBSTR ( DIGITS ( COALESCE ( - AOSEQ# + 10 , AQSEQ# ) ) , 2 , 3 ) , 
	PSE . MAST , 
	PSE . CHLD , 
	M . AQMTLP , 
	A . V6STAT , 
	A . V6RPLN , 
	COALESCE ( AOSEQ# , AQSEQ# ) , 
	AODEPT , 
	COALESCE ( APVEND , AORESC ) , 
	COALESCE ( APODES , AOOPNM ) , 
	AOREPP , 
	ROUND ( FLOAT ( 1 / IFNULL ( AOEFC1 , 1 ) ) , 8 ) , 
	ROUND ( FLOAT ( 1 / IFNULL ( AOEFC1 , 1 ) ) , 8 ) * PSE . XREFF , 
	M . AQRQBY , 
	M . AQBACK , 
	FLOAT ( 1 - M . AQSCRP / 100 ) , 
	1 , 
	M . AQQPPC , 
	M . AQQTYM , 
	FLOAT ( M . AQQPPC / M . AQQTYM ) / FLOAT ( 1 - M . AQSCRP / 100 ) * CASE M . AQRQBY WHEN 'B' THEN - 1 ELSE 1 END , 
	FLOAT ( M . AQQPPC / M . AQQTYM ) * FLOAT ( PSE . ERQTY ) / FLOAT ( 1 - M . AQSCRP / 100 ) * CASE M . AQRQBY WHEN 'B' THEN - 1 ELSE 1 END , 
	A . V6UNTI , 
	M . AQUNIT , 
	FLOAT ( COALESCE ( U . MULT_BY , 1 ) ) * FLOAT ( COALESCE ( U2 . MULT_BY , 1 ) ) * PSE . CONV , 
	M . AQPLNT , 
	CASE A . V6RPLN WHEN '3' THEN A . V6TPLN ELSE M . AQPLNT END , 
	SUBSTR ( CC . A215 , 152 , 2 ) , 
	SUBSTR ( SC . A215 , 152 , 2 ) , 
	B86SRTE * PSE . FXR 
FROM 
	PSE PSE 
	INNER JOIN LGDAT . METHDM M ON 
		M . AQPART = PSE . CHLD AND 
		M . AQPLNT = PSE . SPLNT AND 
		M . AQSEQ# = IFNULL ( PSE . SEQ , M . AQSEQ# ) 
	LEFT OUTER JOIN LGDAT . STKA A ON 
		A . V6PART = M . AQMTLP AND 
		A . V6PLNT = M . AQPLNT 
	LEFT OUTER JOIN LGDAT . STKA A2 ON 
		A2 . V6PART = M . AQMTLP AND 
		A2 . V6PLNT = A . V6TPLN 
	LEFT OUTER JOIN LGDAT . METHDR ON 
		AOPART = M . AQMTLP AND 
		AOPLNT = CASE A . V6TPLN WHEN '' THEN A . V6PLNT ELSE A . V6TPLN END AND 
		A . V6RPLN = '1' 
	LEFT OUTER JOIN LGDAT . METHDO ON 
		APPART = M . AQMTLP AND 
		APPLNT = CASE A . V6TPLN WHEN '' THEN A . V6PLNT ELSE A . V6TPLN END 
	LEFT OUTER JOIN 
	( 
	SELECT 
		IHUNT1 AS UNT1 , IHUNT2 AS UNT2 , IHCNV2 / IHCNV1 AS MULT_BY 
	FROM 
		LGDAT . PUNIT 
	WHERE 
		IHPART = '&&GLOBAL' 
  
	UNION ALL 
  
	SELECT 
		IHUNT2 AS UNT1 , IHUNT1 AS UNT2 , IHCNV1 / IHCNV2 AS MULT_BY 
	FROM 
		LGDAT . PUNIT 
	WHERE 
		IHPART = '&&GLOBAL' 
	) U ON 
		U . UNT1 = M . AQUNIT AND 
		U . UNT2 = A . V6UNTI 
	LEFT OUTER JOIN 
	( 
	SELECT 
		IHUNT1 AS UNT1 , IHUNT2 AS UNT2 , IHCNV2 / IHCNV1 AS MULT_BY 
	FROM 
		LGDAT . PUNIT 
	WHERE 
		IHPART = '&&GLOBAL' 
  
	UNION ALL 
  
	SELECT 
		IHUNT2 AS UNT1 , IHUNT1 AS UNT2 , IHCNV1 / IHCNV2 AS MULT_BY 
	FROM 
		LGDAT . PUNIT 
	WHERE 
		IHPART = '&&GLOBAL' 
	) U2 ON 
		LTRIM ( RTRIM ( U2 . UNT1 ) ) = A . V6UNTI AND 
		LTRIM ( RTRIM ( U2 . UNT2 ) ) = A2 . V6UNTI 
	LEFT OUTER JOIN LGDAT . PLNT CP ON 
		CP . YAPLNT = M . AQPLNT 
	LEFT OUTER JOIN LGDAT . PLNT SP ON 
		SP . YAPLNT = CASE A . V6RPLN WHEN '3' THEN A . V6TPLN ELSE M . AQPLNT END 
	LEFT OUTER JOIN LGDAT . CODE CC ON 
		LTRIM ( RTRIM ( CC . A9 ) ) = CP . YACOMP AND 
		CC . A2 = 'AA' 
	LEFT OUTER JOIN LGDAT . CODE SC ON 
		LTRIM ( RTRIM ( SC . A9 ) ) = SP . YACOMP AND 
		SC . A2 = 'AA' 
	LEFT OUTER JOIN LGDAT . CRET ON 
		B86COMN = SP . YACOMP AND 
		B86CURC = SUBSTR ( CC . A215 , 152 , 2 ) AND 
		B86RTTY = 'S'		 
WHERE 
	LVL <= 10 
	AND PSE . REPL <> '2' 
	 
  
) 
SELECT 
	REPEAT ( '.  ' , LVL ) || LVL AS TLVL , 
	REPEAT ( '.  ' , LVL ) || CHLD , 
	REPEAT ( '.  ' , LVL ) || COALESCE ( AWDES1 , AVDES1 ) , 
	PLINE , CLINE , 
	CPLNT , 
	STAT , REPL , SPLNT , SEQ , DEP , RESC , OPC , AOREPP , 
	REFF , XREFF , 
	RQBY , BACK , 
	 --IFNULL(MM.AVMAJG,MP.AWMAJG) MAJG, 
	 --IFNULL(MM.AVMING,MP.AWMING)||' - '||RTRIM(MMGP.BRDES) MING, 
	 --IFNULL(MM.AVGLCD,MP.AWGLDC) GLCD, 
	 --IFNULL(MM.AVGLED,MP.AWGLED) GLED, 
	SCRP , 
	 --QTY, BQTY, 
	RQTY , ERQTY , UNTI , BUOM , CONV , 
	CPC , SPC , 
	 --FXR, 
	 --COALESCE(IP.CHCURR, IR.Y0FUT1) AS CURR, 
	CHAR ( COALESCE ( IP . CHSDAT , IR . Y0SDAT , IM . CGSDAT ) ) DT , 
	IP . CHSUC BASE , 
	IP . CHSFC FRT , 
	IP . CHSDC DUTY , 
	IP . CHS1C MISC1 , 
	IP . CHS2C MISC2 , 
	COALESCE ( IP . CHSCC , IR . Y0SOC ) AS CURR , 
	IR . Y0SSHC "S&H" , 
	APFCSO "FRT-TO" , 
	APFCSI "FRT-FROM" , 
	APUNCS SUBC , 
	AORUNS RUNTIME , 
	AO#MEN / AO#MCH RUNCREW , 
	AOSETP SETTIME , 
	AOSCRW SETCREW , 
	CASE ABLABR WHEN 0 THEN AASTDR ELSE ABLABR END LABRATE , 
	CASE ABBRDR WHEN 0 THEN AABRDR ELSE ABBRDR END FIXRATE , 
	CASE ABVBRD WHEN 0 THEN AAVBRD ELSE ABVBRD END VARRATE , 
	CASE ABLABR WHEN 0 THEN AASTDR ELSE ABLABR END / AORUNS * AO#MEN / AO#MCH LABRUN , 
	CASE ABBRDR WHEN 0 THEN AABRDR ELSE ABBRDR END / AORUNS FIXRUN , 
	CASE ABVBRD WHEN 0 THEN AAVBRD ELSE ABVBRD END / AORUNS VARRUN , 
	CASE ABLABR WHEN 0 THEN AASTDR ELSE ABLABR END * AOSETP * AOSCRW / V6OPTR LABSET , 
	CASE ABBRDR WHEN 0 THEN AABRDR ELSE ABBRDR END * AOSETP / V6OPTR FIXSET , 
	CASE ABVBRD WHEN 0 THEN AAVBRD ELSE ABVBRD END * AOSETP / V6OPTR VARSET , 
	 ----------EXTENDED VALUES---------- 
	IP . CHSUC * ERQTY BASEX , 
	IP . CHSFC * ERQTY FRTX , 
	COALESCE ( IP . CHSCC , IR . Y0SOC ) * ERQTY AS CURRX , 
	( IP . CHSDC + IP . CHS1C + IP . CHS2C + IR . Y0SSHC + APFCSO + APFCSI ) * ERQTY OTHMX , 
	APUNCS * ERQTY SUBCX , 
	CASE ABLABR WHEN 0 THEN AASTDR ELSE ABLABR END / AORUNS * AO#MEN / AO#MCH * ERQTY LABRX , 
	CASE ABBRDR WHEN 0 THEN AABRDR ELSE ABBRDR END / AORUNS * ERQTY FIXRX , 
	CASE ABVBRD WHEN 0 THEN AAVBRD ELSE ABVBRD END / AORUNS * ERQTY VARRX , 
	CASE ABLABR WHEN 0 THEN AASTDR ELSE ABLABR END * AOSETP * AOSCRW / V6OPTR * ERQTY LABSX , 
	CASE ABBRDR WHEN 0 THEN AABRDR ELSE ABBRDR END * AOSETP / V6OPTR * ERQTY FIXSX , 
	CASE ABVBRD WHEN 0 THEN AAVBRD ELSE ABVBRD END * AOSETP / V6OPTR * ERQTY VARSX , 
	 --------SCRAP---------- 
	IP . CHSUC * ERQTY * ( 1 / XREFF - 1 ) BASEXS , 
	IP . CHSFC * ERQTY * ( 1 / XREFF - 1 ) FRTXS , 
	COALESCE ( IP . CHSCC , IR . Y0SOC ) * ERQTY * ( 1 / XREFF - 1 ) AS CURRXS , 
	( IP . CHSDC + IP . CHS1C + IP . CHS2C + IR . Y0SSHC + APFCSO + APFCSI ) * ERQTY * ( 1 / XREFF - 1 ) OTHMXS , 
	APUNCS * ERQTY * ( 1 / XREFF - 1 ) SUBCXS , 
	CASE ABLABR WHEN 0 THEN AASTDR ELSE ABLABR END / AORUNS * AO#MEN / AO#MCH * ERQTY * ( 1 / XREFF - 1 ) LABRXS , 
	CASE ABBRDR WHEN 0 THEN AABRDR ELSE ABBRDR END / AORUNS * ERQTY * ( 1 / XREFF - 1 ) FIXRXS , 
	CASE ABVBRD WHEN 0 THEN AAVBRD ELSE ABVBRD END / AORUNS * ERQTY * ( 1 / XREFF - 1 ) VARRXS , 
	CASE ABLABR WHEN 0 THEN AASTDR ELSE ABLABR END * AOSETP * AOSCRW / V6OPTR * ERQTY * ( 1 / XREFF - 1 ) LABSXS , 
	CASE ABBRDR WHEN 0 THEN AABRDR ELSE ABBRDR END * AOSETP / V6OPTR * ERQTY * ( 1 / XREFF - 1 ) FIXSXS , 
	CASE ABVBRD WHEN 0 THEN AAVBRD ELSE ABVBRD END * AOSETP / V6OPTR * ERQTY * ( 1 / XREFF - 1 ) VARSXS 
FROM 
	PSE PSE 
	LEFT OUTER JOIN LGDAT . ICSTM IM ON 
		IM . CGPART = PSE . CHLD AND 
		IM . CGPLNT = PSE . SPLNT 
	LEFT OUTER JOIN LGDAT . ICSTP IP ON 
		IP . CHPART = PSE . CHLD AND 
		IP . CHPLNT = PSE . SPLNT 
	LEFT OUTER JOIN LGDAT . ICSTR IR ON 
		IR . Y0PART = PSE . CHLD AND 
		IR . Y0PLNT = PSE . CPLNT 
	LEFT OUTER JOIN LGDAT . METHDO ON 
		APPART = CHLD AND 
		APPLNT = SPLNT AND 
		APSEQ# = SEQ AND 
		APVEND = RESC 
	LEFT OUTER JOIN LGDAT . METHDR ON 
		AOPART = CHLD AND 
		AOPLNT = SPLNT AND 
		AOSEQ# = SEQ AND 
		REPL = '1' 
	LEFT OUTER JOIN LGDAT . STKA ON 
		V6PART = CHLD AND 
		V6PLNT = SPLNT 
	LEFT OUTER JOIN LGDAT . RESRE ON 
		ABPLNT = SPLNT AND 
		ABRESC = RESC 
	LEFT OUTER JOIN LGDAT . DEPTS ON 
		ABDEPT = AADEPT 
	LEFT OUTER JOIN LGDAT . STKMM MM ON 
		MM . AVPART = PSE . CHLD 
	LEFT OUTER JOIN LGDAT . STKMP MP ON 
		MP . AWPART = PSE . CHLD 
	LEFT OUTER JOIN LGDAT . MMGP MMGP ON 
		MMGP . BRMGRP = COALESCE ( AWMING , AVMING ) AND 
		MMGP . BRGRP = COALESCE ( AWMAJG , AVMAJG ) 
ORDER BY CLINE ASC ; 
OPEN C1 ; 
END  ; 
  


  
CREATE PROCEDURE RLARP.FF_PSXD_02 ( 
	IN XPART VARCHAR(20) , 
	IN XPLNT CHAR(3) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC RLARP.FF_PSXD_02 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = *NONE , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	BEGIN 
--PRODUCT STRUCTURE EXPLOSION DETAILS-- 
--REVISION LEVEL 1 
---------------------------------------------------------------------------------------------------------------------------------------- 
--This result set explodes the METHDM bill of materials along the STKA.V6RPLN procurement path and 
--links in the routings & burden rates to get to a detailed rebuild of the product cost. 
--The explosion method is a recursive CTE (common table expression) that operates like a self join. 
--the explosion stops if it encounters a replenishment type 2 or exceeds 10 levels which is interpreted as an infinite loop somewhere 
--the last select breaks out all possible data points 
--duty, shipping and warehousing on the ICSTR file and the misc1 & 2 cost categories functions are not known but included here anyways 
--it is assumed any conversion issues are handled in a single step by the PUNIT file, which doesn't always have a single step conversion 
---------------------------------------------------------------------------------------------------------------------------------------- 
DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
  
WITH RECURSIVE PSE 
	( 
		 ------------EXPLOSION TRACKING---------------- 
		LVL , PLINE , CLINE , MAST , MPLT , PRNT , CHLD , 
		 ------------PROCUREMENT----------------------- 
		STAT , REPL , 
		 ------------ROUTING--------------------------- 
		SEQ , DEP , RESC , OPC , REPP , REFF , XREFF , 
		 ------------BILL OF MATERIALS----------------- 
		RQBY , BACK , SCRP , EFF , QTY , BQTY , RQTY , ERQTY , 
		 ------------UOM CONVERSIONS------------------- 
		UNTI , BUOM , CONV , 
		 ------------SOURCING-------------------------- 
		CPLNT , SPLNT , 
		 ------------CURRENCY-------------------------- 
		CPC , SPC , FXR 
	) AS 
( 
SELECT 
	0 , 
	VARCHAR ( SUBSTR ( DIGITS ( INT ( RANK ( ) OVER ( ORDER BY A . V6PART ASC , A . V6PLNT ASC ) ) ) , 6 , 5 ) , 100 ) || 
	CASE WHEN AOSEQ# < 10 
		THEN SUBSTR ( DIGITS ( - AOSEQ# + 9 ) , 2 , 3 ) 
		ELSE '' 
	END AS PLINE , 
	VARCHAR ( SUBSTR ( DIGITS ( INT ( RANK ( ) OVER ( ORDER BY A . V6PART ASC , A . V6PLNT ASC ) ) ) , 6 , 5 ) , 100 ) || SUBSTR ( DIGITS ( - AOSEQ# + 10 ) , 2 , 3 ) AS CLINE , 
	A . V6PART , 
	A . V6PLNT , 
	A . V6PART , 
	A . V6PART , 
	A . V6STAT , 
	A . V6RPLN , 
	AOSEQ# , 
	AODEPT , 
	COALESCE ( APVEND , AORESC ) , 
	COALESCE ( APODES , AOOPNM ) , 
	AOREPP , 
	ROUND ( FLOAT ( 1 / IFNULL ( AOEFC1 , 1 ) ) , 8 ) , 
	ROUND ( FLOAT ( 1 / IFNULL ( AOEFC1 , 1 ) ) , 8 ) , 
	'R' , 
	' ' , 
	1 , 
	1 , 
	1 , 
	1 , 
	1 , 
	1 , 
	A . V6UNTI , 
	A . V6UNTI , 
	FLOAT ( 1 ) , 
	A . V6PLNT , 
	CASE A . V6RPLN WHEN '3' THEN A . V6TPLN ELSE A . V6PLNT END , 
	SUBSTR ( CC . A215 , 152 , 2 ) , 
	SUBSTR ( SC . A215 , 152 , 2 ) , 
	B86SRTE 
FROM 
	LGDAT . STKA A 
	LEFT OUTER JOIN LGDAT . METHDR ON 
		AOPART = A . V6PART AND 
		AOPLNT = CASE A . V6RPLN WHEN '3' THEN A . V6TPLN ELSE A . V6PLNT END 
	LEFT OUTER JOIN LGDAT . METHDO ON 
		APPART = A . V6PART AND 
		APPLNT = CASE A . V6TPLN WHEN '' THEN A . V6PLNT ELSE A . V6TPLN END AND 
		A . V6RPLN = 1 
	LEFT OUTER JOIN LGDAT . PLNT CP ON 
		CP . YAPLNT = A . V6PLNT 
	LEFT OUTER JOIN LGDAT . PLNT SP ON 
		SP . YAPLNT = CASE A . V6RPLN WHEN '3' THEN A . V6TPLN ELSE A . V6PLNT END 
	LEFT OUTER JOIN LGDAT . CODE CC ON 
		LTRIM ( RTRIM ( CC . A9 ) ) = CP . YACOMP AND 
		CC . A2 = 'AA' 
	LEFT OUTER JOIN LGDAT . CODE SC ON 
		LTRIM ( RTRIM ( SC . A9 ) ) = SP . YACOMP AND 
		SC . A2 = 'AA' 
	LEFT OUTER JOIN LGDAT . CRET ON 
		B86COMN = SP . YACOMP AND 
		B86CURC = SUBSTR ( CC . A215 , 152 , 2 ) AND 
		B86RTTY = 'S' 
WHERE 
	V6PART = XPART AND 
	V6PLNT = XPLNT 
  
UNION ALL 
  
SELECT 
	PSE . LVL + 1 , 
	CASE WHEN AOSEQ# < 10 
		THEN PSE . CLINE || '-' || REPEAT ( '0' , 3 - LENGTH ( VARCHAR ( M . AQLIN# ) ) ) || VARCHAR ( M . AQLIN# ) || SUBSTR ( DIGITS ( COALESCE ( - AOSEQ# + 9 , AQSEQ# ) ) , 2 , 3 ) 
		ELSE VARCHAR ( PSE . CLINE , 100 ) 
	END , 
	PSE . CLINE || '-' || REPEAT ( '0' , 3 - LENGTH ( VARCHAR ( M . AQLIN# ) ) ) || VARCHAR ( M . AQLIN# ) || SUBSTR ( DIGITS ( COALESCE ( - AOSEQ# + 10 , AQSEQ# ) ) , 2 , 3 ) , 
	PSE . MAST , 
	PSE . MPLT , 
	PSE . CHLD , 
	M . AQMTLP , 
	A . V6STAT , 
	A . V6RPLN , 
	COALESCE ( AOSEQ# , AQSEQ# ) , 
	AODEPT , 
	COALESCE ( APVEND , AORESC ) , 
	COALESCE ( APODES , AOOPNM ) , 
	AOREPP , 
	ROUND ( FLOAT ( 1 / IFNULL ( AOEFC1 , 1 ) ) , 8 ) , 
	ROUND ( FLOAT ( 1 / IFNULL ( AOEFC1 , 1 ) ) , 8 ) * PSE . XREFF , 
	M . AQRQBY , 
	M . AQBACK , 
	FLOAT ( 1 - M . AQSCRP / 100 ) , 
	1 , 
	M . AQQPPC , 
	M . AQQTYM , 
	FLOAT ( M . AQQPPC / M . AQQTYM ) / FLOAT ( 1 - M . AQSCRP / 100 ) * CASE M . AQRQBY WHEN 'B' THEN - 1 ELSE 1 END , 
	FLOAT ( M . AQQPPC / M . AQQTYM ) * FLOAT ( PSE . ERQTY ) / FLOAT ( 1 - M . AQSCRP / 100 ) * CASE M . AQRQBY WHEN 'B' THEN - 1 ELSE 1 END , 
	A . V6UNTI , 
	M . AQUNIT , 
	FLOAT ( COALESCE ( U . MULT_BY , 1 ) ) * FLOAT ( COALESCE ( U2 . MULT_BY , 1 ) ) * PSE . CONV , 
	M . AQPLNT , 
	CASE A . V6RPLN WHEN '3' THEN A . V6TPLN ELSE M . AQPLNT END , 
	SUBSTR ( CC . A215 , 152 , 2 ) , 
	SUBSTR ( SC . A215 , 152 , 2 ) , 
	B86SRTE * PSE . FXR 
FROM 
	PSE PSE 
	INNER JOIN LGDAT . METHDM M ON 
		M . AQPART = PSE . CHLD AND 
		M . AQPLNT = PSE . SPLNT AND 
		M . AQSEQ# = IFNULL ( PSE . SEQ , M . AQSEQ# ) AND 
		 ----------MOD 10/20/15------------- 
		PSE . REPL <> '2' 
	LEFT OUTER JOIN LGDAT . STKA A ON 
		A . V6PART = M . AQMTLP AND 
		A . V6PLNT = M . AQPLNT 
	LEFT OUTER JOIN LGDAT . STKA A2 ON 
		A2 . V6PART = M . AQMTLP AND 
		A2 . V6PLNT = A . V6TPLN 
	LEFT OUTER JOIN LGDAT . METHDR ON 
		AOPART = M . AQMTLP AND 
		AOPLNT = CASE A . V6TPLN WHEN '' THEN A . V6PLNT ELSE A . V6TPLN END 
	LEFT OUTER JOIN LGDAT . METHDO ON 
		APPART = M . AQMTLP AND 
		APPLNT = CASE A . V6TPLN WHEN '' THEN A . V6PLNT ELSE A . V6TPLN END AND 
		A . V6RPLN = 1 
	LEFT OUTER JOIN 
	( 
	SELECT 
		IHUNT1 AS UNT1 , IHUNT2 AS UNT2 , IHCNV2 / IHCNV1 AS MULT_BY 
	FROM 
		LGDAT . PUNIT 
	WHERE 
		IHPART = '&&GLOBAL' 
  
	UNION ALL 
  
	SELECT 
		IHUNT2 AS UNT1 , IHUNT1 AS UNT2 , IHCNV1 / IHCNV2 AS MULT_BY 
	FROM 
		LGDAT . PUNIT 
	WHERE 
		IHPART = '&&GLOBAL' 
	) U ON 
		U . UNT1 = M . AQUNIT AND 
		U . UNT2 = A . V6UNTI 
	LEFT OUTER JOIN 
	( 
	SELECT 
		IHUNT1 AS UNT1 , IHUNT2 AS UNT2 , IHCNV2 / IHCNV1 AS MULT_BY 
	FROM 
		LGDAT . PUNIT 
	WHERE 
		IHPART = '&&GLOBAL' 
  
	UNION ALL 
  
	SELECT 
		IHUNT2 AS UNT1 , IHUNT1 AS UNT2 , IHCNV1 / IHCNV2 AS MULT_BY 
	FROM 
		LGDAT . PUNIT 
	WHERE 
		IHPART = '&&GLOBAL' 
	) U2 ON 
		LTRIM ( RTRIM ( U2 . UNT1 ) ) = A . V6UNTI AND 
		LTRIM ( RTRIM ( U2 . UNT2 ) ) = A2 . V6UNTI 
	LEFT OUTER JOIN LGDAT . PLNT CP ON 
		CP . YAPLNT = M . AQPLNT 
	LEFT OUTER JOIN LGDAT . PLNT SP ON 
		SP . YAPLNT = CASE A . V6RPLN WHEN '3' THEN A . V6TPLN ELSE M . AQPLNT END 
	LEFT OUTER JOIN LGDAT . CODE CC ON 
		LTRIM ( RTRIM ( CC . A9 ) ) = CP . YACOMP AND 
		CC . A2 = 'AA' 
	LEFT OUTER JOIN LGDAT . CODE SC ON 
		LTRIM ( RTRIM ( SC . A9 ) ) = SP . YACOMP AND 
		SC . A2 = 'AA' 
	LEFT OUTER JOIN LGDAT . CRET ON 
		B86COMN = SP . YACOMP AND 
		B86CURC = SUBSTR ( CC . A215 , 152 , 2 ) AND 
		B86RTTY = 'S'		 
WHERE 
	LVL <= 10 
	AND PSE . REPL <> '4' 
) 
  
SELECT 
	MAST , 
	MPLT , 
	REPEAT ( '.  ' , LVL ) || LVL AS TLVL , 
	REPEAT ( '.  ' , LVL ) || CHLD TPART , 
	REPEAT ( '.  ' , LVL ) || COALESCE ( AWDES1 , AVDES1 ) DESCR , 
	PLINE , 
	CLINE , 
	PSE . CHLD PART , 
	CPLNT , 
	STAT , REPL , SPLNT , SEQ , AAOSRV OUTS , DEP , RESC , OPC , AOREPP , 
	REFF , XREFF , 
	RQBY , BACK , 
	IFNULL ( MM . AVMAJG , MP . AWMAJG ) MAJG , 
	IFNULL ( MM . AVMING , MP . AWMING ) || ' - ' || RTRIM ( MMGP . BRDES ) MING , 
	IFNULL ( MM . AVGLCD , MP . AWGLDC ) GLCD , 
	IFNULL ( MM . AVGLED , MP . AWGLED ) GLED , 
	SCRP , 
	 --QTY, BQTY, 
	RQTY , 
	ERQTY , 
	ERQTY * ( 1 / XREFF - 1 ) ERQTYS , 
	UNTI , BUOM , CONV , 
	CPC , SPC , 
	 --FXR, 
	 --COALESCE(IP.CHCURR, IR.Y0FUT1) AS CURR, 
	CHAR ( COALESCE ( IP . CHSDAT , IR . Y0SDAT , IM . CGSDAT ) ) DT , 
	IP . CHSUC BASE , 
	IP . CHSFC FRT , 
	IP . CHSDC DUTY , 
	IP . CHS1C MISC1 , 
	IP . CHS2C MISC2 , 
	 -------------------------MOD 10/20/15----------------------------- 
	CASE REPL WHEN '2' THEN IP . CHSCC WHEN '3' THEN IR . Y0SOC ELSE 0 END AS CURR , 
	IR . Y0SSHC "S&H" , 
	APFCSO "FRT-TO" , 
	APFCSI "FRT-FROM" , 
	APUNCS SUBC , 
	AORUNS RUNTIME , 
	AO#MEN / AO#MCH RUNCREW , 
	AOSETP SETTIME , 
	V6OPTR RUNSIZE , 
	AOSCRW SETCREW , 
	CASE ABLABR WHEN 0 THEN AASTDR ELSE ABLABR END LABRATE , 
	CASE ABBRDR WHEN 0 THEN AABRDR ELSE ABBRDR END FIXRATE , 
	CASE ABVBRD WHEN 0 THEN AAVBRD ELSE ABVBRD END VARRATE , 
	CASE ABLABR WHEN 0 THEN AASTDR ELSE ABLABR END / AORUNS * AO#MEN / AO#MCH LABRUN , 
	CASE ABBRDR WHEN 0 THEN AABRDR ELSE ABBRDR END / AORUNS FIXRUN , 
	CASE ABVBRD WHEN 0 THEN AAVBRD ELSE ABVBRD END / AORUNS VARRUN , 
	CASE ABLABR WHEN 0 THEN AASTDR ELSE ABLABR END * AOSETP * AOSCRW / V6OPTR LABSET , 
	CASE ABBRDR WHEN 0 THEN AABRDR ELSE ABBRDR END * AOSETP / V6OPTR FIXSET , 
	CASE ABVBRD WHEN 0 THEN AAVBRD ELSE ABVBRD END * AOSETP / V6OPTR VARSET , 
	 ----------EXTENDED VALUES---------- 
	IP . CHSUC * ERQTY BASEX , 
	IP . CHSFC * ERQTY FRTX , 
	CASE REPL WHEN '2' THEN IP . CHSCC WHEN '3' THEN IR . Y0SOC ELSE 0 END * ERQTY AS CURRX , 
	( IP . CHSDC + IP . CHS1C + IP . CHS2C + IR . Y0SSHC + APFCSO + APFCSI ) * ERQTY OTHMX , 
	APUNCS * ERQTY SUBCX , 
	CASE ABLABR WHEN 0 THEN AASTDR ELSE ABLABR END / AORUNS * AO#MEN / AO#MCH * ERQTY LABRX , 
	CASE ABBRDR WHEN 0 THEN AABRDR ELSE ABBRDR END / AORUNS * ERQTY FIXRX , 
	CASE ABVBRD WHEN 0 THEN AAVBRD ELSE ABVBRD END / AORUNS * ERQTY VARRX , 
	CASE ABLABR WHEN 0 THEN AASTDR ELSE ABLABR END * AOSETP * AOSCRW / V6OPTR * ERQTY LABSX , 
	CASE ABBRDR WHEN 0 THEN AABRDR ELSE ABBRDR END * AOSETP / V6OPTR * ERQTY FIXSX , 
	CASE ABVBRD WHEN 0 THEN AAVBRD ELSE ABVBRD END * AOSETP / V6OPTR * ERQTY VARSX , 
	 --------SCRAP---------- 
	IP . CHSUC * ERQTY * ( 1 / XREFF - 1 ) BASEXS , 
	IP . CHSFC * ERQTY * ( 1 / XREFF - 1 ) FRTXS , 
	CASE PSE . LVL WHEN '0' THEN 0 ELSE CASE REPL WHEN '2' THEN IP . CHSCC WHEN '3' THEN IR . Y0SOC ELSE 0 END * ERQTY * ( 1 / XREFF - 1 ) END AS CURRXS , 
	( IP . CHSDC + IP . CHS1C + IP . CHS2C + IR . Y0SSHC + APFCSO + APFCSI ) * ERQTY * ( 1 / XREFF - 1 ) OTHMXS , 
	APUNCS * ERQTY * ( 1 / XREFF - 1 ) SUBCXS , 
	CASE ABLABR WHEN 0 THEN AASTDR ELSE ABLABR END / AORUNS * AO#MEN / AO#MCH * ERQTY * ( 1 / XREFF - 1 ) LABRXS , 
	CASE ABBRDR WHEN 0 THEN AABRDR ELSE ABBRDR END / AORUNS * ERQTY * ( 1 / XREFF - 1 ) FIXRXS , 
	CASE ABVBRD WHEN 0 THEN AAVBRD ELSE ABVBRD END / AORUNS * ERQTY * ( 1 / XREFF - 1 ) VARRXS , 
	CASE ABLABR WHEN 0 THEN AASTDR ELSE ABLABR END * AOSETP * AOSCRW / V6OPTR * ERQTY * ( 1 / XREFF - 1 ) LABSXS , 
	CASE ABBRDR WHEN 0 THEN AABRDR ELSE ABBRDR END * AOSETP / V6OPTR * ERQTY * ( 1 / XREFF - 1 ) FIXSXS , 
	CASE ABVBRD WHEN 0 THEN AAVBRD ELSE ABVBRD END * AOSETP / V6OPTR * ERQTY * ( 1 / XREFF - 1 ) VARSXS 
FROM 
	PSE PSE 
	LEFT OUTER JOIN LGDAT . ICSTM IM ON 
		IM . CGPART = PSE . CHLD AND 
		IM . CGPLNT = PSE . SPLNT 
	LEFT OUTER JOIN LGDAT . ICSTP IP ON 
		IP . CHPART = PSE . CHLD AND 
		IP . CHPLNT = PSE . SPLNT 
	LEFT OUTER JOIN LGDAT . ICSTR IR ON 
		IR . Y0PART = PSE . CHLD AND 
		IR . Y0PLNT = PSE . CPLNT 
	LEFT OUTER JOIN LGDAT . METHDO ON 
		APPART = CHLD AND 
		APPLNT = SPLNT AND 
		APSEQ# = SEQ AND 
		APVEND = RESC 
	LEFT OUTER JOIN LGDAT . METHDR ON 
		AOPART = CHLD AND 
		AOPLNT = SPLNT AND 
		AOSEQ# = SEQ 
	LEFT OUTER JOIN LGDAT . STKA ON 
		V6PART = CHLD AND 
		V6PLNT = SPLNT 
	LEFT OUTER JOIN LGDAT . RESRE ON 
		ABPLNT = SPLNT AND 
		ABDEPT = PSE . DEP AND 
		ABRESC = RESC 
	LEFT OUTER JOIN LGDAT . DEPTS ON 
		ABDEPT = AADEPT 
	LEFT OUTER JOIN LGDAT . STKMM MM ON 
		MM . AVPART = PSE . CHLD 
	LEFT OUTER JOIN LGDAT . STKMP MP ON 
		MP . AWPART = PSE . CHLD 
	LEFT OUTER JOIN LGDAT . MMGP MMGP ON 
		MMGP . BRMGRP = COALESCE ( AWMING , AVMING ) AND 
		MMGP . BRGRP = COALESCE ( AWMAJG , AVMAJG ) 
ORDER BY CLINE ASC 
; 
OPEN C1 ; 
END  ; 
  

  
  
