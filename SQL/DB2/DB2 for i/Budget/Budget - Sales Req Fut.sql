

WITH
	RECURSIVE PSE 
	(
		 ------------EXPLOSION TRACKING---------------- 
		LVL, PLINE, CLINE, MAST, MPLT, PRNT, COLD, 
		 ------------PROCUREMENT----------------------- 
		STAT, REPL, 
		 ------------ROUTING--------------------------- 
		SEQ, DEP, RESC, OPC, REPP, REFF, XREFF, 
		 ------------BILL OF MATERIALS----------------- 
		RQBY, BACK, SCRP, EFF, QTY, BQTY, RQTY, ERQTY, 
		 ------------UOM CONVERSIONS------------------- 
		UNTI, BUOM, CONV, 
		 ------------SOURCING-------------------------- 
		CPLNT, SPLNT, 
		 ------------CURRENCY-------------------------- 
		CPC, SPC, FXR 
	) AS 
(
SELECT 
	0, 
	VARCHAR (SUBSTR (DIGITS (INT (RANK () OVER (ORDER BY A.V6PART ASC, A.V6PLNT ASC))), 6, 5), 100) || 
	CASE WHEN AOSEQ# < 10 
		THEN SUBSTR (DIGITS (- AOSEQ# + 9), 2, 3) 
		ELSE '' 
	END AS PLINE, 
	VARCHAR (SUBSTR (DIGITS (INT (RANK () OVER (ORDER BY A.V6PART ASC, A.V6PLNT ASC))), 6, 5), 100) || SUBSTR (DIGITS (- AOSEQ# + 10), 2, 3) AS CLINE, 
	A.V6PART, 
	A.V6PLNT, 
	A.V6PART, 
	A.V6PART, 
	A.V6STAT, 
	A.V6RPLN, 
	AOSEQ#, 
	AODEPT, 
	COALESCE (APVEND, AORESC), 
	COALESCE (APODES, AOOPNM), 
	AOREPP, 
	ROUND (FLOAT (1 / IFNULL (AOEFC1, 1)), 8), 
	ROUND (FLOAT (1 / IFNULL (AOEFC1, 1)), 8), 
	'R', 
	' ', 
	1, 
	1, 
	1, 
	1, 
	1, 
	1, 
	A.V6UNTI, 
	A.V6UNTI, 
	FLOAT (1), 
	A.V6PLNT, 
	CASE A.V6RPLN WHEN '3' THEN A.V6TPLN ELSE A.V6PLNT END, 
	SUBSTR (CC.A215, 152, 2), 
	SUBSTR (SC.A215, 152, 2), 
	B86SRTE 
FROM 
	QGPL.FFBSUPP SALES
	LEFT OUTER JOIN LGDAT.STKA A ON
		V6PART = SALES.PART AND
		V6PLNT = SALES.PLNT
	LEFT OUTER JOIN LGDAT.FUTHDR ON 
		AOPART = A.V6PART AND 
		AOPLNT = CASE A.V6RPLN WHEN '3' THEN A.V6TPLN ELSE A.V6PLNT END 
	LEFT OUTER JOIN LGDAT.FUTHDO ON 
		APPART = A.V6PART AND 
		APPLNT = CASE A.V6TPLN WHEN '' THEN A.V6PLNT ELSE A.V6TPLN END AND 
		A.V6RPLN = 1 
	LEFT OUTER JOIN LGDAT.PLNT CP ON 
		CP.YAPLNT = A.V6PLNT 
	LEFT OUTER JOIN LGDAT.PLNT SP ON 
		SP.YAPLNT = CASE A.V6RPLN WHEN '3' THEN A.V6TPLN ELSE A.V6PLNT END 
	LEFT OUTER JOIN LGDAT.CODE CC ON 
		LTRIM (RTRIM (CC.A9)) = CP.YACOMP AND 
		CC.A2 = 'AA' 
	LEFT OUTER JOIN LGDAT.CODE SC ON 
		LTRIM (RTRIM (SC.A9)) = SP.YACOMP AND 
		SC.A2 = 'AA' 
	LEFT OUTER JOIN LGDAT.CRET ON 
		B86COMN = SP.YACOMP AND 
		B86CURC = SUBSTR (CC.A215, 152, 2) AND 
		B86RTTY = 'S' 
  
UNION ALL 
  
SELECT 
	PSE.LVL + 1, 
	CASE WHEN AOSEQ# < 10 
		THEN PSE.CLINE || '-' || REPEAT ('0', 3 - LENGTH (VARCHAR (M.AQLIN#))) || VARCHAR (M.AQLIN#) || SUBSTR (DIGITS (COALESCE (- AOSEQ# + 9, AQSEQ#)), 2, 3) 
		ELSE VARCHAR (PSE.CLINE, 100) 
	END, 
	PSE.CLINE || '-' || REPEAT ('0', 3 - LENGTH (VARCHAR (M.AQLIN#))) || VARCHAR (M.AQLIN#) || SUBSTR (DIGITS (COALESCE (- AOSEQ# + 10, AQSEQ#)), 2, 3), 
	PSE.MAST, 
	PSE.MPLT, 
	PSE.COLD, 
	M.AQMTLP, 
	A.V6STAT, 
	A.V6RPLN, 
	COALESCE (AOSEQ#, AQSEQ#), 
	AODEPT, 
	COALESCE (APVEND, AORESC), 
	COALESCE (APODES, AOOPNM), 
	AOREPP, 
	ROUND (FLOAT (1 / IFNULL (AOEFC1, 1)), 8), 
	ROUND (FLOAT (1 / IFNULL (AOEFC1, 1)), 8) * PSE.XREFF, 
	M.AQRQBY, 
	M.AQBACK, 
	FLOAT (1 - M.AQSCRP / 100), 
	1, 
	M.AQQPPC, 
	M.AQQTYM, 
	FLOAT (M.AQQPPC / M.AQQTYM) / FLOAT (1 - M.AQSCRP / 100) * CASE M.AQRQBY WHEN 'B' THEN - 1 ELSE 1 END, 
	FLOAT (M.AQQPPC / M.AQQTYM) * FLOAT (PSE.ERQTY) / FLOAT (1 - M.AQSCRP / 100) * CASE M.AQRQBY WHEN 'B' THEN - 1 ELSE 1 END, 
	A.V6UNTI, 
	M.AQUNIT, 
	FLOAT (COALESCE (U.MULT_BY, 1)) * FLOAT (COALESCE (U2.MULT_BY, 1)) * PSE.CONV, 
	M.AQPLNT, 
	CASE A.V6RPLN WHEN '3' THEN A.V6TPLN ELSE M.AQPLNT END, 
	SUBSTR (CC.A215, 152, 2), 
	SUBSTR (SC.A215, 152, 2), 
	B86SRTE * PSE.FXR 
FROM 
	PSE PSE 
	INNER JOIN LGDAT.FUTHDM M ON 
		M.AQPART = PSE.COLD AND 
		M.AQPLNT = PSE.SPLNT AND 
		M.AQSEQ# = IFNULL (PSE.SEQ, M.AQSEQ#) AND 
		 ----------MOD 10/20/15------------- 
		PSE.REPL <> '2' 
	LEFT OUTER JOIN LGDAT.STKA A ON 
		A.V6PART = M.AQMTLP AND 
		A.V6PLNT = M.AQPLNT 
	LEFT OUTER JOIN LGDAT.STKA A2 ON 
		A2.V6PART = M.AQMTLP AND 
		A2.V6PLNT = A.V6TPLN 
	LEFT OUTER JOIN LGDAT.FUTHDR ON 
		AOPART = M.AQMTLP AND 
		AOPLNT = CASE A.V6TPLN WHEN '' THEN A.V6PLNT ELSE A.V6TPLN END AND
		A.V6RPLN = 1
	LEFT OUTER JOIN LGDAT.FUTHDO ON 
		APPART = M.AQMTLP AND 
		APPLNT = CASE A.V6TPLN WHEN '' THEN A.V6PLNT ELSE A.V6TPLN END AND 
		A.V6RPLN = 1 
	LEFT OUTER JOIN 
	(
	SELECT 
		IHUNT1 AS UNT1, IHUNT2 AS UNT2, IHCNV2 / IHCNV1 AS MULT_BY 
	FROM 
		LGDAT.PUNIT 
	WHERE 
		IHPART = '&&GLOBAL' 
  
	UNION ALL 
  
	SELECT 
		IHUNT2 AS UNT1, IHUNT1 AS UNT2, IHCNV1 / IHCNV2 AS MULT_BY 
	FROM 
		LGDAT.PUNIT 
	WHERE 
		IHPART = '&&GLOBAL' 
	) U ON 
		U.UNT1 = M.AQUNIT AND 
		U.UNT2 = A.V6UNTI 
	LEFT OUTER JOIN 
	(
	SELECT 
		IHUNT1 AS UNT1, IHUNT2 AS UNT2, IHCNV2 / IHCNV1 AS MULT_BY 
	FROM 
		LGDAT.PUNIT 
	WHERE 
		IHPART = '&&GLOBAL' 
  
	UNION ALL 
  
	SELECT 
		IHUNT2 AS UNT1, IHUNT1 AS UNT2, IHCNV1 / IHCNV2 AS MULT_BY 
	FROM 
		LGDAT.PUNIT 
	WHERE 
		IHPART = '&&GLOBAL' 
	) U2 ON 
		LTRIM (RTRIM (U2.UNT1)) = A.V6UNTI AND 
		LTRIM (RTRIM (U2.UNT2)) = A2.V6UNTI 
	LEFT OUTER JOIN LGDAT.PLNT CP ON 
		CP.YAPLNT = M.AQPLNT 
	LEFT OUTER JOIN LGDAT.PLNT SP ON 
		SP.YAPLNT = CASE A.V6RPLN WHEN '3' THEN A.V6TPLN ELSE M.AQPLNT END 
	LEFT OUTER JOIN LGDAT.CODE CC ON 
		LTRIM (RTRIM (CC.A9)) = CP.YACOMP AND 
		CC.A2 = 'AA' 
	LEFT OUTER JOIN LGDAT.CODE SC ON 
		LTRIM (RTRIM (SC.A9)) = SP.YACOMP AND 
		SC.A2 = 'AA' 
	LEFT OUTER JOIN LGDAT.CRET ON 
		B86COMN = SP.YACOMP AND 
		B86CURC = SUBSTR (CC.A215, 152, 2) AND 
		B86RTTY = 'S'		 
WHERE 
	LVL <= 10 
	AND PSE.REPL <> '4' 
) 

SELECT 
	MAST, 
	MPLT, 
	REPEAT ('.  ', LVL) || LVL AS TLVL, 
	REPEAT ('.  ', LVL) || COLD TPART, 
	REPEAT ('.  ', LVL) || COALESCE (AWDES1, AVDES1) DESCR, 
	PLINE, 
	CLINE, 
	PSE.COLD PART, 
	CPLNT, 
	STAT, 
	REPL,
	SPLNT, 
	SEQ, 
	AAOSRV OUTS, 
	DEP, 
	RESC, 
	OPC, 
	AOREPP, 
	REFF, 
	XREFF, 
	RQBY, 
	BACK, 
	IFNULL (MM.AVMAJG, MP.AWMAJG) MAJG, 
	IFNULL (MM.AVMING, MP.AWMING) || ' - ' || RTRIM (MMGP.BRDES) MING, 
	IFNULL (MM.AVGLCD, MP.AWGLDC) GLCD, 
	IFNULL (MM.AVGLED, MP.AWGLED) GLED, 
	SCRP, 
	 --QTY, BQTY, 
	RQTY, 
	ERQTY, 
	ERQTY * (1 / XREFF - 1) ERQTYS, 
	UNTI, 
	BUOM, 
	CONV, 
	CPC, 
	SPC, 
	 --FXR, 
	 --COALESCE(IP.COCURR, IR.Y3FUT1) AS CURR, 
	COALESCE (IP.COSDAT, IR.Y3SDAT, IM.CNSDAT) DT, 
	IP.COSUC BASE, 
	IP.COSFC FRT, 
	IP.COSDC DUTY, 
	IP.COS1C MISC1, 
	IP.COS2C MISC2, 
	 -------------------------MOD 10/20/15----------------------------- 
	CASE REPL WHEN '2' THEN IP.COSCC WHEN '3' THEN IR.Y3SOC ELSE 0 END AS CURR, 
	IR.Y3SSHC "S&H", 
	APFCSO "FRT-TO", 
	APFCSI "FRT-FROM", 
	APUNCS SUBC, 
	AORUNS RUNTIME, 
	AO#MEN / AO#MCH RUNCREW, 
	AOSETP SETTIME, 
	V6OPTR RUNSIZE, 
	AOSCRW SETCREW, 
	CASE R9LABR WHEN 0 THEN R8STDR ELSE R9LABR END LABRATE, 
	CASE R9BRDR WHEN 0 THEN R8BRDR ELSE R9BRDR END FIXRATE, 
	CASE R9VBRD WHEN 0 THEN R8VBRD ELSE R9VBRD END VARRATE, 
	CASE WHEN AAOSRV = 'Y' 
		THEN 0 
		ELSE 
			CASE R9LABR 
				WHEN 0 THEN 
					AASTDR 
				ELSE 
					R9LABR 
			END 
			/ AORUNS 
			* AO#MEN 
			/ AO#MCH 
	END LABRUN, 
	CASE WHEN AAOSRV = 'Y' 
		THEN 0 
		ELSE 
			CASE R9BRDR 
				WHEN 0 THEN 
					AABRDR 
				ELSE 
					R9BRDR
			END 
			/ AORUNS 
	END FIXRUN, 
	CASE WHEN AAOSRV = 'Y' 
		THEN 0 
		ELSE 
			CASE R9VBRD 
				WHEN 0 THEN 
					AAVBRD 
				ELSE 
					R9VBRD 
			END 
			/ AORUNS 
	END VARRUN, 
	CASE R9LABR WHEN 0 THEN R8STDR ELSE R9LABR END * AOSETP * AOSCRW / V6OPTR LABSET, 
	CASE R9BRDR WHEN 0 THEN R8BRDR ELSE R9BRDR END * AOSETP / V6OPTR FIXSET, 
	CASE R9VBRD WHEN 0 THEN R8VBRD ELSE R9VBRD END * AOSETP / V6OPTR VARSET, 
	 ----------EXTENDED VALUES---------- 
	IP.COSUC * ERQTY BASEX, 
	IP.COSFC * ERQTY FRTX, 
	IP.COSDC * ERQTY DUTYX,
	IP.COS1C * ERQTY MULT1X,
	IP.COS2C * ERQTY MULT2X,
	IR.Y3SSHC * ERQTY SHIPHX,
	APFCSO * ERQTY OSFTX,
	APFCSI * ERQTY OSFFX,
	CASE REPL WHEN '2' THEN IP.COSCC WHEN '3' THEN IR.Y3SOC ELSE 0 END * ERQTY AS CURRX, 
	APUNCS * ERQTY SUBCX, 
	CASE WHEN AAOSRV = 'Y' THEN 0 ELSE CASE R9LABR WHEN 0 THEN R8STDR ELSE R9LABR END / AORUNS * AO#MEN / AO#MCH * ERQTY  END LABRX, 
	CASE WHEN AAOSRV = 'Y' THEN 0 ELSE CASE R9BRDR WHEN 0 THEN R8BRDR ELSE R9BRDR END / AORUNS * ERQTY END FIXRX, 
	CASE WHEN AAOSRV = 'Y' THEN 0 ELSE CASE R9VBRD WHEN 0 THEN R8VBRD ELSE R9VBRD END / AORUNS * ERQTY END VARRX, 
	CASE R9LABR WHEN 0 THEN R8STDR ELSE R9LABR END * AOSETP * AOSCRW / V6OPTR * ERQTY LABSX, 
	CASE R9BRDR WHEN 0 THEN R8BRDR ELSE R9BRDR END * AOSETP / V6OPTR * ERQTY FIXSX, 
	CASE R9VBRD WHEN 0 THEN R8VBRD ELSE R9VBRD END * AOSETP / V6OPTR * ERQTY VARSX, 
	 --------SCRAP---------- 
	IP.COSUC * ERQTY * (1 / XREFF - 1) BASEXS, 
	IP.COSFC * ERQTY * (1 / XREFF - 1) FRTXS, 
	IP.COSDC * ERQTY * (1 / XREFF - 1) DUTYXS,
	IP.COS1C * ERQTY * (1 / XREFF - 1) MULT1XS,
	IP.COS2C * ERQTY * (1 / XREFF - 1) MULT2XS,
	IR.Y3SSHC * ERQTY * (1 / XREFF - 1) SHIPHXS,
	APFCSO * ERQTY * (1 / XREFF - 1) OSFTXS,
	APFCSI * ERQTY * (1 / XREFF - 1)  OSFFXS,
	CASE PSE.LVL WHEN '0' THEN 0 ELSE CASE REPL WHEN '2' THEN IP.COSCC WHEN '3' THEN IR.Y3SOC ELSE 0 END * ERQTY * (1 / XREFF - 1) END AS CURRXS, 
	APUNCS * ERQTY * (1 / XREFF - 1) SUBCXS, 
	CASE WHEN AAOSRV = 'Y' THEN 0 ELSE CASE R9LABR WHEN 0 THEN R8STDR ELSE R9LABR END / AORUNS * AO#MEN / AO#MCH * ERQTY * (1 / XREFF - 1) END LABRXS, 
	CASE WHEN AAOSRV = 'Y' THEN 0 ELSE CASE R9BRDR WHEN 0 THEN R8BRDR ELSE R9BRDR END / AORUNS * ERQTY * (1 / XREFF - 1) END FIXRXS, 
	CASE WHEN AAOSRV = 'Y' THEN 0 ELSE CASE R9VBRD WHEN 0 THEN R8VBRD ELSE R9VBRD END / AORUNS * ERQTY * (1 / XREFF - 1) END VARRXS, 
	CASE R9LABR WHEN 0 THEN R8STDR ELSE R9LABR END * AOSETP * AOSCRW / V6OPTR * ERQTY * (1 / XREFF - 1) LABSXS, 
	CASE R9BRDR WHEN 0 THEN R8BRDR ELSE R9BRDR END * AOSETP / V6OPTR * ERQTY * (1 / XREFF - 1) FIXSXS, 
	CASE R9VBRD WHEN 0 THEN R8VBRD ELSE R9VBRD END * AOSETP / V6OPTR * ERQTY * (1 / XREFF - 1) VARSXS 
FROM 
	PSE PSE 
	LEFT OUTER JOIN LGDAT.FTCSTM IM ON 
		IM.CNPART = PSE.COLD AND 
		IM.CNPLNT = PSE.SPLNT 
	LEFT OUTER JOIN LGDAT.FTCSTP IP ON 
		IP.COPART = PSE.COLD AND 
		IP.COPLNT = PSE.SPLNT 
	LEFT OUTER JOIN LGDAT.FTCSTR IR ON 
		IR.Y3PART = PSE.COLD AND 
		IR.Y3PLNT = PSE.CPLNT 
	LEFT OUTER JOIN LGDAT.FUTHDO ON 
		APPART = COLD AND 
		APPLNT = SPLNT AND 
		APSEQ# = SEQ AND 
		APVEND = RESC 
	LEFT OUTER JOIN LGDAT.FUTHDR ON 
		AOPART = COLD AND 
		AOPLNT = SPLNT AND 
		AOSEQ# = SEQ 
	LEFT OUTER JOIN LGDAT.STKA ON 
		V6PART = COLD AND 
		V6PLNT = SPLNT 
	LEFT OUTER JOIN LGDAT.FRESRE ON 
		R9PLNT = SPLNT AND 
		R9DEPT = PSE.DEP AND 
		R9RESC = RESC 
    LEFT OUTER JOIN LGDAT.DEPTS ON
        AADEPT = AODEPT
	LEFT OUTER JOIN LGDAT.FDEPTS ON 
		AODEPT = R8DEPT 
	LEFT OUTER JOIN LGDAT.STKMM MM ON 
		MM.AVPART = PSE.COLD 
	LEFT OUTER JOIN LGDAT.STKMP MP ON 
		MP.AWPART = PSE.COLD 
	LEFT OUTER JOIN LGDAT.MMGP MMGP ON 
		MMGP.BRMGRP = COALESCE (AWMING, AVMING) AND 
		MMGP.BRGRP = COALESCE (AWMAJG, AVMAJG) 
ORDER BY CLINE ASC
FETCH FIRST 10 ROWS ONLY