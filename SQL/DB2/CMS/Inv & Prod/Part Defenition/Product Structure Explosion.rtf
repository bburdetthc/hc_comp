WITH RECURSIVE PSE(LVL, PLINE, CLINE, MAST, PRNT, CHLD, CDESCR,STAT, REPL, TYPE, RQBY, BACK, SCRP, EFF, QTY, BQTY, RQTY,ERQTY, UNTI, BUOM, CONV, CPLNT, SPLNT) AS
(
SELECT
  	0,
  	VARCHAR(SUBSTR(DIGITS(int(ROW_NUMBER() OVER ())),8,3),100) AS PLINE, 
  	VARCHAR(SUBSTR(DIGITS(int(ROW_NUMBER() OVER ())),8,3),100) AS CLINE,  
  	S.AVPART, S.AVPART, S.AVPART, S.AVDES1, A.V6STAT, A.V6RPLN, S.AVTYPE, 'R',' ', 1,1,1, 1,1,1, S.AVUNTI, S.AVUNTI,  FLOAT(1),
  	A.V6PLNT, CASE A.V6RPLN WHEN '3' THEN A.V6TPLN ELSE A.V6PLNT END
 FROM
  	LGDAT.STKMM S 
  	INNER JOIN LGDAT.STKA A ON
 		A.V6PART = S.AVPART
 WHERE
  	S.AVPART IN ('STT04000G18K250') AND
  	A.V6PLNT = '152'
UNION ALL

SELECT
  	PSE.LVL+1, 
  	VARCHAR(PSE.CLINE,100),
  	PSE.CLINE||'-'||REPEAT('0',3-LENGTH(VARCHAR(M.AQLIN#)))||VARCHAR(M.AQLIN#),
  	PSE.MAST,
  	PSE.CHLD,
  	M.AQMTLP,
  	M.AQMTLD,
  	A.V6STAT,
  	A.V6RPLN,
  	M.AQSTYP,
  	M.AQRQBY, M.AQBACK,
  	FLOAT(1-M.AQSCRP/100), 1,
  	M.AQQPPC,
  	M.AQQTYM,
  	FLOAT(M.AQQPPC/M.AQQTYM)/FLOAT(1-M.AQSCRP/100)*CASE M.AQRQBY WHEN 'B' THEN -1 ELSE 1 END,
  	FLOAT(M.AQQPPC/M.AQQTYM)*FLOAT(PSE.ERQTY)/FLOAT(1-M.AQSCRP/100)*CASE M.AQRQBY WHEN 'B' THEN -1 ELSE 1 END,
  	A.V6UNTI,
  	M.AQUNIT,
  	FLOAT(COALESCE(U.MULT_BY,1))*FLOAT(COALESCE(U2.MULT_BY,1))*PSE.CONV,
  	M.AQPLNT,
  	CASE A.V6RPLN WHEN '3' THEN A.V6TPLN ELSE M.AQPLNT END
 FROM
   	PSE PSE
	INNER JOIN LGDAT.METHDM M ON
    		M.AQPART = PSE.CHLD AND
    		M.AQPLNT = PSE.SPLNT
	LEFT OUTER JOIN LGDAT.STKA A ON
    		A.V6PART = M.AQMTLP AND
    		A.V6PLNT = M.AQPLNT
	LEFT OUTER JOIN LGDAT.STKA A2 ON
		A2.V6PART = M.AQMTLP AND
		A2.V6PLNT = A.V6TPLN
 	LEFT OUTER JOIN
   	(
 	SELECT
  		IHUNT1 AS UNT1, IHUNT2 AS UNT2, IHCNV2/IHCNV1 as MULT_BY 
 	FROM 
  		LGDAT.PUNIT
 	WHERE
  		IHPART = '&&GLOBAL'

 	UNION ALL

 	SELECT 
  		IHUNT2 AS UNT1, IHUNT1 AS UNT2, IHCNV1/IHCNV2 as MULT_BY 
 	FROM 
  		LGDAT.PUNIT
 	WHERE
  		IHPART = '&&GLOBAL'
    	) U ON
    		U.UNT1 = M.AQUNIT AND
    		U.UNT2 = A.V6UNTI
	LEFT OUTER JOIN
   	(
 	SELECT
  		IHUNT1 AS UNT1, IHUNT2 AS UNT2, IHCNV2/IHCNV1 as MULT_BY 
 	FROM 
  		LGDAT.PUNIT
 	WHERE
  		IHPART = '&&GLOBAL'

 	UNION ALL

 	SELECT 
  		IHUNT2 AS UNT1, IHUNT1 AS UNT2, IHCNV1/IHCNV2 as MULT_BY 
 	FROM 
  		LGDAT.PUNIT
 	WHERE
  		IHPART = '&&GLOBAL'
    	) U2 ON
		LTRIM(RTRIM(U2.UNT1)) = A.V6UNTI AND
    		LTRIM(RTRIM(U2.UNT2)) = A2.V6UNTI
WHERE
    	LVL <=10 AND
	PSE.REPL <> '2'
)

 SELECT 
     	REPEAT('. ',LVL)|| LVL AS TLVL,  
  	CHLD, CDESCR, STAT, REPL,
      	RQBY, BACK,
   	IFNULL(MM.AVMAJG,MP.AWMAJG) MAJG, 
  	IFNULL(MM.AVMING,MP.AWMING)||' - '||RTRIM(MMGP.BRDES) MING, 
   	IFNULL(MM.AVGLCD,MP.AWGLDC) GLCD, 
   	IFNULL(MM.AVGLED,MP.AWGLED) GLED,
   	SCRP, 
	--QTY, BQTY, 
	RQTY, ERQTY, UNTI, BUOM, CONV, PSE.CPLNT, PSE.SPLNT,
   	COALESCE(IM.CGSTCS, IP.CHSTCS, IR.Y0STCS) AS STDCOST,
	COALESCE(IP.CHCURR, IR.Y0FUT1) AS CURR,
	IP.CHSUC, COALESCE(IP.CHSCC, IR.Y0SOC) AS SCC, IP.CHSFC, IP.CHSDC, IP.CHS1C, IP.CHS2C
FROM 
   	PSE PSE
  	LEFT OUTER JOIN LGDAT.ICSTM IM ON
   			IM.CGPART = PSE.CHLD AND
    			IM.CGPLNT = PSE.SPLNT
  	LEFT OUTER JOIN LGDAT.ICSTP IP ON
    			IP.CHPART = PSE.CHLD AND
   			IP.CHPLNT = PSE.SPLNT
	LEFT OUTER JOIN LGDAT.ICSTR IR ON
			IR.Y0PART = PSE.CHLD AND
			IR.Y0PLNT = PSE.SPLNT
  	LEFT OUTER JOIN LGDAT.STKMM MM ON
  			MM.AVPART = PSE.CHLD
  	LEFT OUTER JOIN LGDAT.STKMP MP ON
    			MP.AWPART = PSE.CHLD
  	LEFT OUTER JOIN LGDAT.MMGP MMGP ON
  		MMGP.BRMGRP = COALESCE(AWMING, AVMING) AND
  		MMGP.BRGRP = COALESCE(AWMAJG, AVMAJG) 
ORDER BY CLINE ASC