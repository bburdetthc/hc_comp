---------------------------------------------------------------------------------------------------------------------
--PULL ALL COST CHANGES WHERE THE CHANGE DATE & PART ARE IN THE TARGET TRANSACTION DATES & PARTS
--PUT THEM IN A TEMP TABLE TO CHECK FOR AGGREGATION METHOD IS OK AND WHERE OLD COST = 0 UPDATE TO PREVIOUS NEW COST
--GRAB ALL PREVIOUS COST RUN FOR ITEMS WHERE THE OLD IS -0- IN THE INITIAL LIST AND PICK THE MAX DATE/TIME
--APPLY THAT NEW COST TO THE OLD COST IN THE TEMP FILE
--THEN APPLY THE TEMP FILE COST LISTING TO THE TARGET TRANSACTIONS
---------------------------------------------------------------------------------------------------------------------

--DECLARE GLOBAL TEMPORARY TABLE CT(PART CHAR(20), PLNT CHAR(4), DT CHAR(10), TM CHAR(8), NEW FLOAT, CHK1 INT, CHK2 INT, RID INT)

--
/*
INSERT INTO
	QTEMP.CT
SELECT
	JHPART, JHPLNT, CHAR(JHDATE), CHAR(JHTIME), SUM(JHTOTN),
	--if either of the following fields are greater than one then do not use. the agg eliminates duplicate entries per timestamp
	SUM(CASE JHTOTO WHEN 0 THEN 0 ELSE 1 END),
	SUM(CASE JHTOTN WHEN 0 THEN 0 ELSE 1 END), 0
FROM
	LGDAT.ICSTT
	INNER JOIN
	(
	SELECT 
		BYPART, BYPLNT, MIN(BYSDAT) MSDAT
	FROM
		LGDAT.STKT
	WHERE
		BYFSYY = 2014 AND
		BYFSPR = 3
	GROUP BY
		BYPART, BYPLNT
	) X ON
		BYPART = JHPART AND
		BYPLNT = JHPLNT AND
		JHDATE >= MSDAT AND
		JHCTYP = 'S'
GROUP BY
	JHPART, JHPLNT, CHAR(JHDATE), CHAR(JHTIME)
*/



/*
INSERT INTO 
	QTEMP.CT
SELECT
	PART, PLNT, CHAR(JHDATE), CHAR(JHTIME), SUM(JHTOTN),
	--if either of the following fields are greater than one then do not use
	SUM(CASE JHTOTO WHEN 0 THEN 0 ELSE 1 END),
	SUM(CASE JHTOTN WHEN 0 THEN 0 ELSE 1 END), 0
FROM
	(
		--this listing needs to pull the max stamp where the stamp is less than the existing min stamp
		SELECT
			PART, PLNT, MAX(CHAR(JHDATE)||CHAR(JHTIME)) SSTMP
		FROM
			(SELECT PART, PLNT, MIN(DT||TM) MINS FROM QTEMP.CT GROUP BY PART, PLNT) X
			INNER JOIN LGDAT.ICSTT ON
				JHPART = X.PART AND
				JHPLNT = X.PLNT AND
				JHCTYP = 'S' AND
				CHAR(JHDATE)||CHAR(JHTIME) < X.MINS
		GROUP BY
			PART, PLNT
	) X
	INNER JOIN LGDAT.ICSTT ON
		JHPART = PART AND
		JHPLNT = PLNT AND
		JHCTYP = 'S' AND
		CHAR(JHDATE)||CHAR(JHTIME) = SSTMP
GROUP BY
	PART, PLNT, CHAR(JHDATE), CHAR(JHTIME)
*/

--SELECT CT.*, ROW_NUMBER() OVER (PARTITION BY PART, PLNT ORDER BY PART, PLNT, DT, TM) NRID FROM QTEMP.CT CT


/*
MERGE INTO QTEMP.CT CT 
	USING (SELECT CT.*, ROW_NUMBER() OVER (PARTITION BY PART, PLNT ORDER BY PART, PLNT, DT, TM) NRID FROM QTEMP.CT CT) RN
	ON
		CT.PART = RN.PART AND
		CT.PLNT = RN.PLNT AND
		CT.DT = RN.DT AND
		CT.TM = RN.TM
WHEN MATCHED
	THEN UPDATE SET
		(CT.RID) = (RN.NRID)
*/

--DECLARE GLOBAL TEMPORARY TABLE CR(PART CHAR(20), PLNT CHAR(4), FDT CHAR(10), FTM CHAR(8), TDT CHAR(10), TTM CHAR(8),  NEW FLOAT, FRID INT, TRID INT)


/*
INSERT INTO 
	QTEMP.CR
SELECT 
	T.PART, T.PLNT, F.DT, F.TM, T.DT, T.TM, F.NEW, F.RID, T.RID
FROM
	QTEMP.CT T
	LEFT OUTER JOIN QTEMP.CT F ON
		F.PART = T.PART AND
		F.PLNT = T.PLNT AND
		F.RID = T.RID - 1
*/

/*
UPDATE 
	QTEMP.CR
SET
	FDT = '0001-01-01',
	FTM = '00:00:01',
	NEW = 0,
	FRID = 0
WHERE
	FRID IS NULL
*/


--SELECT * FROM QTEMP.CR



/*
INSERT INTO
	QTEMP.CR
SELECT 
	A.PART, A.PLNT, A.TDT FDT, A.TTM FTM, '9999-99-99' TDT,'99:99:99' TTM, T.NEW, A.TRID, A.TRID+1
FROM 
	QTEMP.CR A 
	INNER JOIN QTEMP.CT T ON
		T.PART = A.PART AND
		T.PLNT = A.PLNT AND
		T.DT = A.TDT AND
		T.TM = A.TTM
	LEFT OUTER JOIN QTEMP.CR J ON
		A.PART = J.PART AND
		A.PLNT = J.PLNT AND
		A.TRID = J.FRID
WHERE 	
	J.FRID IS NULL
*/

--SELECT * FROM QTEMP.CR

/*
SELECT
	BYPART, BYPLNT, BYSRC, BYQTY*CASE BYACTN WHEN 'I' THEN -1 ELSE 1 END, NEW, COALESCE(CGSTCS, CHSTCS, Y0STCS) AS STD
FROM
	LGDAT.STKT
	LEFT OUTER JOIN QTEMP.CR ON
		PART = BYPART AND
		PLNT = BYPLNT AND
		FDT||FTM <= CHAR(BYSDAT)||CHAR(BYSTIM) AND
		TDT||TTM >= CHAR(BYSDAT)||CHAR(BYSTIM)
	LEFT OUTER JOIN LGDAT.ICSTP ON
		CHPART = BYPART AND
		CHPLNT = BYPLNT
	LEFT OUTER JOIN LGDAT.ICSTM ON
		CGPART = BYPART AND
		CGPLNT = BYPLNT
	LEFT OUTER JOIN LGDAT.ICSTR ON
		Y0PART = BYPART AND
		Y0PLNT = BYPLNT
WHERE
	BYFSYY = 2014 AND
	BYFSPR = 3
FETCH FIRST 500 ROWS ONLY
*/

/*
MERGE INTO
	QGPL.FFCOSTEFFD Q
USING 
	(
	SELECT 
		R.PART, R.PLNT, R.FDT, R.FTM, R.TDT, R.TTM, R.NEW, 
		CASE 
			WHEN COALESCE(T.CHK1,T2.CHK1) > 1 THEN 'T' 
			ELSE 
				CASE 
					WHEN COALESCE(T.CHK2, T2.CHK2) > 1 THEN 'T' 
					ELSE 'F'
				END
		END ERRFLAG
	FROM 
		QTEMP.CR R
		LEFT OUTER JOIN QTEMP.CT T ON
			T.PART = R.PART AND
			T.PLNT = R.PLNT AND
			T.DT = R.FDT AND
			T.TM = R.FTM
		LEFT OUTER JOIN QTEMP.CT T2 ON
			T2.PART = R.PART AND
			T2.PLNT = R.PLNT AND
			T2.DT = R.TDT AND
			T2.TM = R.TTM AND
			R.FDT = '0001-01-01'
	ORDER BY 
		PART, PLNT, TRID
	) X ON
		Q.PART = X.PART AND
		Q.PLNT = X.PLNT AND
		Q.FDT = X.FDT AND
		Q.FTM = X.FTM AND
		--the 'to date & time' should probably be eliminated because they will change if there is a new cost
		--Q.TDT = X.TDT AND
		--Q.TTM = X.TTM
WHEN MATCHED 
	THEN UPDATE SET
		(Q.COST,Q.ERR) = (X.NEW,X.ERRFLAG)
WHEN NOT MATCHED
	THEN INSERT
		(Q.PART, Q.PLNT, Q.FDT, Q.FTM, Q.TDT, Q.TTM, Q.COST, Q.ERR)
		VALUES
		(X.PART, X.PLNT, X.FDT, X.FTM, X.TDT, X.TTM, X.NEW, X.ERRFLAG)
*/


--DROP TABLE QTEMP.CT
--DROP TABLE QTEMP.CR