BEGIN
	
	--NEED TO MODIFY; IMPORT OCRHT AND CATPURE MERGE OUTPUT
	--THEN FIND ALL THE ORDERS WHERE THE MAX ACTION CODE PER ORDER IS 3 IN THE NEW SET AND USE IT TO DELETE THOSE FROM LOCAL TABLES
	--NEED TO DO THE SAME WITH OCRIT
	DECLARE @EC BIGINT;				--error code
	DECLARE @EM VARCHAR(MAX);		--error message
	DECLARE @ST DATETIME2;			--start time
	DECLARE @PR DATETIME2;			--prior start
	DECLARE @NV BIGINT;				--next sequence value
	DECLARE @S BIGINT;				--count of rows
	DECLARE @SQL VARCHAR(MAX);		--sql statement
	DECLARE @MIN VARCHAR(MAX);		--minimum timestamp
	DECLARE @MAX VARCHAR(MAX);		--maximum timestamp

	----------------POPULATE ERROR VARIABLES-----------------------------------------------
	SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();



	----------------GET NEXT JOB# IN SEQUNCE-----------------------------------------------
	SELECT @NV = NEXT VALUE FOR CTRL.MASTER_IMPORT;


	----------------SEE IF THERE ARE ANY GLOBAL LOCKS--------------------------------------
	IF @EC = 0 
	BEGIN
		SELECT @S = (SELECT COUNT(*) CNT FROM CTRL.IMP_JOB WHERE GLOB_LOCK = 1 AND CODE = 'IMPORT_R_ORDERS');
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END


	----------------INSERT JOB TO LOG------------------------------------------------------
	IF @EC = 0
	BEGIN
		IF @S <> 0
		BEGIN
			INSERT INTO 
				CTRL.IMP_JOB 
			VALUES
				(@NV,CURRENT_USER,APP_NAME(),'IMPORT_R_ORDERS','NOT STARTED - JOB IN PROCESS',0,GETDATE(),GETDATE(),0);
			SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
			GOTO ERRH
		END
		BEGIN
			INSERT INTO 
				CTRL.IMP_JOB 
			VALUES
				(@NV,CURRENT_USER,APP_NAME(),'IMPORT_R_ORDERS','PROCESSING',0,GETDATE(),NULL,1);
			SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
		END
	END

	---------------------------OCRHT-----------------------------------------------

	BEGIN TRANSACTION ORDERS
	SET TRANSACTION ISOLATION LEVEL READ COMMITTED;

	SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();

	---------------------GET MINIMUM TIMESTAMP AS MAX LOCAL------------------------

	IF @EC = 0
	BEGIN
		SELECT @MIN = (SELECT CAST(MAX(DC3TMSP) AS VARCHAR(MAX)) FROM LGDAT.OCRHT); --'2017-01-01-00.00.00.000000'
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	---------------------GET MAX TIMESTAMP AS CURRENT TIME-------------------------

	IF @EC = 0
	BEGIN
		SELECT @MAX = (SELECT FORMAT(GETDATE(),'yyyy-MM-dd-HH.mm.ss.mmmmmm'));
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END
	--select @min, @max

	---------------------BUILD SELECT----------------------------------------------

	IF @EC = 0
	BEGIN	
		SELECT CMD INTO #SH FROM dbo.BUILD_DB2_SELECT('LGDAT','OCRHT') OPTION (MAXRECURSION 1000);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	---------------------BUILD WHERE CLAUSE----------------------------------------

	IF @EC = 0
	BEGIN
		SET @SQL = 
			(SELECT CMD FROM #SH) + 
			+ ' WHERE DC3TMSP >= ''' 
			+ @MIN
			+ ''' AND DC3TMSP <= '''
			+ @MAX
			+ '''';
		SELECT @SQL;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END
	
	---------------------CREATE COPY TABLE-----------------------------------------
	IF @EC = 0
	BEGIN
		SELECT * INTO #XH FROM LGDAT.OCRHT WHERE 0=1;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END
	---------------------POPULATE RECORDS------------------------------------------

	IF @EC = 0
	BEGIN
		INSERT INTO #XH EXECUTE(@SQL) AT CMS;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	---------------------BUILD MERGE STATEMENT-------------------------------------

	IF @EC = 0
	BEGIN
		SELECT * INTO #MH FROM BUILD_MERGE_SMASH('LGDAT','OCRHT','#XH') OPTION (MAXRECURSION 1000);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	---------------------TABLE TO SCALAR-------------------------------------------

	IF @EC = 0
	BEGIN
		SET @SQL = (SELECT CMD FROM #MH);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END
	
	---------------------EXECUTE MERGE---------------------------------------------

	IF @EC = 0
	BEGIN
		EXECUTE(@SQL);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	---------------------DROP TEMP TABLES------------------------------------------

	IF @EC = 0
	BEGIN
		DROP TABLE #XH;
		DROP TABLE #MH;
		DROP TABLE #SH;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	---------------------UPDATE OCRH WITH MAX OCRHT PER ORDER----------------------

	IF @EC = 0
	BEGIN
		MERGE
			LGDAT.OCRH A
		USING
			(
				SELECT 
					*
				FROM
					(
					SELECT
						*,
						MAX(DC3TMSP) OVER (PARTITION BY DC3ORD#) MT,
						MAX(DC3ACTN) OVER (PARTITION BY DC3ORD#, DC3TMSP) MA
					FROM
						LGDAT.OCRHT
					WHERE
						DC3TMSP >= @MIN
					) X
				WHERE
					MT = DC3TMSP AND
					MA = DC3ACTN
			) B  ON
				A.DCORD# = B.DC3ORD#
		WHEN MATCHED THEN UPDATE SET 
			DCODAT = B.DC3ODAT,
			DCOTYP = B.DC3OTYP,
			DCIUSE = B.DC3IUSE,
			DCBCUS = B.DC3BCUS,
			DCBNAM = B.DC3BNAM,
			DCBAD1 = B.DC3BAD1,
			DCBATT = B.DC3BATT,
			DCBPHO = B.DC3BPHO,
			DCTRCD = B.DC3TRCD,
			DCNU28 = B.DC3NU28,
			DCSHVI = B.DC3SHVI,
			DCSCUS = B.DC3SCUS,
			DCSNAM = B.DC3SNAM,
			DCSAD1 = B.DC3SAD1,
			DCSAD2 = B.DC3SAD2,
			DCSAD3 = B.DC3SAD3,
			DCSAD4 = B.DC3SAD4,
			DCSAD5 = B.DC3SAD5,
			DCSAD6 = B.DC3SAD6,
			DCSAD7 = B.DC3SAD7,
			DCSAD8 = B.DC3SAD8,
			DCSAD9 = B.DC3SAD9,
			DCSAD10 = B.DC3SAD10,
			DCSPOS = B.DC3SPOS,
			DCPO = B.DC3PO,
			DCQUOT = B.DC3QUOT,
			DCCURR = B.DC3CURR,
			DCMDAT = B.DC3MDAT,
			DCSLMN = B.DC3SLMN,
			DCCPCT = B.DC3CPCT,
			DCCRAT = B.DC3CRAT,
			DCRES = B.DC3RES,
			DCFSTL = B.DC3FSTL,
			DCPSTL = B.DC3PSTL,
			DCPPCL = B.DC3PPCL,
			DCGDIS = B.DC3GDIS,
			DCGDSF = B.DC3GDSF,
			DCSTAT = B.DC3STAT,
			DCWOPR = B.DC3WOPR,
			DCNDL# = B.DC3NDL#,
			DCTOTO = B.DC3TOTO,
			DCTDIS = B.DC3TDIS,
			DCTTAX = B.DC3TTAX,
			DCTFRT = B.DC3TFRT,
			DCTWGT = B.DC3TWGT,
			DCTWUN = B.DC3TWUN,
			DCTVOL = B.DC3TVOL,
			DCTVUN = B.DC3TVUN,
			DCAVPR = B.DC3AVPR,
			DCUDAT = B.DC3UDAT,
			DCUSRE = B.DC3USRE,
			DCUSRC = B.DC3USRC,
			DCINV# = B.DC3INV#,
			DCOBAL = B.DC3OBAL,
			DCARBK = B.DC3ARBK,
			DCSTKL = B.DC3STKL,
			DCRFNO = B.DC3RFNO,
			DCXDAT = B.DC3XDAT,
			DCTERR = B.DC3TERR,
			DCSLIP = B.DC3SLIP,
			DCCARC = B.DC3CARC,
			DCSERC = B.DC3SERC,
			DCSDAT = B.DC3SDAT,
			DCHDAT = B.DC3HDAT,
			DCDDAT = B.DC3DDAT,
			DCFDAT = B.DC3FDAT,
			DCRDAT = B.DC3RDAT,
			DCQDAT = B.DC3QDAT,
			DCCDAT = B.DC3CDAT,
			DCHREA = B.DC3HREA,
			DCBOFG = B.DC3BOFG,
			DCAPLG = B.DC3APLG,
			DCFOBC = B.DC3FOBC,
			DCSCOM = B.DC3SCOM,
			DCOSRC = B.DC3OSRC,
			DCOFXD = B.DC3OFXD,
			DCSLCS = B.DC3SLCS,
			DCCRTY = B.DC3CRTY,
			DCCRDT = B.DC3CRDT,
			DCCRD# = B.DC3CRD#,
			DCEXPR = B.DC3EXPR,
			DCHODR = B.DC3HODR,
			DCCRNM = B.DC3CRNM,
			DCSHBF = B.DC3SHBF,
			DCCLEN = B.DC3CLEN,
			DDFTTX = B.DD3FTTX,
			DCFUT1 = B.DC3FUT1,
			DCFUT2 = B.DC3FUT2,
			DCFLG1 = B.DC3FLG1,
			DCFLG2 = B.DC3FLG2,
			DCREFN = B.DC3REFN,
			DCPLNT = B.DC3PLNT,
			DCFUT3 = B.DC3FUT3,
			DCFUT4 = B.DC3FUT4,
			DCFUT5 = B.DC3FUT5,
			DCFUT6 = B.DC3FUT6,
			DCFUT7 = B.DC3FUT7,
			DCFUT8 = B.DC3FUT8,
			DCFUT9 = B.DC3FUT9,
			DCDAT1 = B.DC3DAT1,
			DCDAT2 = B.DC3DAT2,
			DCFLG3 = B.DC3FLG3,
			DCFLG4 = B.DC3FLG4,
			DCFLG5 = B.DC3FLG5,
			DCFLG6 = B.DC3FLG6,
			DCFLG7 = B.DC3FLG7,
			DCFUT10 = B.DC3FUT10,
			DCFUT11 = B.DC3FUT11,
			DCFUT12 = B.DC3FUT12,
			DCFUT13 = B.DC3FUT13,
			DCFUT14 = B.DC3FUT14,
			DCFUT15 = B.DC3FUT15,
			DCFUT16 = B.DC3FUT16,
			DCFUT17 = B.DC3FUT17,
			DCFUT18 = B.DC3FUT18,
			DCFUT19 = B.DC3FUT19,
			DCFUT20 = B.DC3FUT20,
			DCDEPT = B.DC3DEPT,
			DCPROM = B.DC3PROM,
			DCCLMO = B.DC3CLMO,
			DCTTMZ = B.DC3TTMZ,
			DCCTMZ = B.DC3CTMZ,
			DCOTMZ = B.DC3OTMZ,
			DCMTMZ = B.DC3MTMZ,
			DCQTMZ = B.DC3QTMZ,
			DCSTMZ = B.DC3STMZ,
			DCMTME = B.DC3MTME,
			DCMXDT = B.DC3MXDT,
			DCMXTM = B.DC3MXTM,
			DCR870 = B.DC3R870,
			DCS870 = B.DC3S870,
			DCFCHG = B.DC3FCHG,
			DCSTTP = B.DC3STTP,
			DCSCNS = B.DC3SCNS,
			DCOTMC = B.DC3OTMC,
			DCOFOM = B.DC3OFOM,
			DCOFTM = B.DC3OFTM,
			DCAPPTM = B.DC3APPTM,
			DCEXPO = B.DC3EXPO,
			DCSDLV = B.DC3SDLV,
			DCSPIC = B.DC3SPIC,
			DCFRTC = B.DC3FRTC,
			DCCPLT = B.DC3CPLT,
			DCSDBC = B.DC3SDBC,
			DCSDBS = B.DC3SDBS,
			DCSDSC = B.DC3SDSC,
			DCSDSS = B.DC3SDSS,
			DCSDCR = B.DC3SDCR,
			DCSCPO = B.DC3SCPO,
			DCSCOR = B.DC3SCOR,
			DCFROM = B.DC3FROM,
			DCSCTY = B.DC3SCTY,
			DCSPOV = B.DC3SPOV,
			DCSCRY = B.DC3SCRY
		WHEN NOT MATCHED THEN 
			INSERT (DCORD#, DCODAT, DCOTYP, DCIUSE, DCBCUS, DCBNAM, DCBAD1, DCBATT, DCBPHO, DCTRCD, DCNU28, DCSHVI, DCSCUS, DCSNAM, DCSAD1, DCSAD2, DCSAD3, DCSAD4, DCSAD5, DCSAD6, DCSAD7, DCSAD8, DCSAD9, DCSAD10, DCSPOS, DCPO, DCQUOT, DCCURR, DCMDAT, DCSLMN, DCCPCT, DCCRAT, DCRES, DCFSTL, DCPSTL, DCPPCL, DCGDIS, DCGDSF, DCSTAT, DCWOPR, DCNDL#, DCTOTO, DCTDIS, DCTTAX, DCTFRT, DCTWGT, DCTWUN, DCTVOL, DCTVUN, DCAVPR, DCUDAT, DCUSRE, DCUSRC, DCINV#, DCOBAL, DCARBK, DCSTKL, DCRFNO, DCXDAT, DCTERR, DCSLIP, DCCARC, DCSERC, DCSDAT, DCHDAT, DCDDAT, DCFDAT, DCRDAT, DCQDAT, DCCDAT, DCHREA, DCBOFG, DCAPLG, DCFOBC, DCSCOM, DCOSRC, DCOFXD, DCSLCS, DCCRTY, DCCRDT, DCCRD#, DCEXPR, DCHODR, DCCRNM, DCSHBF, DCCLEN, DDFTTX, DCFUT1, DCFUT2, DCFLG1, DCFLG2, DCREFN, DCPLNT, DCFUT3, DCFUT4, DCFUT5, DCFUT6, DCFUT7, DCFUT8, DCFUT9, DCDAT1, DCDAT2, DCFLG3, DCFLG4, DCFLG5, DCFLG6, DCFLG7, DCFUT10, DCFUT11, DCFUT12, DCFUT13, DCFUT14, DCFUT15, DCFUT16, DCFUT17, DCFUT18, DCFUT19, DCFUT20, DCDEPT, DCPROM, DCCLMO, DCTTMZ, DCCTMZ, DCOTMZ, DCMTMZ, DCQTMZ, DCSTMZ, DCMTME, DCMXDT, DCMXTM, DCR870, DCS870, DCFCHG, DCSTTP, DCSCNS, DCOTMC, DCOFOM, DCOFTM, DCAPPTM, DCEXPO, DCSDLV, DCSPIC, DCFRTC, DCCPLT, DCSDBC, DCSDBS, DCSDSC, DCSDSS, DCSDCR, DCSCPO, DCSCOR, DCFROM, DCSCTY, DCSPOV, DCSCRY)
			VALUES (B.DC3ORD#, B.DC3ODAT, B.DC3OTYP, B.DC3IUSE, B.DC3BCUS, B.DC3BNAM, B.DC3BAD1, B.DC3BATT, B.DC3BPHO, B.DC3TRCD, B.DC3NU28, B.DC3SHVI, B.DC3SCUS, B.DC3SNAM, B.DC3SAD1, B.DC3SAD2, B.DC3SAD3, B.DC3SAD4, B.DC3SAD5, B.DC3SAD6, B.DC3SAD7, B.DC3SAD8, B.DC3SAD9, B.DC3SAD10, B.DC3SPOS, B.DC3PO, B.DC3QUOT, B.DC3CURR, B.DC3MDAT, B.DC3SLMN, B.DC3CPCT, B.DC3CRAT, B.DC3RES, B.DC3FSTL, B.DC3PSTL, B.DC3PPCL, B.DC3GDIS, B.DC3GDSF, B.DC3STAT, B.DC3WOPR, B.DC3NDL#, B.DC3TOTO, B.DC3TDIS, B.DC3TTAX, B.DC3TFRT, B.DC3TWGT, B.DC3TWUN, B.DC3TVOL, B.DC3TVUN, B.DC3AVPR, B.DC3UDAT, B.DC3USRE, B.DC3USRC, B.DC3INV#, B.DC3OBAL, B.DC3ARBK, B.DC3STKL, B.DC3RFNO, B.DC3XDAT, B.DC3TERR, B.DC3SLIP, B.DC3CARC, B.DC3SERC, B.DC3SDAT, B.DC3HDAT, B.DC3DDAT, B.DC3FDAT, B.DC3RDAT, B.DC3QDAT, B.DC3CDAT, B.DC3HREA, B.DC3BOFG, B.DC3APLG, B.DC3FOBC, B.DC3SCOM, B.DC3OSRC, B.DC3OFXD, B.DC3SLCS, B.DC3CRTY, B.DC3CRDT, B.DC3CRD#, B.DC3EXPR, B.DC3HODR, B.DC3CRNM, B.DC3SHBF, B.DC3CLEN, B.DD3FTTX, B.DC3FUT1, B.DC3FUT2, B.DC3FLG1, B.DC3FLG2, B.DC3REFN, B.DC3PLNT, B.DC3FUT3, B.DC3FUT4, B.DC3FUT5, B.DC3FUT6, B.DC3FUT7, B.DC3FUT8, B.DC3FUT9, B.DC3DAT1, B.DC3DAT2, B.DC3FLG3, B.DC3FLG4, B.DC3FLG5, B.DC3FLG6, B.DC3FLG7, B.DC3FUT10, B.DC3FUT11, B.DC3FUT12, B.DC3FUT13, B.DC3FUT14, B.DC3FUT15, B.DC3FUT16, B.DC3FUT17, B.DC3FUT18, B.DC3FUT19, B.DC3FUT20, B.DC3DEPT, B.DC3PROM, B.DC3CLMO, B.DC3TTMZ, B.DC3CTMZ, B.DC3OTMZ, B.DC3MTMZ, B.DC3QTMZ, B.DC3STMZ, B.DC3MTME, B.DC3MXDT, B.DC3MXTM, B.DC3R870, B.DC3S870, B.DC3FCHG, B.DC3STTP, B.DC3SCNS, B.DC3OTMC, B.DC3OFOM, B.DC3OFTM, B.DC3APPTM, B.DC3EXPO, B.DC3SDLV, B.DC3SPIC, B.DC3FRTC, B.DC3CPLT, B.DC3SDBC, B.DC3SDBS, B.DC3SDSC, B.DC3SDSS, B.DC3SDCR, B.DC3SCPO, B.DC3SCOR, B.DC3FROM, B.DC3SCTY, B.DC3SPOV, B.DC3SCRY);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END;

	---------------------DELETE LINES FROM OCRHT-----------------------------------

	IF @EC = 0 
	BEGIN
		DELETE
			H
		FROM
			(
				SELECT
					X.DC3ORD#
				FROM
					(
						SELECT
							T.DC3ORD#, 
							T.DC3TMSP, 
							T.DC3ACTN, 
							MAX(T.DC3TMSP) OVER (PARTITION BY T.DC3ORD#) MT,
							MAX(T.DC3ACTN) OVER (PARTITION BY T.DC3ORD#, T.DC3TMSP) MA
						FROM
							LGDAT.OCRHT T
							INNER JOIN
							(
								SELECT DISTINCT 
									DC3ORD# 
								FROM 
									LGDAT.OCRHT 
								WHERE 
									DC3TMSP >= @MIN AND
									DC3ACTN = 3
							) X ON
								X.DC3ORD# = T.DC3ORD#
					) X
				WHERE
					DC3TMSP = MT AND
					DC3ACTN = MA AND
					MA = 3
			) X
			INNER JOIN LGDAT.OCRH H ON	
				DCORD# = DC3ORD#;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END;


	----------------OCRIT----------------------

	---------------------GET MIN TIMETSTAMPT AS MAX LOCAL--------------------------
	IF @EC = 0
	BEGIN
		SELECT @MIN = (SELECT CAST(MAX(DC4TMSP) AS VARCHAR(MAX)) FROM LGDAT.OCRIT); --'2017-01-01-00.00.00.000000'
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	---------------------GET MAX TIMESTAMP AS CURRENT TIME-------------------------
	IF @EC = 0
	BEGIN
		SELECT @MAX = (SELECT FORMAT(GETDATE(),'yyyy-MM-dd-HH.mm.ss.mmmmmm'));
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	---------------------BUILD SELECT----------------------------------------------
	IF @EC = 0
	BEGIN	
		SELECT CMD INTO #SI FROM dbo.BUILD_DB2_SELECT('LGDAT','OCRIT') OPTION (MAXRECURSION 1000);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	---------------------BUILD WHERE CLAUSE----------------------------------------
	IF @EC = 0
	BEGIN
		SET @SQL = 
			(SELECT CMD FROM #SI) + 
			+ ' WHERE DC4TMSP >= '''
			+ @MIN
			+ ''' AND DC4TMSP <= '''
			+ @MAX
			+ '''';
		SELECT @SQL;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END
	
	---------------------CREATE TABLE COPY-----------------------------------------
	IF @EC = 0
	BEGIN
		SELECT * INTO #XI FROM LGDAT.OCRIT WHERE 0=1;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END
	
	---------------------POPULATE COPY---------------------------------------------
	IF @EC = 0
	BEGIN
		INSERT INTO #XI EXECUTE(@SQL) AT CMS;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	---------------------BUILD MERGE-----------------------------------------------

	IF @EC = 0
	BEGIN
		SELECT * INTO #MI FROM BUILD_MERGE_SMASH('LGDAT','OCRIT','#XI') OPTION (MAXRECURSION 1000);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	---------------------TABLE TO SCALAR-------------------------------------------
	IF @EC = 0
	BEGIN
		SET @SQL = (SELECT CMD FROM #MI);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END
	
	---------------------EXECUTE MERGE---------------------------------------------
	IF @EC = 0
	BEGIN
		EXECUTE(@SQL);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END
	
	---------------------DROP TEMP TABLES------------------------------------------
	IF @EC = 0
	BEGIN
		DROP TABLE #XI;
		DROP TABLE #MI;
		DROP TABLE #SI;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	---------------------UPDATE OCRI WITH MAX OCRIT PER ORDER & LINE---------------

	IF @EC = 0
	BEGIN
		MERGE
			LGDAT.OCRI A
		USING
			(
				SELECT 
					*
				FROM
					(
					SELECT
						*,
						MAX(DC4TMSP) OVER (PARTITION BY DC4ORD#, DC4ITM#) MT,
						MAX(DC4ACTN) OVER (PARTITION BY DC4ORD#, DC4ITM#, DC4TMSP) MA
					FROM
						LGDAT.OCRIT
					WHERE
						DC4TMSP >= @MIN
					) X
				WHERE
					MT = DC4TMSP AND
					MA = DC4ACTN
			) B  ON
				A.DDORD# = B.DC4ORD# AND
				A.DDITM# = B.DC4ITM#
		WHEN MATCHED THEN UPDATE SET 
			DDDES# = B.DC4DES#,
			DDQTOI = B.DC4QTOI,
			DDQTBI = B.DC4QTBI,
			DDQTSI = B.DC4QTSI,
			DDUNIT = B.DC4UNIT,
			DDUNPR = B.DC4UNPR,
			DDTOTI = B.DC4TOTI,
			DDSLMN = B.DC4SLMN,
			DDCPCT = B.DC4CPCT,
			DDCRAT = B.DC4CRAT,
			DDAIND = B.DC4AIND,
			DDPTEX = B.DC4PTEX,
			DDFTCD = B.DC4FTCD,
			DDRDAT = B.DC4RDAT,
			DDMAJS = B.DC4MAJS,
			DDMINS = B.DC4MINS,
			DDITST = B.DC4ITST,
			DDPART = B.DC4PART,
			DDGLC = B.DC4GLC,
			DDCRRS = B.DC4CRRS,
			DDSDAT = B.DC4SDAT,
			DDTXGR = B.DC4TXGR,
			DDTXRT = B.DC4TXRT,
			DDNU07 = B.DC4NU07,
			DDTMPS = B.DC4TMPS,
			DDTEMP = B.DC4TEMP,
			DDQTOO = B.DC4QTOO,
			DDQTBO = B.DC4QTBO,
			DDQTSO = B.DC4QTSO,
			DDORUN = B.DC4ORUN,
			DDQTSP = B.DC4QTSP,
			DDPRUN = B.DC4PRUN,
			DDTOTB = B.DC4TOTB,
			DDTDIS = B.DC4TDIS,
			DDTTAX = B.DC4TTAX,
			DDTFRT = B.DC4TFRT,
			DDTWGT = B.DC4TWGT,
			DDTWUN = B.DC4TWUN,
			DDTVOL = B.DC4TVOL,
			DDTVUN = B.DC4TVUN,
			DDODAT = B.DC4ODAT,
			DDSTKL = B.DC4STKL,
			DDSTOR = B.DC4STOR,
			DDDDAT = B.DC4DDAT,
			DDFDAT = B.DC4FDAT,
			DDHDAT = B.DC4HDAT,
			DDQDAT = B.DC4QDAT,
			DDCDAT = B.DC4CDAT,
			DDOLST = B.DC4OLST,
			DDCTMS = B.DC4CTMS,
			DDCUSR = B.DC4CUSR,
			DDDBUY = B.DC4DBUY,
			DDREQ# = B.DC4REQ#,
			DDPJNM = B.DC4PJNM,
			DDFUT1 = B.DC4FUT1,
			DDFUT2 = B.DC4FUT2,
			DDFUT3 = B.DC4FUT3,
			DDFUT4 = B.DC4FUT4,
			DDFUT5 = B.DC4FUT5,
			DDFUT6 = B.DC4FUT6,
			DDFUT7 = B.DC4FUT7,
			DDFUT8 = B.DC4FUT8,
			DDFUT9 = B.DC4FUT9,
			DDFUTA = B.DC4FUTA,
			DDFUTB = B.DC4FUTB,
			DDFUTC = B.DC4FUTC,
			DDFUTD = B.DC4FUTD,
			DDWTCH = B.DC4WTCH,
			DDWTCI = B.DC4WTCI,
			DDLDSQ = B.DC4LDSQ,
			DDRAN# = B.DC4RAN#,
			DDCTMZ = B.DC4CTMZ,
			DDOTMZ = B.DC4OTMZ,
			DDRTMZ = B.DC4RTMZ,
			DDQTMZ = B.DC4QTMZ,
			DDSTMZ = B.DC4STMZ,
			DDRTME = B.DC4RTME,
			DDQTME = B.DC4QTME,
			DDSTME = B.DC4STME,
			DDRXDT = B.DC4RXDT,
			DDRXTM = B.DC4RXTM,
			DDQXDT = B.DC4QXDT,
			DDQXTM = B.DC4QXTM,
			DDPTYP = B.DC4PTYP,
			DDAWLS = B.DC4AWLS,
			DDPOIT = B.DC4POIT,
			DDSRVC = B.DC4SRVC,
			DDPRCL = B.DC4PRCL,
			DDAVAC = B.DC4AVAC,
			DDDBAC = B.DC4DBAC,
			DDSCDP = B.DC4SCDP,
			DDSOCP = B.DC4SOCP,
			DDCSPI = B.DC4CSPI,
			DDSCPI = B.DC4SCPI,
			DDSCOR = B.DC4SCOR,
			DDSCIM = B.DC4SCIM,
			DDREV# = B.DC4REV#,
			DDCSPA = B.DC4CSPA,
			DDOITM = B.DC4OITM,
			DDFROM = B.DC4FROM,
			DDMMEL = B.DC4MMEL,
			DDFEAT = B.DC4FEAT,
			DDOPTN = B.DC4OPTN
		WHEN NOT MATCHED THEN 
			INSERT (DDORD#, DDITM#, DDDES#, DDQTOI, DDQTBI, DDQTSI, DDUNIT, DDUNPR, DDTOTI, DDSLMN, DDCPCT, DDCRAT, DDAIND, DDPTEX, DDFTCD, DDRDAT, DDMAJS, DDMINS, DDITST, DDPART, DDGLC, DDCRRS, DDSDAT, DDTXGR, DDTXRT, DDNU07, DDTMPS, DDTEMP, DDQTOO, DDQTBO, DDQTSO, DDORUN, DDQTSP, DDPRUN, DDTOTB, DDTDIS, DDTTAX, DDTFRT, DDTWGT, DDTWUN, DDTVOL, DDTVUN, DDODAT, DDSTKL, DDSTOR, DDDDAT, DDFDAT, DDHDAT, DDQDAT, DDCDAT, DDOLST, DDCTMS, DDCUSR, DDDBUY, DDREQ#, DDPJNM, DDFUT1, DDFUT2, DDFUT3, DDFUT4, DDFUT5, DDFUT6, DDFUT7, DDFUT8, DDFUT9, DDFUTA, DDFUTB, DDFUTC, DDFUTD, DDWTCH, DDWTCI, DDLDSQ, DDRAN#, DDCTMZ, DDOTMZ, DDRTMZ, DDQTMZ, DDSTMZ, DDRTME, DDQTME, DDSTME, DDRXDT, DDRXTM, DDQXDT, DDQXTM, DDPTYP, DDAWLS, DDPOIT, DDSRVC, DDPRCL, DDAVAC, DDDBAC, DDSCDP, DDSOCP, DDCSPI, DDSCPI, DDSCOR, DDSCIM, DDREV#, DDCSPA, DDOITM, DDFROM, DDMMEL, DDFEAT, DDOPTN)
			VALUES (B.DC4ORD#, B.DC4ITM#, B.DC4DES#, B.DC4QTOI, B.DC4QTBI, B.DC4QTSI, B.DC4UNIT, B.DC4UNPR, B.DC4TOTI, B.DC4SLMN, B.DC4CPCT, B.DC4CRAT, B.DC4AIND, B.DC4PTEX, B.DC4FTCD, B.DC4RDAT, B.DC4MAJS, B.DC4MINS, B.DC4ITST, B.DC4PART, B.DC4GLC, B.DC4CRRS, B.DC4SDAT, B.DC4TXGR, B.DC4TXRT, B.DC4NU07, B.DC4TMPS, B.DC4TEMP, B.DC4QTOO, B.DC4QTBO, B.DC4QTSO, B.DC4ORUN, B.DC4QTSP, B.DC4PRUN, B.DC4TOTB, B.DC4TDIS, B.DC4TTAX, B.DC4TFRT, B.DC4TWGT, B.DC4TWUN, B.DC4TVOL, B.DC4TVUN, B.DC4ODAT, B.DC4STKL, B.DC4STOR, B.DC4DDAT, B.DC4FDAT, B.DC4HDAT, B.DC4QDAT, B.DC4CDAT, B.DC4OLST, B.DC4CTMS, B.DC4CUSR, B.DC4DBUY, B.DC4REQ#, B.DC4PJNM, B.DC4FUT1, B.DC4FUT2, B.DC4FUT3, B.DC4FUT4, B.DC4FUT5, B.DC4FUT6, B.DC4FUT7, B.DC4FUT8, B.DC4FUT9, B.DC4FUTA, B.DC4FUTB, B.DC4FUTC, B.DC4FUTD, B.DC4WTCH, B.DC4WTCI, B.DC4LDSQ, B.DC4RAN#, B.DC4CTMZ, B.DC4OTMZ, B.DC4RTMZ, B.DC4QTMZ, B.DC4STMZ, B.DC4RTME, B.DC4QTME, B.DC4STME, B.DC4RXDT, B.DC4RXTM, B.DC4QXDT, B.DC4QXTM, B.DC4PTYP, B.DC4AWLS, B.DC4POIT, B.DC4SRVC, B.DC4PRCL, B.DC4AVAC, B.DC4DBAC, B.DC4SCDP, B.DC4SOCP, B.DC4CSPI, B.DC4SCPI, B.DC4SCOR, B.DC4SCIM, B.DC4REV#, B.DC4CSPA, B.DC4OITM, B.DC4FROM, B.DC4MMEL, B.DC4FEAT, B.DC4OPTN);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END;

	---------------------DELETE LINES FROM OCRIT-----------------------------------

	IF @EC = 0 
	BEGIN
		DELETE
			I
		FROM
			(
			SELECT
				X.DC4ORD#,
				X.DC4ITM#
			FROM
				(
					SELECT
						I.DC4ORD#, 
						I.DC4ITM#, 
						I.DC4TMSP, 
						I.DC4ACTN, 
						MAX(I.DC4TMSP) OVER (PARTITION BY I.DC4ORD#, I.DC4ITM#) MT,
						MAX(I.DC4ACTN) OVER (PARTITION BY I.DC4ORD#, I.DC4ITM#, I.DC4TMSP) MA
					FROM
						LGDAT.OCRIT I
						INNER JOIN
						(
							SELECT DISTINCT 
								DC4ORD# 
							FROM 
								LGDAT.OCRIT 
							WHERE 
								DC4TMSP >= '2017-01-09'
						) X ON
							X.DC4ORD# = I.DC4ORD#
				) X
			WHERE
				DC4TMSP = MT AND
				DC4ACTN = MA AND
				MA = 3
			) X
			INNER JOIN LGDAT.OCRI I ON	
				DDORD# = DC4ORD# AND
				DDITM# = DC4ITM#;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END;

	---------------------COMMIT DECISION-------------------------------------------
	IF @EC = 0 
	BEGIN
		COMMIT TRANSACTION ORDERS;
		PRINT 'IMPORT_R_ORDERS PROCESSED CORRECTLY';
	END
	ELSE 
	BEGIN
		ROLLBACK TRANSACTION ORDERS;
		PRINT 'IMPORT_R_ORDERS PROCESSING ISSUE: ' + @EM;
	END

	/*-------------------------------------------------------------------------------------------------------------------------------------------------
  _    _               _           _                   _           _         _                      
 | |  | |             | |         | |                 | |         | |       | |                     
 | |  | |  _ __     __| |   __ _  | |_    ___         | |   ___   | |__     | |        ___     __ _ 
 | |  | | | '_ \   / _` |  / _` | | __|  / _ \    _   | |  / _ \  | '_ \    | |       / _ \   / _` |
 | |__| | | |_) | | (_| | | (_| | | |_  |  __/   | |__| | | (_) | | |_) |   | |____  | (_) | | (_| |
  \____/  | .__/   \__,_|  \__,_|  \__|  \___|    \____/   \___/  |_.__/    |______|  \___/   \__, |
          | |                                                                                  __/ |
          |_|                                                                                 |___/ 
*/-------------------------------------------------------------------------------------------------------------------------------------------------


	ERRH:
	IF @EC = 0
	BEGIN
		IF @S <> 0 
		BEGIN
			PRINT 'IMPORT NOT STARTED'
			PRINT cast(DATEDIFF(MS,@ST,GETDATE()) as varchar(max)) + ' ms';
			UPDATE CTRL.IMP_JOB SET 
				RET_CODE = @EC, 
				ED = GETDATE(),
				GLOB_LOCK = 0
			WHERE 
				ID = @NV
		END
		IF @S = 0 
		BEGIN
			PRINT 'TOTAL IMPORT SUCCESS';
			PRINT cast(DATEDIFF(MS,@ST,GETDATE()) as varchar(max)) + ' ms';
			UPDATE CTRL.IMP_JOB SET 
				STAT = 'COMPLETE', 
				RET_CODE = @EC, 
				ED = GETDATE(),
				GLOB_LOCK = 0
			WHERE 
				ID = @NV
		END
	END

	IF @EC <> 0
	BEGIN
		IF @S <> 0 
		BEGIN
			PRINT 'IMPORT NOT STARTED'
			PRINT cast(DATEDIFF(MS,@ST,GETDATE()) as varchar(max)) + ' ms';
			UPDATE CTRL.IMP_JOB SET 
				RET_CODE = @EC, 
				ED = GETDATE(),
				GLOB_LOCK = 0
			WHERE 
				ID = @NV
		END
		IF @S = 0
		BEGIN
			PRINT 'IMPORT FAILURE, CODE: ' + CAST(@EC AS VARCHAR(MAX));
			PRINT cast(DATEDIFF(MS,@ST,GETDATE()) as varchar(max)) + ' ms';
			UPDATE CTRL.IMP_JOB SET 
				STAT = 'FAIL', 
				RET_CODE = @EC, 
				ED = GETDATE(),
				GLOB_LOCK = 1
			WHERE 
				ID = @NV
		END
	END


END;