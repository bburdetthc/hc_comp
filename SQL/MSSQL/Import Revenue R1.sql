
BEGIN

	--GET MAX DKRCID FROM GLSBAR AS MIN
	--UPDATE GLSBAR
	--GET MAX DCRCID FROM GLSBAR AS MAX
	--QUERY OID FOR INVOICES IN: 
		--GLSBAR WHERE IN MAX DKRCID RANGE AND 
		--FROM OIH WHERE DHTOTI = 0 AND CURRENT PERIOD AND NOT IN LIST FROM LOCAL (BUILD OUT)
	--SAME FOR OIH
	--NEED TO BE ABLE TO UPDATE UNPOSTED INVOICES AS WELL FOR REPORTING OUT ON THAT

	

	DECLARE @EC INT;
	DECLARE @EM VARCHAR(MAX);
	DECLARE @SQL VARCHAR(MAX);
	DECLARE @MAXRC VARCHAR(MAX);
	DECLARE @MINRC VARCHAR(MAX);
	SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();

	CREATE TABLE #MRC (MAXRI BIGINT);
	INSERT INTO #MRC EXEC ('SELECT MAX(DKRCID) FROM LGDAT.GLSBAR') AT CMS
	SELECT @MAXRC = (SELECT * FROM #MRC);
	SELECT @MINRC = (SELECT MAX(DKRCID) FROM LGDAT.GLSBAR);

	----------------GLSBAR------------------------------

	SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	IF @EC = 0
	BEGIN	
		SELECT CMD INTO #S FROM dbo.BUILD_DB2_SELECT('LGDAT','GLSBAR') OPTION (MAXRECURSION 1000);
	END

	SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	IF @EC = 0
	BEGIN	
		SET @SQL = 
			(SELECT CMD FROM #S)
			+ ' WHERE DKRCID >= '
			+ (SELECT CAST(MAX(DKRCID) AS VARCHAR(MAX)) FROM LGDAT.GLSBAR)
	END

	SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	IF @EC = 0
	BEGIN	
		SELECT * INTO #X FROM LGDAT.GLSBAR WHERE 0=1;
	END

	SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	IF @EC = 0
	BEGIN	
		INSERT INTO #X EXECUTE(@SQL) AT CMS;
	END

	SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	IF @EC = 0
	BEGIN	
		SELECT * INTO #M FROM BUILD_MERGE_SMASH('LGDAT','GLSBAR','#X') OPTION (MAXRECURSION 1000);
	END
	
	SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	IF @EC = 0
	BEGIN	
		SET @SQL = (SELECT CMD FROM #M);
	END
	
	SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	IF @EC = 0
	BEGIN	
		EXECUTE(@SQL);
	END

	SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	IF @EC = 0
	BEGIN	
		DROP TABLE #X;
		DROP TABLE #M;
		DROP TABLE #S;
	END

	SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	IF @EC = 0 PRINT 'GLSBAR PROCESSED CORRECTLY';
	ELSE PRINT 'GLSBAR PROCESSING ISSUE: ' + @EM
	RETURN @EC; 

	----------OID--------------------------

	IF @EC = 0
	BEGIN	
		SELECT CMD INTO #SD FROM dbo.BUILD_DB2_SELECT('LGDAT','OID') OPTION (MAXRECURSION 1000);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	
	IF @EC = 0
	BEGIN	
		SET @SQL = 
			(SELECT CMD FROM #SD) + 
			+ ' WHERE DIINV# IN (SELECT DISTINCT DKKEYN FROM LGDAT.GLSBAR WHERE DKRCID >= ' 
			+ @MINRC 
			+ ' AND DKRCID <= ' 
			+ @MAXRC
			+ ' AND DKSRCE = ''OE'')';
		--SELECT @SQL;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	
	IF @EC = 0
	BEGIN	
		SELECT * INTO #XD FROM LGDAT.OID WHERE 0=1;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	
	IF @EC = 0
	BEGIN	
		INSERT INTO #XD EXECUTE(@SQL) AT CMS;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	
	IF @EC = 0
	BEGIN	
		SELECT * INTO #MD FROM BUILD_MERGE_SMASH('LGDAT','OID','#XD') OPTION (MAXRECURSION 1000);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	
	IF @EC = 0
	BEGIN	
		SET @SQL = (SELECT CMD FROM #MD);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END
	
	
	IF @EC = 0
	BEGIN	
		EXECUTE(@SQL);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	
	IF @EC = 0
	BEGIN	
		DROP TABLE #XD;
		DROP TABLE #MD;
		DROP TABLE #SD;
		DROP TABLE #MRC
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	--------------------------OIH--------------------------------

	IF @EC = 0
	BEGIN	
		SELECT CMD INTO #SH FROM dbo.BUILD_DB2_SELECT('LGDAT','OIH') OPTION (MAXRECURSION 1000);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	
	IF @EC = 0
	BEGIN	
		SET @SQL = 
			(SELECT CMD FROM #SH) + 
			+ ' WHERE DHINV# IN (SELECT DISTINCT DKKEYN FROM LGDAT.GLSBAR WHERE DKRCID >= ' 
			+ @MINRC	
			+ ' AND DKRCID <= ' 
			+ @MAXRC
			+ ' AND DKSRCE = ''OE'')';
		--SELECT @SQL;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	
	IF @EC = 0
	BEGIN	
		SELECT * INTO #XH FROM LGDAT.OIH WHERE 0=1;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	
	IF @EC = 0
	BEGIN	
		INSERT INTO #XH EXECUTE(@SQL) AT CMS;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	
	IF @EC = 0
	BEGIN	
		SELECT * INTO #MH FROM BUILD_MERGE_SMASH('LGDAT','OIH','#XH') OPTION (MAXRECURSION 1000);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	
	IF @EC = 0
	BEGIN	
		SET @SQL = (SELECT CMD FROM #MH);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END
	
	
	IF @EC = 0
	BEGIN	
		EXECUTE(@SQL);
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END

	
	IF @EC = 0
	BEGIN	
		DROP TABLE #XH;
		DROP TABLE #MH;
		DROP TABLE #SH;
		SELECT @EC = @@ERROR, @EM = ERROR_MESSAGE();
	END


END;
