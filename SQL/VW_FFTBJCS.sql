CREATE OR REPLACE VIEW RLARP.VW_FFTBJCS ( 
	FSYR ,
	FSPR , 
	CAPR , 
	SDAT , 
	EDAT , 
	COMP , 
	PLNT , 
	ACCT , 
	ACCT_DESCR, 
	ACCT_AND_DESCR,
	PRIME , 
	PRIMESUB,
	STATUS , 
	GLCC , 
	ELIM_TYPE , 
	ELIM_REL , 
	ELIM_DFGRP , 
	ELIM_CO , 
	FGRP , 
	STMT , 
	LVL0 , 
	LVL1 , 
	LVL2 , 
	LVL3 , 
	EBITDA , 
	DEPARTMENT , 
	DEP_GRP , 
	CURR , 
	OPEN_LOCAL , 
	NET_LOCAL , 
	END_LOCAL , 
	BDGT_LOCAL
	) 
	AS 
	SELECT  
		FSYR,
		PERIOD FSPR,  
		CAPR,  
		SDAT,  
		EDAT,  
		SUBSTR(ACC,1,2) AS COMP,  
		SUBSTR(ACC,3,2) PLNT,  
		ACC ACCT,  
		AZTITL ACCT_DESCR,  
		ACC||' - '||RTRIM(AZTITL) ACCT_AND_DESCR,
		SUBSTR(ACC,7,4) PRIME,  
		SUBSTR(ACC,7,6) PRIMESUB,  
		AZSTAT STATUS,  
		AZFUT3 GLCC,  
		RTRIM(D35DES3) ELIM_TYPE,  
		RTRIM(D35USR1) ELIM_REL,  
		RTRIM(D35USR2) ELIM_DFGRP, 
		SUBSTR(DIGITS(D35USR4),9,2) ELIM_CO, 
		AZGROP||' - '||RTRIM(TL.BQ1TITL) FGRP,  
		CASE WHEN AZATYP <= 3  
			THEN 'BALANCE SHEET'  
			ELSE 'INCOME STATEMENT'  
		END STMT,  
		SUBSTR(AZGROP,1,1)||' - '||RTRIM(SUBSTR(A249,1,30)) LVL0,  
		CASE LENGTH(RTRIM(AZGROP))  
			WHEN 3 THEN SUBSTR(TL.BQ1GRP,2,2)||' - '||RTRIM(TL.BQ1TITL)  
			ELSE SUBSTR(FA.BQ1GRP,2,2)||' - '||RTRIM(FA.BQ1TITL)  
		END LVL1,  
		CASE LENGTH(RTRIM(AZGROP))  
			WHEN 3 THEN '----------->'  
			WHEN 5 THEN SUBSTR(TL.BQ1GRP,4,2)||' - '||RTRIM(TL.BQ1TITL)  
			ELSE SUBSTR(FB.BQ1GRP,4,2)||' - '||RTRIM(FB.BQ1TITL)  
		END LVL2,  
		CASE LENGTH(RTRIM(AZGROP))  
			WHEN 3 THEN '----------->'  
			WHEN 5 THEN '----------->'  
			ELSE SUBSTR(TL.BQ1GRP,6,2)||' - '||RTRIM(TL.BQ1TITL)  
		END LVL3,  
		RTRIM(D35DES1) EBITDA,  
		RTRIM(SUBSTR(ACC,5,2)||CASE WHEN LENGTH(RTRIM(D35DES2)) >0 THEN ' - '||D35DES2 ELSE '' END) DEPARTMENT,  
		RTRIM(D35USR3) DEP_GRP,  
		AZFUT2 CURR, 
		OPEN OPEN_LOCAL,  
		NET NET_LOCAL,  
		END END_LOCAL,  
		BDGT BDGT_LOCAL
FROM 	  
	(  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'01' AS PERIOD,  
			AJ4OB01 AS OPEN,  
			AJ4TT01 AS NET,  
			AJ4OB01+AJ4TT01 AS END, AJ4CB01 BDGT  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'02' AS PERIOD,  
			AJ4OB02 AS OPEN,  
			AJ4TT02 AS NET,  
			AJ4OB02+AJ4TT02 AS END, AJ4CB02 BDGT  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'03' AS PERIOD,  
			AJ4OB03 AS OPEN,  
			AJ4TT03 AS NET,  
			AJ4OB03+AJ4TT03 AS END, AJ4CB03 BDGT  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'04' AS PERIOD,  
			AJ4OB04 AS OPEN,  
			AJ4TT04 AS NET,  
			AJ4OB04+AJ4TT04 AS END, AJ4CB04 BDGT  
		  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'05' AS PERIOD,  
			AJ4OB05 AS OPEN,  
			AJ4TT05 AS NET,  
			AJ4OB05+AJ4TT05 AS END, AJ4CB05 BDGT  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'06' AS PERIOD,  
			AJ4OB06 AS OPEN,  
			AJ4TT06 AS NET,  
			AJ4OB06+AJ4TT06 AS END,AJ4CB06 BDGT  
		  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'07' AS PERIOD,  
			AJ4OB07 AS OPEN,  
			AJ4TT07 AS NET,  
			AJ4OB07+AJ4TT07 AS END,AJ4CB07 BDGT  
		  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'08' AS PERIOD,  
			AJ4OB08 AS OPEN,  
			AJ4TT08 AS NET,  
			AJ4OB08+AJ4TT08 AS END, AJ4CB08 BDGT  
		  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'09' AS PERIOD,  
			AJ4OB09 AS OPEN,  
			AJ4TT09 AS NET,  
			AJ4OB09+AJ4TT09 AS END, AJ4CB09 BDGT  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'10' AS PERIOD,  
			AJ4OB10 AS OPEN,  
			AJ4TT10 AS NET,  
			AJ4OB10+AJ4TT10 AS END, AJ4CB10 BDGT  
		  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'11' AS PERIOD,  
			AJ4OB11 AS OPEN,  
			AJ4TT11 AS NET,  
			AJ4OB11+AJ4TT11 AS END, AJ4CB11 BDGT  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'12' AS PERIOD,  
			AJ4OB12 AS OPEN,  
			AJ4TT12 AS NET,  
			AJ4OB12+AJ4TT12 AS END, AJ4CB12 BDGT  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'13' AS PERIOD,  
			AJ4OB13 AS OPEN,  
			AJ4TT13 AS NET,  
			AJ4OB13+AJ4TT13 AS END, AJ4CB13 BDGT  
		  
		FROM  
			LGDAT.GLMT GLMT  
		  
		UNION ALL  
		  
		SELECT  
			AJ4COMP||DIGITS(AJ4GL#1)||DIGITS(AJ4GL#2) AS ACC,  
			SUBSTR(AJ4CCYY,3,2)||'14' AS PERIOD,  
			AJ4OB14 AS OPEN,  
			AJ4TT14 AS NET,  
			AJ4OB14+AJ4TT14 AS END, AJ4CB14 BDGT  
		FROM  
			LGDAT.GLMT GLMT  
	) "STACKED"  
	INNER JOIN LGDAT.MAST ON  
		DIGITS(AZCOMP)||DIGITS(AZGL#1)||DIGITS(AZGL#2) = STACKED.ACC  
	LEFT OUTER JOIN LGDAT.GGTP ON  
		D35GCDE = AZFUT3  
	LEFT OUTER JOIN LGDAT.NAME N ON  
		SUBSTR(N.A7,7,1) = SUBSTR(AZGROP,1,1) AND  
		SUBSTR(N.A7,1,1) = 'A'
	LEFT OUTER JOIN LGDAT.FGRP TL ON
		TL.BQ1GRP = AZGROP
	LEFT OUTER JOIN LGDAT.FGRP FA ON
		FA.BQ1GRP = SUBSTR(TL.BQ1GRP,1,3) AND  
		LENGTH(RTRIM(TL.BQ1GRP)) >=5  
	LEFT OUTER JOIN LGDAT.FGRP FB ON  
		FB.BQ1GRP = SUBSTR(TL.BQ1GRP,1,5) AND  
		LENGTH(RTRIM(TL.BQ1GRP)) >=7  
	LEFT OUTER JOIN RLARP.FFCRET X ON  
		X.PERD = PERIOD AND  
		X.FCUR = AZFUT2 AND  
		X.TCUR = 'US' AND  
		X.RTYP = CASE WHEN AZATYP <= 3 THEN 'ME' ELSE 'MA' END  
	LEFT OUTER JOIN RLARP.VW_FFGLPD ON  
		COMP = SUBSTR(ACC,1,2) AND  
		FSPR = PERIOD  
WHERE  
	(  
	OPEN <> 0 OR  
	NET <> 0 OR  
	END <> 0  
	)   
	RCDFMT VW_FFTBLCS ;
  
LABEL ON TABLE RLARP.VW_FFTBJCS 
	IS 'Acct - Trial Balance - Logical Consolidation' ; 
  
LABEL ON COLUMN RLARP.VW_FFTBJCS 
( 	
	FSYR IS 'Fiscal Year',
	FSPR IS 'Fiscal Period' , 
	CAPR IS 'Calendar Period' , 
	SDAT IS 'Start Date' , 
	EDAT IS 'End Date' , 
	COMP IS 'Company' , 
	PLNT IS 'Plant' , 
	ACCT IS 'Account' , 
	ACCT_DESCR IS 'Title' , 
	ACCT_AND_DESCR IS 'Account & Title',
	PRIME IS 'Prime' , 
	PRIMESUB IS 'Prime & Sub' , 
	STATUS IS 'Status' , 
	GLCC IS 'GL Category Code' , 
	ELIM_TYPE IS 'Elimiatation Type' , 
	ELIM_REL IS 'Elimination Relationship' , 
	ELIM_DFGRP IS 'Destination Account Group' , 
	ELIM_CO IS 'Eliminating Company' , 
	FGRP IS 'Account Group' , 
	STMT IS 'Statement' , 
	LVL0 IS 'Level 0' , 
	LVL1 IS 'Level 1' , 
	LVL2 IS 'Level 2' , 
	LVL3 IS 'Level 3' , 
	EBITDA IS 'EBITDA Categorization' , 
	DEPARTMENT IS 'Department & Description' , 
	DEP_GRP IS 'Department Group' , 
	CURR IS 'Currency' , 
	OPEN_LOCAL IS 'Openign Balance in Local Currency' , 
	NET_LOCAL IS 'Net Activity in Local Currency' , 
	END_LOCAL IS 'Ending Balance in Local Currency' , 
	BDGT_LOCAL IS 'Budget in Local Currency'
	) ; 
  
LABEL ON COLUMN RLARP.VW_FFTBJCS 
( 
	FSYR TEXT IS 'Fiscal Year',
	FSPR TEXT IS 'Fiscal Period' , 
	CAPR TEXT IS 'Calendar Period' , 
	SDAT TEXT IS 'Start Date' , 
	EDAT TEXT IS 'End Date' , 
	COMP TEXT IS 'Company' , 
	PLNT TEXT IS 'Plant' , 
	ACCT TEXT IS 'Account' , 
	ACCT_DESCR TEXT IS 'Account Description' , 
	acct_and_descr TEXT is 'Account & Description',
	PRIME TEXT IS 'Prime' , 
	PRIMESUB text is 'Prime & Sub',
	STATUS TEXT IS 'Status' , 
	GLCC TEXT IS 'GL Category Code' , 
	ELIM_TYPE TEXT IS 'Elimiatation Type' , 
	ELIM_REL TEXT IS 'Elimination Relationship' , 
	ELIM_DFGRP TEXT IS 'Destination Account Group' , 
	ELIM_CO TEXT IS 'Eliminating Company' , 
	FGRP TEXT IS 'Account Group' , 
	STMT TEXT IS 'Statement' , 
	LVL0 TEXT IS 'Level 0' , 
	LVL1 TEXT IS 'Level 1' , 
	LVL2 TEXT IS 'Level 2' , 
	LVL3 TEXT IS 'Level 3' , 
	EBITDA TEXT IS 'EBITDA Categorization' , 
	DEPARTMENT TEXT IS 'Department & Description' , 
	DEP_GRP TEXT IS 'Department Group' , 
	CURR TEXT IS 'Currency' , 
	OPEN_LOCAL TEXT IS 'Openign Balance in Local Currency' , 
	NET_LOCAL TEXT IS 'Net Activity in Local Currency' , 
	END_LOCAL TEXT IS 'Ending Balance in Local Currency' , 
	BDGT_LOCAL TEXT IS 'Budget in Local Currency'
 ) ; 
